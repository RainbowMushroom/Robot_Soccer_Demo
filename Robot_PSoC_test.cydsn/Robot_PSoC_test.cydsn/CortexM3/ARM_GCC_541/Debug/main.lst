ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ENCODER_R_OVF_ISR_vect,"ax",%progbits
  20              		.align	2
  21              		.global	ENCODER_R_OVF_ISR_vect
  22              		.thumb
  23              		.thumb_func
  24              		.type	ENCODER_R_OVF_ISR_vect, %function
  25              	ENCODER_R_OVF_ISR_vect:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * SOCCER ROBOT EMBEDDED CODE
   4:main.c        ****  * VERSION 1.0
   5:main.c        ****  * COMPILED FOR THE PsOC 5LP PROTOTYPING KIT
   6:main.c        ****  * CY8CKIT-059 WHICH IS A CY8C5888LTI-LP097 DEVICE
   7:main.c        ****  *
   8:main.c        ****  * AUTHORED BY CHAY322 ET. AL. IN THE SUMMER OF 2021
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** /* TO FIND MORE ON DOUBLE BUFFERING UART SEE https://www.allaboutcircuits.com/technical-articles/ua
  13:main.c        ****    This source is potentially useful as well https://community.cypress.com/t5/PSoC-5-3-1-MCU/UART-I
  14:main.c        **** #include "project.h"
  15:main.c        **** #include "encoder.h"
  16:main.c        **** #include "robotmove.h"
  17:main.c        **** #include "robot_ID.h"
  18:main.c        **** #include <stdio.h>
  19:main.c        **** #include <stdbool.h>
  20:main.c        **** #include <string.h>
  21:main.c        **** /* *********************************************** */
  22:main.c        **** /* ************USER DEFINED MACROS**************** */
  23:main.c        **** /* *********************************************** */
  24:main.c        **** #define ENCODER_TIMER_ARRAY_SIZE 5
  25:main.c        **** #define STR_LEN_MAX 16 //For transmitting uint and doubles over UART.  May not be necessary over th
  26:main.c        **** 
  27:main.c        **** //Hardware parameters
  28:main.c        **** #define ENCODER_COUNTS 200 //Encoder pulses generated in a full 360 rotation
  29:main.c        **** #define WHEEL_DIAMETER 10 //Measured in centimeters
  30:main.c        **** #define GEAR_RATIO 8 //Large gear teeth / small gear teeth.  Number of turns of the motor shaft whi
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 2


  31:main.c        **** #define MOTOR_MAX_RPM 11600 //Motor rated operating speed.  This is the maximum angv the motor will
  32:main.c        **** 
  33:main.c        **** 
  34:main.c        **** /* *********************************************** */
  35:main.c        **** /* ***************GLOBAL VARIABLES**************** */
  36:main.c        **** /* *********************************************** */
  37:main.c        **** //Receive double buffering
  38:main.c        **** //Initially buffer_1 will be pointed to by the receive pointer, and buffer 2
  39:main.c        **** //will be pointed to by the processing buffer pointer
  40:main.c        **** volatile char buffer_1[STR_LEN_MAX] = {};
  41:main.c        **** volatile char buffer_2[STR_LEN_MAX]={};
  42:main.c        **** volatile char *receiving_buffer_ptr;
  43:main.c        **** volatile char *processing_buffer_ptr;
  44:main.c        **** volatile uint8_t rx_buffer_size = 0;
  45:main.c        **** 
  46:main.c        **** //For indicating whether to start the timer or start a capture
  47:main.c        **** volatile bool timerL_on = false;
  48:main.c        **** volatile bool timerR_on = false;
  49:main.c        **** 
  50:main.c        **** //For storing multiple historic encoder timer values for accurate speed calculations
  51:main.c        **** volatile uint16_t timerL_count[ENCODER_TIMER_ARRAY_SIZE] = {};
  52:main.c        **** volatile uint16_t timerR_count[ENCODER_TIMER_ARRAY_SIZE] = {};
  53:main.c        **** //Indicates which times to disregard if the timer has overflowed 
  54:main.c        **** volatile bool timerL_overflows[ENCODER_TIMER_ARRAY_SIZE] = {};
  55:main.c        **** volatile bool timerR_overflows[ENCODER_TIMER_ARRAY_SIZE] = {};
  56:main.c        **** //For accessing the global arrays above
  57:main.c        **** volatile uint8_t timerL_index = 0;
  58:main.c        **** volatile uint8_t timerR_index = 0;
  59:main.c        **** 
  60:main.c        **** 
  61:main.c        **** //For PID control
  62:main.c        **** PID_DATA pid_linv;
  63:main.c        **** PID_DATA pid_angv;
  64:main.c        **** /* *********************************************** */
  65:main.c        **** /* ***********INTERRUPT SERVICE ROUTINES********** */
  66:main.c        **** /* *********************************************** */
  67:main.c        **** //Encoder timer ISRS
  68:main.c        **** 
  69:main.c        **** /* ISR: ENCODER_R_OVF_ISR_vect
  70:main.c        ****  * Purpose: Set the bit corresponding to the R encoder timer measurement that the timer has
  71:main.c        ****  *          overflowed, allowing the get_velocity function to determine a speed of 0 rad/s
  72:main.c        ****  * Modifies: bool timerR_overflows[] -  indicates which readings in timerR_count[] that didn't 
  73:main.c        ****  *                                      measure an overflow of the counter
  74:main.c        ****  *           uint8_t timerR_index - the index is updated
  75:main.c        ****  *                      
  76:main.c        ****  */
  77:main.c        **** CY_ISR(ENCODER_R_OVF_ISR_vect){
  28              		.loc 1 77 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  78:main.c        ****     timerR_overflows[timerR_index] = true;
  33              		.loc 1 78 0
  34 0000 094B     		ldr	r3, .L4
  35 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  36 0004 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 3


  37 0006 0121     		movs	r1, #1
  38 0008 1171     		strb	r1, [r2, #4]
  79:main.c        ****     if(timerR_index < ENCODER_TIMER_ARRAY_SIZE){
  39              		.loc 1 79 0
  40 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  41 000c DBB2     		uxtb	r3, r3
  42 000e 042B     		cmp	r3, #4
  43 0010 05D8     		bhi	.L2
  80:main.c        ****         timerR_index++;
  44              		.loc 1 80 0
  45 0012 054A     		ldr	r2, .L4
  46 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  47 0016 0B44     		add	r3, r3, r1
  48 0018 DBB2     		uxtb	r3, r3
  49 001a 1370     		strb	r3, [r2]
  50 001c 7047     		bx	lr
  51              	.L2:
  81:main.c        ****     } else {
  82:main.c        ****         timerR_index = 0;   
  52              		.loc 1 82 0
  53 001e 0022     		movs	r2, #0
  54 0020 014B     		ldr	r3, .L4
  55 0022 1A70     		strb	r2, [r3]
  56 0024 7047     		bx	lr
  57              	.L5:
  58 0026 00BF     		.align	2
  59              	.L4:
  60 0028 00000000 		.word	.LANCHOR0
  61              		.cfi_endproc
  62              	.LFE64:
  63              		.size	ENCODER_R_OVF_ISR_vect, .-ENCODER_R_OVF_ISR_vect
  64              		.section	.text.ENCODER_L_OVF_ISR_vect,"ax",%progbits
  65              		.align	2
  66              		.global	ENCODER_L_OVF_ISR_vect
  67              		.thumb
  68              		.thumb_func
  69              		.type	ENCODER_L_OVF_ISR_vect, %function
  70              	ENCODER_L_OVF_ISR_vect:
  71              	.LFB65:
  83:main.c        ****     }
  84:main.c        **** }
  85:main.c        **** /* ISR: ENCODER_L_OVF_ISR_vect
  86:main.c        ****  * Purpose: Set the bit corresponding to the R encoder timer measurement that the timer has
  87:main.c        ****  *          overflowed, allowing the get_velocity function to determine a speed of 0 rad/s
  88:main.c        ****  * Modifies: bool timerL_overflows[] -  indicates which readings in timerR_count[] that didn't 
  89:main.c        ****  *                                      measure an overflow of the counter
  90:main.c        ****  *           uint8_t timerL_index - the index is updated
  91:main.c        ****  *                      
  92:main.c        ****  */
  93:main.c        **** CY_ISR(ENCODER_L_OVF_ISR_vect){
  72              		.loc 1 93 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  94:main.c        ****     timerL_overflows[timerL_index] = true;
  77              		.loc 1 94 0
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 4


  78 0000 094B     		ldr	r3, .L9
  79 0002 5A7A     		ldrb	r2, [r3, #9]	@ zero_extendqisi2
  80 0004 1A44     		add	r2, r2, r3
  81 0006 0121     		movs	r1, #1
  82 0008 1173     		strb	r1, [r2, #12]
  95:main.c        ****     if(timerL_index < ENCODER_TIMER_ARRAY_SIZE){
  83              		.loc 1 95 0
  84 000a 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
  85 000c DBB2     		uxtb	r3, r3
  86 000e 042B     		cmp	r3, #4
  87 0010 05D8     		bhi	.L7
  96:main.c        ****         timerL_index++;
  88              		.loc 1 96 0
  89 0012 054A     		ldr	r2, .L9
  90 0014 537A     		ldrb	r3, [r2, #9]	@ zero_extendqisi2
  91 0016 0B44     		add	r3, r3, r1
  92 0018 DBB2     		uxtb	r3, r3
  93 001a 5372     		strb	r3, [r2, #9]
  94 001c 7047     		bx	lr
  95              	.L7:
  97:main.c        ****     } else {
  98:main.c        ****         timerL_index = 0;   
  96              		.loc 1 98 0
  97 001e 0022     		movs	r2, #0
  98 0020 014B     		ldr	r3, .L9
  99 0022 5A72     		strb	r2, [r3, #9]
 100 0024 7047     		bx	lr
 101              	.L10:
 102 0026 00BF     		.align	2
 103              	.L9:
 104 0028 00000000 		.word	.LANCHOR0
 105              		.cfi_endproc
 106              	.LFE65:
 107              		.size	ENCODER_L_OVF_ISR_vect, .-ENCODER_L_OVF_ISR_vect
 108              		.section	.text.TX_ISR_vect,"ax",%progbits
 109              		.align	2
 110              		.global	TX_ISR_vect
 111              		.thumb
 112              		.thumb_func
 113              		.type	TX_ISR_vect, %function
 114              	TX_ISR_vect:
 115              	.LFB68:
  99:main.c        ****     }
 100:main.c        **** }
 101:main.c        **** //Encoder pin ISRS
 102:main.c        **** /* ISR: ENC_R_ISR_vect
 103:main.c        ****  * Purpose: Start the encoder timer or set the encoder capture registers to 
 104:main.c        ****  *          generate a timer capture, depending on which has occured first
 105:main.c        ****  * Modifies: bool timerL_overflows[] -  indicates which readings in timerR_count[] that didn't 
 106:main.c        ****  *                                      measure an overflow of the counter
 107:main.c        ****  *           uint8_t timerL_index - the index is updated
 108:main.c        ****  *                      
 109:main.c        ****  */
 110:main.c        **** CY_ISR(ENC_R_ISR_vect){
 111:main.c        ****     if(timerR_on){
 112:main.c        ****         //This marks the end of a time measurement between encoder pulses
 113:main.c        ****         //Force a capture on the encoder R timer and store it in the global array
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 5


 114:main.c        ****         timerR_count[timerR_index] = Encoder_R_Timer_ReadCounter();
 115:main.c        ****         //Clear the capture FIFO for the next reading
 116:main.c        ****         Encoder_R_Timer_ClearFIFO();
 117:main.c        ****         //Stop the timer until next pulse is detected
 118:main.c        ****         Encoder_R_Timer_Stop();
 119:main.c        ****         timerR_on = false;
 120:main.c        ****         
 121:main.c        ****         //Increment the timer index
 122:main.c        ****         if(timerR_index < ENCODER_TIMER_ARRAY_SIZE){
 123:main.c        ****             timerR_index++;
 124:main.c        ****         } else {
 125:main.c        ****             timerR_index = 0;   
 126:main.c        ****         }
 127:main.c        ****     } else {
 128:main.c        ****         //Start the timer to begin a time sample
 129:main.c        ****         Encoder_R_Timer_Start();
 130:main.c        ****         timerR_on = true;
 131:main.c        ****     }
 132:main.c        **** }
 133:main.c        **** 
 134:main.c        **** /* ISR: ENC_L_ISR_vect
 135:main.c        ****  * Purpose: Start the encoder timer or set the encoder capture registers to 
 136:main.c        ****  *          generate a timer capture, depending on which has occured first
 137:main.c        ****  * Modifies: bool timerL_overflows[] -  indicates which readings in timerL_count[] that didn't 
 138:main.c        ****  *                                      measure an overflow of the counter
 139:main.c        ****  *           uint8_t timerL_index - the index is updated
 140:main.c        ****  *                      
 141:main.c        ****  */
 142:main.c        **** CY_ISR(ENC_L_ISR_vect){
 143:main.c        ****     if(timerL_on){
 144:main.c        ****         //This marks the end of a time measurement between encoder pulses
 145:main.c        ****         //Force a capture on the encoder L timer and store it in the global array
 146:main.c        ****         timerL_count[timerL_index] = Encoder_L_Timer_ReadCounter();
 147:main.c        ****         //Clear the capture FIFO for the next reading
 148:main.c        ****         Encoder_L_Timer_ClearFIFO();
 149:main.c        ****         //Stop the timer until next pulse is detected
 150:main.c        ****         Encoder_L_Timer_Stop();
 151:main.c        ****         timerL_on = false;
 152:main.c        ****         
 153:main.c        ****         //Increment the timer index
 154:main.c        ****         if(timerL_index < ENCODER_TIMER_ARRAY_SIZE){
 155:main.c        ****             timerL_index++;
 156:main.c        ****         }  else {
 157:main.c        ****             timerL_index = 0;   
 158:main.c        ****         }
 159:main.c        ****     } else {
 160:main.c        ****         //Start the timer to begin a time sample
 161:main.c        ****         Encoder_L_Timer_Start();
 162:main.c        ****         timerL_on = true;
 163:main.c        ****     }
 164:main.c        **** }
 165:main.c        **** //USART ISRS
 166:main.c        **** /* ISR: TX_ISR_vect
 167:main.c        ****  * Purpose: Clear the buffer once the transmit has completed for the next transmission
 168:main.c        ****  * Modifies: bool timerL_overflows[] -  indicates which readings in timerL_count[] that didn't 
 169:main.c        ****  *                                      measure an overflow of the counter
 170:main.c        ****  *           uint8_t timerL_index - the index is updated
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 6


 171:main.c        ****  *                      
 172:main.c        ****  */
 173:main.c        **** CY_ISR(TX_ISR_vect){
 116              		.loc 1 173 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121 0000 7047     		bx	lr
 122              		.cfi_endproc
 123              	.LFE68:
 124              		.size	TX_ISR_vect, .-TX_ISR_vect
 125 0002 00BF     		.section	.text.ENC_R_ISR_vect,"ax",%progbits
 126              		.align	2
 127              		.global	ENC_R_ISR_vect
 128              		.thumb
 129              		.thumb_func
 130              		.type	ENC_R_ISR_vect, %function
 131              	ENC_R_ISR_vect:
 132              	.LFB66:
 110:main.c        ****     if(timerR_on){
 133              		.loc 1 110 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 110:main.c        ****     if(timerR_on){
 137              		.loc 1 110 0
 138 0000 38B5     		push	{r3, r4, r5, lr}
 139              		.cfi_def_cfa_offset 16
 140              		.cfi_offset 3, -16
 141              		.cfi_offset 4, -12
 142              		.cfi_offset 5, -8
 143              		.cfi_offset 14, -4
 111:main.c        ****         //This marks the end of a time measurement between encoder pulses
 144              		.loc 1 111 0
 145 0002 134B     		ldr	r3, .L17
 146 0004 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 147 0006 13F0FF0F 		tst	r3, #255
 148 000a 1AD0     		beq	.L13
 114:main.c        ****         //Clear the capture FIFO for the next reading
 149              		.loc 1 114 0
 150 000c 104D     		ldr	r5, .L17
 151 000e 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 152 0010 E4B2     		uxtb	r4, r4
 153 0012 FFF7FEFF 		bl	Encoder_R_Timer_ReadCounter
 154              	.LVL0:
 155 0016 05EB4404 		add	r4, r5, r4, lsl #1
 156 001a A082     		strh	r0, [r4, #20]	@ movhi
 116:main.c        ****         //Stop the timer until next pulse is detected
 157              		.loc 1 116 0
 158 001c FFF7FEFF 		bl	Encoder_R_Timer_ClearFIFO
 159              	.LVL1:
 118:main.c        ****         timerR_on = false;
 160              		.loc 1 118 0
 161 0020 FFF7FEFF 		bl	Encoder_R_Timer_Stop
 162              	.LVL2:
 119:main.c        ****         
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 7


 163              		.loc 1 119 0
 164 0024 0023     		movs	r3, #0
 165 0026 6B74     		strb	r3, [r5, #17]
 122:main.c        ****             timerR_index++;
 166              		.loc 1 122 0
 167 0028 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 168 002a DBB2     		uxtb	r3, r3
 169 002c 042B     		cmp	r3, #4
 170 002e 04D8     		bhi	.L14
 123:main.c        ****         } else {
 171              		.loc 1 123 0
 172 0030 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 173 0032 0133     		adds	r3, r3, #1
 174 0034 DBB2     		uxtb	r3, r3
 175 0036 2B70     		strb	r3, [r5]
 176 0038 38BD     		pop	{r3, r4, r5, pc}
 177              	.L14:
 125:main.c        ****         }
 178              		.loc 1 125 0
 179 003a 0022     		movs	r2, #0
 180 003c 044B     		ldr	r3, .L17
 181 003e 1A70     		strb	r2, [r3]
 182 0040 38BD     		pop	{r3, r4, r5, pc}
 183              	.L13:
 129:main.c        ****         timerR_on = true;
 184              		.loc 1 129 0
 185 0042 FFF7FEFF 		bl	Encoder_R_Timer_Start
 186              	.LVL3:
 130:main.c        ****     }
 187              		.loc 1 130 0
 188 0046 0122     		movs	r2, #1
 189 0048 014B     		ldr	r3, .L17
 190 004a 5A74     		strb	r2, [r3, #17]
 191 004c 38BD     		pop	{r3, r4, r5, pc}
 192              	.L18:
 193 004e 00BF     		.align	2
 194              	.L17:
 195 0050 00000000 		.word	.LANCHOR0
 196              		.cfi_endproc
 197              	.LFE66:
 198              		.size	ENC_R_ISR_vect, .-ENC_R_ISR_vect
 199              		.section	.text.ENC_L_ISR_vect,"ax",%progbits
 200              		.align	2
 201              		.global	ENC_L_ISR_vect
 202              		.thumb
 203              		.thumb_func
 204              		.type	ENC_L_ISR_vect, %function
 205              	ENC_L_ISR_vect:
 206              	.LFB67:
 142:main.c        ****     if(timerL_on){
 207              		.loc 1 142 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211 0000 38B5     		push	{r3, r4, r5, lr}
 212              		.cfi_def_cfa_offset 16
 213              		.cfi_offset 3, -16
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 8


 214              		.cfi_offset 4, -12
 215              		.cfi_offset 5, -8
 216              		.cfi_offset 14, -4
 143:main.c        ****         //This marks the end of a time measurement between encoder pulses
 217              		.loc 1 143 0
 218 0002 134B     		ldr	r3, .L24
 219 0004 9B7F     		ldrb	r3, [r3, #30]	@ zero_extendqisi2
 220 0006 13F0FF0F 		tst	r3, #255
 221 000a 1AD0     		beq	.L20
 146:main.c        ****         //Clear the capture FIFO for the next reading
 222              		.loc 1 146 0
 223 000c 104D     		ldr	r5, .L24
 224 000e 6C7A     		ldrb	r4, [r5, #9]	@ zero_extendqisi2
 225 0010 E4B2     		uxtb	r4, r4
 226 0012 FFF7FEFF 		bl	Encoder_L_Timer_ReadCounter
 227              	.LVL4:
 228 0016 05EB4404 		add	r4, r5, r4, lsl #1
 229 001a 2084     		strh	r0, [r4, #32]	@ movhi
 148:main.c        ****         //Stop the timer until next pulse is detected
 230              		.loc 1 148 0
 231 001c FFF7FEFF 		bl	Encoder_L_Timer_ClearFIFO
 232              	.LVL5:
 150:main.c        ****         timerL_on = false;
 233              		.loc 1 150 0
 234 0020 FFF7FEFF 		bl	Encoder_L_Timer_Stop
 235              	.LVL6:
 151:main.c        ****         
 236              		.loc 1 151 0
 237 0024 0023     		movs	r3, #0
 238 0026 AB77     		strb	r3, [r5, #30]
 154:main.c        ****             timerL_index++;
 239              		.loc 1 154 0
 240 0028 6B7A     		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 241 002a DBB2     		uxtb	r3, r3
 242 002c 042B     		cmp	r3, #4
 243 002e 04D8     		bhi	.L21
 155:main.c        ****         }  else {
 244              		.loc 1 155 0
 245 0030 6B7A     		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 246 0032 0133     		adds	r3, r3, #1
 247 0034 DBB2     		uxtb	r3, r3
 248 0036 6B72     		strb	r3, [r5, #9]
 249 0038 38BD     		pop	{r3, r4, r5, pc}
 250              	.L21:
 157:main.c        ****         }
 251              		.loc 1 157 0
 252 003a 0022     		movs	r2, #0
 253 003c 044B     		ldr	r3, .L24
 254 003e 5A72     		strb	r2, [r3, #9]
 255 0040 38BD     		pop	{r3, r4, r5, pc}
 256              	.L20:
 161:main.c        ****         timerL_on = true;
 257              		.loc 1 161 0
 258 0042 FFF7FEFF 		bl	Encoder_L_Timer_Start
 259              	.LVL7:
 162:main.c        ****     }
 260              		.loc 1 162 0
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 9


 261 0046 0122     		movs	r2, #1
 262 0048 014B     		ldr	r3, .L24
 263 004a 9A77     		strb	r2, [r3, #30]
 264 004c 38BD     		pop	{r3, r4, r5, pc}
 265              	.L25:
 266 004e 00BF     		.align	2
 267              	.L24:
 268 0050 00000000 		.word	.LANCHOR0
 269              		.cfi_endproc
 270              	.LFE67:
 271              		.size	ENC_L_ISR_vect, .-ENC_L_ISR_vect
 272              		.section	.text.RX_ISR_vect,"ax",%progbits
 273              		.align	2
 274              		.global	RX_ISR_vect
 275              		.thumb
 276              		.thumb_func
 277              		.type	RX_ISR_vect, %function
 278              	RX_ISR_vect:
 279              	.LFB69:
 174:main.c        **** 
 175:main.c        ****     
 176:main.c        **** }
 177:main.c        **** /* ISR: RX_ISR_vect
 178:main.c        ****  * Purpose: Store characters received from UART into the receive buffer
 179:main.c        ****  * Modifies: char *receive_buffer_ptr[] - the input character buffer
 180:main.c        ****  *                                         which is either buffer_1 or buffer_2
 181:main.c        ****  *           uint8_t rx_buffer_size - the index of the rx buffer is updated
 182:main.c        ****  *                      
 183:main.c        ****  */
 184:main.c        **** CY_ISR(RX_ISR_vect){
 280              		.loc 1 184 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284 0000 08B5     		push	{r3, lr}
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 3, -8
 287              		.cfi_offset 14, -4
 185:main.c        ****     char byte_received;
 186:main.c        ****     //Check for the FIFO_NOEMPTY flag which indicates the FIFO has data available to read
 187:main.c        ****     if(UART_ReadRxStatus() & UART_RX_STS_FIFO_NOTEMPTY){
 288              		.loc 1 187 0
 289 0002 FFF7FEFF 		bl	UART_ReadRxStatus
 290              	.LVL8:
 291 0006 10F0200F 		tst	r0, #32
 292 000a 0ED0     		beq	.L26
 188:main.c        ****         byte_received = UART_GetChar();
 293              		.loc 1 188 0
 294 000c FFF7FEFF 		bl	UART_GetChar
 295              	.LVL9:
 189:main.c        ****         receiving_buffer_ptr[rx_buffer_size] = byte_received;
 296              		.loc 1 189 0
 297 0010 064A     		ldr	r2, .L29
 298 0012 92F82A30 		ldrb	r3, [r2, #42]	@ zero_extendqisi2
 299 0016 DBB2     		uxtb	r3, r3
 300 0018 0549     		ldr	r1, .L29+4
 301 001a 0968     		ldr	r1, [r1]
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 10


 302 001c C854     		strb	r0, [r1, r3]
 190:main.c        ****         rx_buffer_size++;
 303              		.loc 1 190 0
 304 001e 92F82A30 		ldrb	r3, [r2, #42]	@ zero_extendqisi2
 305 0022 0133     		adds	r3, r3, #1
 306 0024 DBB2     		uxtb	r3, r3
 307 0026 82F82A30 		strb	r3, [r2, #42]
 308              	.LVL10:
 309              	.L26:
 310 002a 08BD     		pop	{r3, pc}
 311              	.L30:
 312              		.align	2
 313              	.L29:
 314 002c 00000000 		.word	.LANCHOR0
 315 0030 00000000 		.word	receiving_buffer_ptr
 316              		.cfi_endproc
 317              	.LFE69:
 318              		.size	RX_ISR_vect, .-RX_ISR_vect
 319              		.section	.text.main,"ax",%progbits
 320              		.align	2
 321              		.global	main
 322              		.thumb
 323              		.thumb_func
 324              		.type	main, %function
 325              	main:
 326              	.LFB70:
 191:main.c        ****     }
 192:main.c        **** }
 193:main.c        **** /* *********************************************** */
 194:main.c        **** /* ************USER DEFINED FUNCTIONS************* */
 195:main.c        **** /* *********************************************** */
 196:main.c        **** /* UART PROCESSING - ROBOT COMMAND PROCESSING */
 197:main.c        **** typedef struct{
 198:main.c        ****     double linv, angv;
 199:main.c        **** } ROBOT_COMMAND;
 200:main.c        **** /* *********************************************** */
 201:main.c        **** /* **********************MAIN********************* */
 202:main.c        **** /* *********************************************** */
 203:main.c        **** int main(void)
 204:main.c        **** {
 327              		.loc 1 204 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331 0000 10B5     		push	{r4, lr}
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 4, -8
 334              		.cfi_offset 14, -4
 205:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 335              		.loc 1 205 0
 336              		.syntax unified
 337              	@ 205 "main.c" 1
 338 0002 62B6     		CPSIE   i
 339              	@ 0 "" 2
 206:main.c        **** 
 207:main.c        ****     //Ensure reset lines are low initially
 208:main.c        ****     PWM_RESET_Write(0b00);
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 11


 340              		.loc 1 208 0
 341              		.thumb
 342              		.syntax unified
 343 0004 0020     		movs	r0, #0
 344 0006 FFF7FEFF 		bl	PWM_RESET_Write
 345              	.LVL11:
 209:main.c        ****     ENCODER_TMR_RESET_Write(0b00);
 346              		.loc 1 209 0
 347 000a 0020     		movs	r0, #0
 348 000c FFF7FEFF 		bl	ENCODER_TMR_RESET_Write
 349              	.LVL12:
 210:main.c        ****     
 211:main.c        ****     //Enable the USART
 212:main.c        ****     UART_Start();
 350              		.loc 1 212 0
 351 0010 FFF7FEFF 		bl	UART_Start
 352              	.LVL13:
 213:main.c        ****     UART_EnableRxInt();
 353              		.loc 1 213 0
 354 0014 0822     		movs	r2, #8
 355 0016 1E4B     		ldr	r3, .L35
 356 0018 1A60     		str	r2, [r3]
 214:main.c        ****     
 215:main.c        ****     //Configure the initial pointers for the USART RX isr and the main function
 216:main.c        ****     receiving_buffer_ptr = buffer_1;
 357              		.loc 1 216 0
 358 001a 1E4B     		ldr	r3, .L35+4
 359 001c 03F12C01 		add	r1, r3, #44
 360 0020 1D4A     		ldr	r2, .L35+8
 361 0022 1160     		str	r1, [r2]
 217:main.c        ****     processing_buffer_ptr = buffer_2;
 362              		.loc 1 217 0
 363 0024 3C33     		adds	r3, r3, #60
 364 0026 1D4A     		ldr	r2, .L35+12
 365 0028 1360     		str	r3, [r2]
 366              	.LVL14:
 218:main.c        ****     uint8_t read_buffer_size = 0; //The size of the buffer the main function will read from
 219:main.c        ****     
 220:main.c        ****     //Enable and configure all interrupts
 221:main.c        ****     tx_isr_StartEx(TX_ISR_vect);
 367              		.loc 1 221 0
 368 002a 1D48     		ldr	r0, .L35+16
 369 002c FFF7FEFF 		bl	tx_isr_StartEx
 370              	.LVL15:
 222:main.c        ****     rx_isr_StartEx(RX_ISR_vect);
 371              		.loc 1 222 0
 372 0030 1C48     		ldr	r0, .L35+20
 373 0032 FFF7FEFF 		bl	rx_isr_StartEx
 374              	.LVL16:
 223:main.c        ****     ENCODER_R_OVF_ISR_StartEx(ENCODER_R_OVF_ISR_vect);
 375              		.loc 1 223 0
 376 0036 1C48     		ldr	r0, .L35+24
 377 0038 FFF7FEFF 		bl	ENCODER_R_OVF_ISR_StartEx
 378              	.LVL17:
 224:main.c        ****     ENCODER_L_OVF_ISR_StartEx(ENCODER_L_OVF_ISR_vect);
 379              		.loc 1 224 0
 380 003c 1B48     		ldr	r0, .L35+28
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 12


 381 003e FFF7FEFF 		bl	ENCODER_L_OVF_ISR_StartEx
 382              	.LVL18:
 225:main.c        ****     ENC_R_ISR_StartEx(ENC_R_ISR_vect);
 383              		.loc 1 225 0
 384 0042 1B48     		ldr	r0, .L35+32
 385 0044 FFF7FEFF 		bl	ENC_R_ISR_StartEx
 386              	.LVL19:
 226:main.c        ****     ENC_L_ISR_StartEx(ENC_L_ISR_vect);
 387              		.loc 1 226 0
 388 0048 1A48     		ldr	r0, .L35+36
 389 004a FFF7FEFF 		bl	ENC_L_ISR_StartEx
 390              	.LVL20:
 227:main.c        ****     
 228:main.c        ****     //Get the robot id
 229:main.c        ****     uint8_t robot_id = get_robot_ID();
 391              		.loc 1 229 0
 392 004e FFF7FEFF 		bl	get_robot_ID
 393              	.LVL21:
 230:main.c        ****     
 231:main.c        ****     //Commands from USART.  Initialise to 0[m/s], 0[rad/s]
 232:main.c        ****     ROBOT_COMMAND *current_command;
 233:main.c        ****     current_command->angv = 0;
 394              		.loc 1 233 0
 395 0052 0020     		movs	r0, #0
 396 0054 0021     		movs	r1, #0
 397 0056 0023     		movs	r3, #0
 398 0058 C3E90201 		strd	r0, [r3, #8]
 234:main.c        ****     current_command->linv = 0;
 399              		.loc 1 234 0
 400 005c C3E90001 		strd	r0, [r3]
 401              	.LVL22:
 402              	.L32:
 235:main.c        ****     
 236:main.c        ****     //Target velocities which the command from the USART requires the robot to move at
 237:main.c        ****     double set_robot_angv;
 238:main.c        ****     double set_robot_linv;
 239:main.c        ****     //PWM_L_Start();
 240:main.c        ****     //PWM_R_Start();
 241:main.c        ****     //PWM_L_Enable();
 242:main.c        ****     //PWM_R_Enable();
 243:main.c        **** 
 244:main.c        ****     for(;;){
 245:main.c        ****         /* Get transmission command from USART */
 246:main.c        ****         if(rx_buffer_size > 8){ //Condition when main is ready to read the rx data buffer
 403              		.loc 1 246 0
 404 0060 0C4B     		ldr	r3, .L35+4
 405 0062 93F82A30 		ldrb	r3, [r3, #42]	@ zero_extendqisi2
 406 0066 DBB2     		uxtb	r3, r3
 407 0068 082B     		cmp	r3, #8
 408 006a F9D9     		bls	.L32
 409              	.LBB2:
 247:main.c        ****             //Swap buffers the pointers point to to read what the ISR has been writing to
 248:main.c        ****             
 249:main.c        ****             //****CRITICAL_SECTION
 250:main.c        ****             UART_DisableRxInt();    
 410              		.loc 1 250 0
 411 006c 0823     		movs	r3, #8
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 13


 412 006e 124A     		ldr	r2, .L35+40
 413 0070 1360     		str	r3, [r2]
 251:main.c        ****                 volatile char *temp = receiving_buffer_ptr;
 414              		.loc 1 251 0
 415 0072 0949     		ldr	r1, .L35+8
 416 0074 0868     		ldr	r0, [r1]
 417              	.LVL23:
 252:main.c        ****                 receiving_buffer_ptr = processing_buffer_ptr;
 418              		.loc 1 252 0
 419 0076 094A     		ldr	r2, .L35+12
 420 0078 1468     		ldr	r4, [r2]
 421 007a 0C60     		str	r4, [r1]
 253:main.c        ****                 processing_buffer_ptr = temp;
 422              		.loc 1 253 0
 423 007c 1060     		str	r0, [r2]
 254:main.c        ****             
 255:main.c        ****                 //Save the size of the buffer written to by the UXART RX isr
 256:main.c        ****                 read_buffer_size = rx_buffer_size;
 424              		.loc 1 256 0
 425 007e 054A     		ldr	r2, .L35+4
 426 0080 92F82A10 		ldrb	r1, [r2, #42]	@ zero_extendqisi2
 257:main.c        ****                 //Reset the rx_buffer_size for when the RX isr writes to the new buffer
 258:main.c        ****                 rx_buffer_size = 0;
 427              		.loc 1 258 0
 428 0084 0021     		movs	r1, #0
 429 0086 82F82A10 		strb	r1, [r2, #42]
 259:main.c        ****             UART_EnableRxInt();
 430              		.loc 1 259 0
 431 008a 014A     		ldr	r2, .L35
 432 008c 1360     		str	r3, [r2]
 433 008e E7E7     		b	.L32
 434              	.L36:
 435              		.align	2
 436              	.L35:
 437 0090 00E100E0 		.word	-536813312
 438 0094 00000000 		.word	.LANCHOR0
 439 0098 00000000 		.word	receiving_buffer_ptr
 440 009c 00000000 		.word	processing_buffer_ptr
 441 00a0 00000000 		.word	TX_ISR_vect
 442 00a4 00000000 		.word	RX_ISR_vect
 443 00a8 00000000 		.word	ENCODER_R_OVF_ISR_vect
 444 00ac 00000000 		.word	ENCODER_L_OVF_ISR_vect
 445 00b0 00000000 		.word	ENC_R_ISR_vect
 446 00b4 00000000 		.word	ENC_L_ISR_vect
 447 00b8 80E100E0 		.word	-536813184
 448              	.LBE2:
 449              		.cfi_endproc
 450              	.LFE70:
 451              		.size	main, .-main
 452              		.comm	pid_angv,40,8
 453              		.comm	pid_linv,40,8
 454              		.global	timerR_index
 455              		.global	timerL_index
 456              		.global	timerR_overflows
 457              		.global	timerL_overflows
 458              		.global	timerR_count
 459              		.global	timerL_count
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 14


 460              		.global	timerR_on
 461              		.global	timerL_on
 462              		.global	rx_buffer_size
 463              		.comm	processing_buffer_ptr,4,4
 464              		.comm	receiving_buffer_ptr,4,4
 465              		.global	buffer_2
 466              		.global	buffer_1
 467              		.bss
 468              		.align	2
 469              		.set	.LANCHOR0,. + 0
 470              		.type	timerR_index, %object
 471              		.size	timerR_index, 1
 472              	timerR_index:
 473 0000 00       		.space	1
 474 0001 000000   		.space	3
 475              		.type	timerR_overflows, %object
 476              		.size	timerR_overflows, 5
 477              	timerR_overflows:
 478 0004 00000000 		.space	5
 478      00
 479              		.type	timerL_index, %object
 480              		.size	timerL_index, 1
 481              	timerL_index:
 482 0009 00       		.space	1
 483 000a 0000     		.space	2
 484              		.type	timerL_overflows, %object
 485              		.size	timerL_overflows, 5
 486              	timerL_overflows:
 487 000c 00000000 		.space	5
 487      00
 488              		.type	timerR_on, %object
 489              		.size	timerR_on, 1
 490              	timerR_on:
 491 0011 00       		.space	1
 492 0012 0000     		.space	2
 493              		.type	timerR_count, %object
 494              		.size	timerR_count, 10
 495              	timerR_count:
 496 0014 00000000 		.space	10
 496      00000000 
 496      0000
 497              		.type	timerL_on, %object
 498              		.size	timerL_on, 1
 499              	timerL_on:
 500 001e 00       		.space	1
 501 001f 00       		.space	1
 502              		.type	timerL_count, %object
 503              		.size	timerL_count, 10
 504              	timerL_count:
 505 0020 00000000 		.space	10
 505      00000000 
 505      0000
 506              		.type	rx_buffer_size, %object
 507              		.size	rx_buffer_size, 1
 508              	rx_buffer_size:
 509 002a 00       		.space	1
 510 002b 00       		.space	1
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 15


 511              		.type	buffer_1, %object
 512              		.size	buffer_1, 16
 513              	buffer_1:
 514 002c 00000000 		.space	16
 514      00000000 
 514      00000000 
 514      00000000 
 515              		.type	buffer_2, %object
 516              		.size	buffer_2, 16
 517              	buffer_2:
 518 003c 00000000 		.space	16
 518      00000000 
 518      00000000 
 518      00000000 
 519              		.text
 520              	.Letext0:
 521              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 522              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 523              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 524              		.file 5 "robotmove.h"
 525              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 526              		.file 7 "Generated_Source\\PSoC5/Encoder_R_Timer.h"
 527              		.file 8 "Generated_Source\\PSoC5/Encoder_L_Timer.h"
 528              		.file 9 "Generated_Source\\PSoC5/UART.h"
 529              		.file 10 "Generated_Source\\PSoC5/PWM_RESET.h"
 530              		.file 11 "Generated_Source\\PSoC5/ENCODER_TMR_RESET.h"
 531              		.file 12 "Generated_Source\\PSoC5/tx_isr.h"
 532              		.file 13 "Generated_Source\\PSoC5/rx_isr.h"
 533              		.file 14 "Generated_Source\\PSoC5/ENCODER_R_OVF_ISR.h"
 534              		.file 15 "Generated_Source\\PSoC5/ENCODER_L_OVF_ISR.h"
 535              		.file 16 "Generated_Source\\PSoC5/ENC_R_ISR.h"
 536              		.file 17 "Generated_Source\\PSoC5/ENC_L_ISR.h"
 537              		.file 18 "robot_ID.h"
 538              		.section	.debug_info,"",%progbits
 539              	.Ldebug_info0:
 540 0000 E5050000 		.4byte	0x5e5
 541 0004 0400     		.2byte	0x4
 542 0006 00000000 		.4byte	.Ldebug_abbrev0
 543 000a 04       		.byte	0x4
 544 000b 01       		.uleb128 0x1
 545 000c D7040000 		.4byte	.LASF82
 546 0010 0C       		.byte	0xc
 547 0011 3C040000 		.4byte	.LASF83
 548 0015 D7020000 		.4byte	.LASF84
 549 0019 00000000 		.4byte	.Ldebug_ranges0+0
 550 001d 00000000 		.4byte	0
 551 0021 00000000 		.4byte	.Ldebug_line0
 552 0025 02       		.uleb128 0x2
 553 0026 01       		.byte	0x1
 554 0027 06       		.byte	0x6
 555 0028 64020000 		.4byte	.LASF0
 556 002c 03       		.uleb128 0x3
 557 002d 96010000 		.4byte	.LASF3
 558 0031 02       		.byte	0x2
 559 0032 1D       		.byte	0x1d
 560 0033 37000000 		.4byte	0x37
 561 0037 02       		.uleb128 0x2
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 16


 562 0038 01       		.byte	0x1
 563 0039 08       		.byte	0x8
 564 003a C6010000 		.4byte	.LASF1
 565 003e 02       		.uleb128 0x2
 566 003f 02       		.byte	0x2
 567 0040 05       		.byte	0x5
 568 0041 53000000 		.4byte	.LASF2
 569 0045 03       		.uleb128 0x3
 570 0046 A7000000 		.4byte	.LASF4
 571 004a 02       		.byte	0x2
 572 004b 2B       		.byte	0x2b
 573 004c 50000000 		.4byte	0x50
 574 0050 02       		.uleb128 0x2
 575 0051 02       		.byte	0x2
 576 0052 07       		.byte	0x7
 577 0053 7C030000 		.4byte	.LASF5
 578 0057 03       		.uleb128 0x3
 579 0058 8D040000 		.4byte	.LASF6
 580 005c 02       		.byte	0x2
 581 005d 3F       		.byte	0x3f
 582 005e 62000000 		.4byte	0x62
 583 0062 02       		.uleb128 0x2
 584 0063 04       		.byte	0x4
 585 0064 05       		.byte	0x5
 586 0065 43010000 		.4byte	.LASF7
 587 0069 02       		.uleb128 0x2
 588 006a 04       		.byte	0x4
 589 006b 07       		.byte	0x7
 590 006c 43040000 		.4byte	.LASF8
 591 0070 02       		.uleb128 0x2
 592 0071 08       		.byte	0x8
 593 0072 05       		.byte	0x5
 594 0073 30010000 		.4byte	.LASF9
 595 0077 02       		.uleb128 0x2
 596 0078 08       		.byte	0x8
 597 0079 07       		.byte	0x7
 598 007a 7F020000 		.4byte	.LASF10
 599 007e 04       		.uleb128 0x4
 600 007f 04       		.byte	0x4
 601 0080 05       		.byte	0x5
 602 0081 696E7400 		.ascii	"int\000"
 603 0085 02       		.uleb128 0x2
 604 0086 04       		.byte	0x4
 605 0087 07       		.byte	0x7
 606 0088 96020000 		.4byte	.LASF11
 607 008c 03       		.uleb128 0x3
 608 008d E2000000 		.4byte	.LASF12
 609 0091 03       		.byte	0x3
 610 0092 18       		.byte	0x18
 611 0093 2C000000 		.4byte	0x2c
 612 0097 03       		.uleb128 0x3
 613 0098 A3020000 		.4byte	.LASF13
 614 009c 03       		.byte	0x3
 615 009d 24       		.byte	0x24
 616 009e 45000000 		.4byte	0x45
 617 00a2 03       		.uleb128 0x3
 618 00a3 8E010000 		.4byte	.LASF14
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 17


 619 00a7 03       		.byte	0x3
 620 00a8 2C       		.byte	0x2c
 621 00a9 57000000 		.4byte	0x57
 622 00ad 05       		.uleb128 0x5
 623 00ae EA000000 		.4byte	.LASF15
 624 00b2 04       		.byte	0x4
 625 00b3 E401     		.2byte	0x1e4
 626 00b5 37000000 		.4byte	0x37
 627 00b9 05       		.uleb128 0x5
 628 00ba 35040000 		.4byte	.LASF16
 629 00be 04       		.byte	0x4
 630 00bf E601     		.2byte	0x1e6
 631 00c1 69000000 		.4byte	0x69
 632 00c5 02       		.uleb128 0x2
 633 00c6 04       		.byte	0x4
 634 00c7 04       		.byte	0x4
 635 00c8 FD000000 		.4byte	.LASF17
 636 00cc 02       		.uleb128 0x2
 637 00cd 08       		.byte	0x8
 638 00ce 04       		.byte	0x4
 639 00cf 55040000 		.4byte	.LASF18
 640 00d3 02       		.uleb128 0x2
 641 00d4 01       		.byte	0x1
 642 00d5 08       		.byte	0x8
 643 00d6 B5030000 		.4byte	.LASF19
 644 00da 05       		.uleb128 0x5
 645 00db 8C050000 		.4byte	.LASF20
 646 00df 04       		.byte	0x4
 647 00e0 9002     		.2byte	0x290
 648 00e2 E6000000 		.4byte	0xe6
 649 00e6 06       		.uleb128 0x6
 650 00e7 B9000000 		.4byte	0xb9
 651 00eb 02       		.uleb128 0x2
 652 00ec 08       		.byte	0x8
 653 00ed 04       		.byte	0x4
 654 00ee 07020000 		.4byte	.LASF21
 655 00f2 02       		.uleb128 0x2
 656 00f3 04       		.byte	0x4
 657 00f4 07       		.byte	0x7
 658 00f5 77000000 		.4byte	.LASF22
 659 00f9 06       		.uleb128 0x6
 660 00fa 8C000000 		.4byte	0x8c
 661 00fe 06       		.uleb128 0x6
 662 00ff 97000000 		.4byte	0x97
 663 0103 07       		.uleb128 0x7
 664 0104 28       		.byte	0x28
 665 0105 05       		.byte	0x5
 666 0106 17       		.byte	0x17
 667 0107 48010000 		.4byte	0x148
 668 010b 08       		.uleb128 0x8
 669 010c 00000000 		.4byte	.LASF23
 670 0110 05       		.byte	0x5
 671 0111 18       		.byte	0x18
 672 0112 CC000000 		.4byte	0xcc
 673 0116 00       		.byte	0
 674 0117 08       		.uleb128 0x8
 675 0118 A1000000 		.4byte	.LASF24
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 18


 676 011c 05       		.byte	0x5
 677 011d 18       		.byte	0x18
 678 011e CC000000 		.4byte	0xcc
 679 0122 08       		.byte	0x8
 680 0123 08       		.uleb128 0x8
 681 0124 C3020000 		.4byte	.LASF25
 682 0128 05       		.byte	0x5
 683 0129 18       		.byte	0x18
 684 012a CC000000 		.4byte	0xcc
 685 012e 10       		.byte	0x10
 686 012f 08       		.uleb128 0x8
 687 0130 55020000 		.4byte	.LASF26
 688 0134 05       		.byte	0x5
 689 0135 19       		.byte	0x19
 690 0136 CC000000 		.4byte	0xcc
 691 013a 18       		.byte	0x18
 692 013b 08       		.uleb128 0x8
 693 013c 83040000 		.4byte	.LASF27
 694 0140 05       		.byte	0x5
 695 0141 1A       		.byte	0x1a
 696 0142 CC000000 		.4byte	0xcc
 697 0146 20       		.byte	0x20
 698 0147 00       		.byte	0
 699 0148 03       		.uleb128 0x3
 700 0149 C1040000 		.4byte	.LASF28
 701 014d 05       		.byte	0x5
 702 014e 1B       		.byte	0x1b
 703 014f 03010000 		.4byte	0x103
 704 0153 07       		.uleb128 0x7
 705 0154 10       		.byte	0x10
 706 0155 01       		.byte	0x1
 707 0156 C5       		.byte	0xc5
 708 0157 74010000 		.4byte	0x174
 709 015b 08       		.uleb128 0x8
 710 015c 3E010000 		.4byte	.LASF29
 711 0160 01       		.byte	0x1
 712 0161 C6       		.byte	0xc6
 713 0162 CC000000 		.4byte	0xcc
 714 0166 00       		.byte	0
 715 0167 08       		.uleb128 0x8
 716 0168 13000000 		.4byte	.LASF30
 717 016c 01       		.byte	0x1
 718 016d C6       		.byte	0xc6
 719 016e CC000000 		.4byte	0xcc
 720 0172 08       		.byte	0x8
 721 0173 00       		.byte	0
 722 0174 03       		.uleb128 0x3
 723 0175 C9020000 		.4byte	.LASF31
 724 0179 01       		.byte	0x1
 725 017a C7       		.byte	0xc7
 726 017b 53010000 		.4byte	0x153
 727 017f 09       		.uleb128 0x9
 728 0180 AC020000 		.4byte	.LASF32
 729 0184 01       		.byte	0x1
 730 0185 4D       		.byte	0x4d
 731 0186 00000000 		.4byte	.LFB64
 732 018a 2C000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 19


 733 018e 01       		.uleb128 0x1
 734 018f 9C       		.byte	0x9c
 735 0190 09       		.uleb128 0x9
 736 0191 FF030000 		.4byte	.LASF33
 737 0195 01       		.byte	0x1
 738 0196 5D       		.byte	0x5d
 739 0197 00000000 		.4byte	.LFB65
 740 019b 2C000000 		.4byte	.LFE65-.LFB65
 741 019f 01       		.uleb128 0x1
 742 01a0 9C       		.byte	0x9c
 743 01a1 09       		.uleb128 0x9
 744 01a2 29040000 		.4byte	.LASF34
 745 01a6 01       		.byte	0x1
 746 01a7 AD       		.byte	0xad
 747 01a8 00000000 		.4byte	.LFB68
 748 01ac 02000000 		.4byte	.LFE68-.LFB68
 749 01b0 01       		.uleb128 0x1
 750 01b1 9C       		.byte	0x9c
 751 01b2 0A       		.uleb128 0xa
 752 01b3 2A020000 		.4byte	.LASF35
 753 01b7 01       		.byte	0x1
 754 01b8 6E       		.byte	0x6e
 755 01b9 00000000 		.4byte	.LFB66
 756 01bd 54000000 		.4byte	.LFE66-.LFB66
 757 01c1 01       		.uleb128 0x1
 758 01c2 9C       		.byte	0x9c
 759 01c3 EC010000 		.4byte	0x1ec
 760 01c7 0B       		.uleb128 0xb
 761 01c8 16000000 		.4byte	.LVL0
 762 01cc 0C050000 		.4byte	0x50c
 763 01d0 0B       		.uleb128 0xb
 764 01d1 20000000 		.4byte	.LVL1
 765 01d5 17050000 		.4byte	0x517
 766 01d9 0B       		.uleb128 0xb
 767 01da 24000000 		.4byte	.LVL2
 768 01de 22050000 		.4byte	0x522
 769 01e2 0B       		.uleb128 0xb
 770 01e3 46000000 		.4byte	.LVL3
 771 01e7 2D050000 		.4byte	0x52d
 772 01eb 00       		.byte	0
 773 01ec 0A       		.uleb128 0xa
 774 01ed 3F000000 		.4byte	.LASF36
 775 01f1 01       		.byte	0x1
 776 01f2 8E       		.byte	0x8e
 777 01f3 00000000 		.4byte	.LFB67
 778 01f7 54000000 		.4byte	.LFE67-.LFB67
 779 01fb 01       		.uleb128 0x1
 780 01fc 9C       		.byte	0x9c
 781 01fd 26020000 		.4byte	0x226
 782 0201 0B       		.uleb128 0xb
 783 0202 16000000 		.4byte	.LVL4
 784 0206 38050000 		.4byte	0x538
 785 020a 0B       		.uleb128 0xb
 786 020b 20000000 		.4byte	.LVL5
 787 020f 43050000 		.4byte	0x543
 788 0213 0B       		.uleb128 0xb
 789 0214 24000000 		.4byte	.LVL6
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 20


 790 0218 4E050000 		.4byte	0x54e
 791 021c 0B       		.uleb128 0xb
 792 021d 46000000 		.4byte	.LVL7
 793 0221 59050000 		.4byte	0x559
 794 0225 00       		.byte	0
 795 0226 0A       		.uleb128 0xa
 796 0227 A0010000 		.4byte	.LASF37
 797 022b 01       		.byte	0x1
 798 022c B8       		.byte	0xb8
 799 022d 00000000 		.4byte	.LFB69
 800 0231 34000000 		.4byte	.LFE69-.LFB69
 801 0235 01       		.uleb128 0x1
 802 0236 9C       		.byte	0x9c
 803 0237 5D020000 		.4byte	0x25d
 804 023b 0C       		.uleb128 0xc
 805 023c 97040000 		.4byte	.LASF38
 806 0240 01       		.byte	0x1
 807 0241 B9       		.byte	0xb9
 808 0242 D3000000 		.4byte	0xd3
 809 0246 00000000 		.4byte	.LLST0
 810 024a 0B       		.uleb128 0xb
 811 024b 06000000 		.4byte	.LVL8
 812 024f 64050000 		.4byte	0x564
 813 0253 0B       		.uleb128 0xb
 814 0254 10000000 		.4byte	.LVL9
 815 0258 6F050000 		.4byte	0x56f
 816 025c 00       		.byte	0
 817 025d 0D       		.uleb128 0xd
 818 025e 9C000000 		.4byte	.LASF85
 819 0262 01       		.byte	0x1
 820 0263 CB       		.byte	0xcb
 821 0264 7E000000 		.4byte	0x7e
 822 0268 00000000 		.4byte	.LFB70
 823 026c BC000000 		.4byte	.LFE70-.LFB70
 824 0270 01       		.uleb128 0x1
 825 0271 9C       		.byte	0x9c
 826 0272 91030000 		.4byte	0x391
 827 0276 0C       		.uleb128 0xc
 828 0277 A4030000 		.4byte	.LASF39
 829 027b 01       		.byte	0x1
 830 027c DA       		.byte	0xda
 831 027d 8C000000 		.4byte	0x8c
 832 0281 13000000 		.4byte	.LLST1
 833 0285 0E       		.uleb128 0xe
 834 0286 27010000 		.4byte	.LASF41
 835 028a 01       		.byte	0x1
 836 028b E5       		.byte	0xe5
 837 028c 8C000000 		.4byte	0x8c
 838 0290 0F       		.uleb128 0xf
 839 0291 A2050000 		.4byte	.LASF40
 840 0295 01       		.byte	0x1
 841 0296 E8       		.byte	0xe8
 842 0297 91030000 		.4byte	0x391
 843 029b 01       		.uleb128 0x1
 844 029c 53       		.byte	0x53
 845 029d 0E       		.uleb128 0xe
 846 029e C3030000 		.4byte	.LASF42
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 21


 847 02a2 01       		.byte	0x1
 848 02a3 ED       		.byte	0xed
 849 02a4 CC000000 		.4byte	0xcc
 850 02a8 0E       		.uleb128 0xe
 851 02a9 6E050000 		.4byte	.LASF43
 852 02ad 01       		.byte	0x1
 853 02ae EE       		.byte	0xee
 854 02af CC000000 		.4byte	0xcc
 855 02b3 10       		.uleb128 0x10
 856 02b4 6C000000 		.4byte	.LBB2
 857 02b8 50000000 		.4byte	.LBE2-.LBB2
 858 02bc CE020000 		.4byte	0x2ce
 859 02c0 0F       		.uleb128 0xf
 860 02c1 4E000000 		.4byte	.LASF44
 861 02c5 01       		.byte	0x1
 862 02c6 FB       		.byte	0xfb
 863 02c7 97030000 		.4byte	0x397
 864 02cb 01       		.uleb128 0x1
 865 02cc 50       		.byte	0x50
 866 02cd 00       		.byte	0
 867 02ce 11       		.uleb128 0x11
 868 02cf 0A000000 		.4byte	.LVL11
 869 02d3 7A050000 		.4byte	0x57a
 870 02d7 E1020000 		.4byte	0x2e1
 871 02db 12       		.uleb128 0x12
 872 02dc 01       		.uleb128 0x1
 873 02dd 50       		.byte	0x50
 874 02de 01       		.uleb128 0x1
 875 02df 30       		.byte	0x30
 876 02e0 00       		.byte	0
 877 02e1 11       		.uleb128 0x11
 878 02e2 10000000 		.4byte	.LVL12
 879 02e6 85050000 		.4byte	0x585
 880 02ea F4020000 		.4byte	0x2f4
 881 02ee 12       		.uleb128 0x12
 882 02ef 01       		.uleb128 0x1
 883 02f0 50       		.byte	0x50
 884 02f1 01       		.uleb128 0x1
 885 02f2 30       		.byte	0x30
 886 02f3 00       		.byte	0
 887 02f4 0B       		.uleb128 0xb
 888 02f5 14000000 		.4byte	.LVL13
 889 02f9 90050000 		.4byte	0x590
 890 02fd 11       		.uleb128 0x11
 891 02fe 30000000 		.4byte	.LVL15
 892 0302 9B050000 		.4byte	0x59b
 893 0306 14030000 		.4byte	0x314
 894 030a 12       		.uleb128 0x12
 895 030b 01       		.uleb128 0x1
 896 030c 50       		.byte	0x50
 897 030d 05       		.uleb128 0x5
 898 030e 03       		.byte	0x3
 899 030f 00000000 		.4byte	TX_ISR_vect
 900 0313 00       		.byte	0
 901 0314 11       		.uleb128 0x11
 902 0315 36000000 		.4byte	.LVL16
 903 0319 A6050000 		.4byte	0x5a6
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 22


 904 031d 2B030000 		.4byte	0x32b
 905 0321 12       		.uleb128 0x12
 906 0322 01       		.uleb128 0x1
 907 0323 50       		.byte	0x50
 908 0324 05       		.uleb128 0x5
 909 0325 03       		.byte	0x3
 910 0326 00000000 		.4byte	RX_ISR_vect
 911 032a 00       		.byte	0
 912 032b 11       		.uleb128 0x11
 913 032c 3C000000 		.4byte	.LVL17
 914 0330 B1050000 		.4byte	0x5b1
 915 0334 42030000 		.4byte	0x342
 916 0338 12       		.uleb128 0x12
 917 0339 01       		.uleb128 0x1
 918 033a 50       		.byte	0x50
 919 033b 05       		.uleb128 0x5
 920 033c 03       		.byte	0x3
 921 033d 00000000 		.4byte	ENCODER_R_OVF_ISR_vect
 922 0341 00       		.byte	0
 923 0342 11       		.uleb128 0x11
 924 0343 42000000 		.4byte	.LVL18
 925 0347 BC050000 		.4byte	0x5bc
 926 034b 59030000 		.4byte	0x359
 927 034f 12       		.uleb128 0x12
 928 0350 01       		.uleb128 0x1
 929 0351 50       		.byte	0x50
 930 0352 05       		.uleb128 0x5
 931 0353 03       		.byte	0x3
 932 0354 00000000 		.4byte	ENCODER_L_OVF_ISR_vect
 933 0358 00       		.byte	0
 934 0359 11       		.uleb128 0x11
 935 035a 48000000 		.4byte	.LVL19
 936 035e C7050000 		.4byte	0x5c7
 937 0362 70030000 		.4byte	0x370
 938 0366 12       		.uleb128 0x12
 939 0367 01       		.uleb128 0x1
 940 0368 50       		.byte	0x50
 941 0369 05       		.uleb128 0x5
 942 036a 03       		.byte	0x3
 943 036b 00000000 		.4byte	ENC_R_ISR_vect
 944 036f 00       		.byte	0
 945 0370 11       		.uleb128 0x11
 946 0371 4E000000 		.4byte	.LVL20
 947 0375 D2050000 		.4byte	0x5d2
 948 0379 87030000 		.4byte	0x387
 949 037d 12       		.uleb128 0x12
 950 037e 01       		.uleb128 0x1
 951 037f 50       		.byte	0x50
 952 0380 05       		.uleb128 0x5
 953 0381 03       		.byte	0x3
 954 0382 00000000 		.4byte	ENC_L_ISR_vect
 955 0386 00       		.byte	0
 956 0387 0B       		.uleb128 0xb
 957 0388 52000000 		.4byte	.LVL21
 958 038c DD050000 		.4byte	0x5dd
 959 0390 00       		.byte	0
 960 0391 13       		.uleb128 0x13
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 23


 961 0392 04       		.byte	0x4
 962 0393 74010000 		.4byte	0x174
 963 0397 13       		.uleb128 0x13
 964 0398 04       		.byte	0x4
 965 0399 9D030000 		.4byte	0x39d
 966 039d 06       		.uleb128 0x6
 967 039e D3000000 		.4byte	0xd3
 968 03a2 14       		.uleb128 0x14
 969 03a3 CA040000 		.4byte	.LASF45
 970 03a7 06       		.byte	0x6
 971 03a8 1207     		.2byte	0x712
 972 03aa AE030000 		.4byte	0x3ae
 973 03ae 06       		.uleb128 0x6
 974 03af A2000000 		.4byte	0xa2
 975 03b3 15       		.uleb128 0x15
 976 03b4 9D030000 		.4byte	0x39d
 977 03b8 C3030000 		.4byte	0x3c3
 978 03bc 16       		.uleb128 0x16
 979 03bd F2000000 		.4byte	0xf2
 980 03c1 0F       		.byte	0xf
 981 03c2 00       		.byte	0
 982 03c3 17       		.uleb128 0x17
 983 03c4 EA010000 		.4byte	.LASF46
 984 03c8 01       		.byte	0x1
 985 03c9 28       		.byte	0x28
 986 03ca D4030000 		.4byte	0x3d4
 987 03ce 05       		.uleb128 0x5
 988 03cf 03       		.byte	0x3
 989 03d0 00000000 		.4byte	buffer_1
 990 03d4 06       		.uleb128 0x6
 991 03d5 B3030000 		.4byte	0x3b3
 992 03d9 17       		.uleb128 0x17
 993 03da F3010000 		.4byte	.LASF47
 994 03de 01       		.byte	0x1
 995 03df 29       		.byte	0x29
 996 03e0 EA030000 		.4byte	0x3ea
 997 03e4 05       		.uleb128 0x5
 998 03e5 03       		.byte	0x3
 999 03e6 00000000 		.4byte	buffer_2
 1000 03ea 06       		.uleb128 0x6
 1001 03eb B3030000 		.4byte	0x3b3
 1002 03ef 17       		.uleb128 0x17
 1003 03f0 D2030000 		.4byte	.LASF48
 1004 03f4 01       		.byte	0x1
 1005 03f5 2A       		.byte	0x2a
 1006 03f6 97030000 		.4byte	0x397
 1007 03fa 05       		.uleb128 0x5
 1008 03fb 03       		.byte	0x3
 1009 03fc 00000000 		.4byte	receiving_buffer_ptr
 1010 0400 17       		.uleb128 0x17
 1011 0401 D4010000 		.4byte	.LASF49
 1012 0405 01       		.byte	0x1
 1013 0406 2B       		.byte	0x2b
 1014 0407 97030000 		.4byte	0x397
 1015 040b 05       		.uleb128 0x5
 1016 040c 03       		.byte	0x3
 1017 040d 00000000 		.4byte	processing_buffer_ptr
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 24


 1018 0411 17       		.uleb128 0x17
 1019 0412 7D050000 		.4byte	.LASF50
 1020 0416 01       		.byte	0x1
 1021 0417 2C       		.byte	0x2c
 1022 0418 F9000000 		.4byte	0xf9
 1023 041c 05       		.uleb128 0x5
 1024 041d 03       		.byte	0x3
 1025 041e 00000000 		.4byte	rx_buffer_size
 1026 0422 17       		.uleb128 0x17
 1027 0423 20020000 		.4byte	.LASF51
 1028 0427 01       		.byte	0x1
 1029 0428 2F       		.byte	0x2f
 1030 0429 3A040000 		.4byte	0x43a
 1031 042d 05       		.uleb128 0x5
 1032 042e 03       		.byte	0x3
 1033 042f 00000000 		.4byte	timerL_on
 1034 0433 02       		.uleb128 0x2
 1035 0434 01       		.byte	0x1
 1036 0435 02       		.byte	0x2
 1037 0436 16040000 		.4byte	.LASF52
 1038 043a 06       		.uleb128 0x6
 1039 043b 33040000 		.4byte	0x433
 1040 043f 17       		.uleb128 0x17
 1041 0440 92000000 		.4byte	.LASF53
 1042 0444 01       		.byte	0x1
 1043 0445 30       		.byte	0x30
 1044 0446 3A040000 		.4byte	0x43a
 1045 044a 05       		.uleb128 0x5
 1046 044b 03       		.byte	0x3
 1047 044c 00000000 		.4byte	timerR_on
 1048 0450 15       		.uleb128 0x15
 1049 0451 FE000000 		.4byte	0xfe
 1050 0455 60040000 		.4byte	0x460
 1051 0459 16       		.uleb128 0x16
 1052 045a F2000000 		.4byte	0xf2
 1053 045e 04       		.byte	0x4
 1054 045f 00       		.byte	0
 1055 0460 17       		.uleb128 0x17
 1056 0461 18000000 		.4byte	.LASF54
 1057 0465 01       		.byte	0x1
 1058 0466 33       		.byte	0x33
 1059 0467 71040000 		.4byte	0x471
 1060 046b 05       		.uleb128 0x5
 1061 046c 03       		.byte	0x3
 1062 046d 00000000 		.4byte	timerL_count
 1063 0471 06       		.uleb128 0x6
 1064 0472 50040000 		.4byte	0x450
 1065 0476 17       		.uleb128 0x17
 1066 0477 F0000000 		.4byte	.LASF55
 1067 047b 01       		.byte	0x1
 1068 047c 34       		.byte	0x34
 1069 047d 87040000 		.4byte	0x487
 1070 0481 05       		.uleb128 0x5
 1071 0482 03       		.byte	0x3
 1072 0483 00000000 		.4byte	timerR_count
 1073 0487 06       		.uleb128 0x6
 1074 0488 50040000 		.4byte	0x450
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 25


 1075 048c 15       		.uleb128 0x15
 1076 048d 3A040000 		.4byte	0x43a
 1077 0491 9C040000 		.4byte	0x49c
 1078 0495 16       		.uleb128 0x16
 1079 0496 F2000000 		.4byte	0xf2
 1080 049a 04       		.byte	0x4
 1081 049b 00       		.byte	0
 1082 049c 17       		.uleb128 0x17
 1083 049d 72040000 		.4byte	.LASF56
 1084 04a1 01       		.byte	0x1
 1085 04a2 36       		.byte	0x36
 1086 04a3 AD040000 		.4byte	0x4ad
 1087 04a7 05       		.uleb128 0x5
 1088 04a8 03       		.byte	0x3
 1089 04a9 00000000 		.4byte	timerL_overflows
 1090 04ad 06       		.uleb128 0x6
 1091 04ae 8C040000 		.4byte	0x48c
 1092 04b2 17       		.uleb128 0x17
 1093 04b3 D1000000 		.4byte	.LASF57
 1094 04b7 01       		.byte	0x1
 1095 04b8 37       		.byte	0x37
 1096 04b9 C3040000 		.4byte	0x4c3
 1097 04bd 05       		.uleb128 0x5
 1098 04be 03       		.byte	0x3
 1099 04bf 00000000 		.4byte	timerR_overflows
 1100 04c3 06       		.uleb128 0x6
 1101 04c4 8C040000 		.4byte	0x48c
 1102 04c8 17       		.uleb128 0x17
 1103 04c9 13020000 		.4byte	.LASF58
 1104 04cd 01       		.byte	0x1
 1105 04ce 39       		.byte	0x39
 1106 04cf F9000000 		.4byte	0xf9
 1107 04d3 05       		.uleb128 0x5
 1108 04d4 03       		.byte	0x3
 1109 04d5 00000000 		.4byte	timerL_index
 1110 04d9 17       		.uleb128 0x17
 1111 04da 1C040000 		.4byte	.LASF59
 1112 04de 01       		.byte	0x1
 1113 04df 3A       		.byte	0x3a
 1114 04e0 F9000000 		.4byte	0xf9
 1115 04e4 05       		.uleb128 0x5
 1116 04e5 03       		.byte	0x3
 1117 04e6 00000000 		.4byte	timerR_index
 1118 04ea 17       		.uleb128 0x17
 1119 04eb 65050000 		.4byte	.LASF60
 1120 04ef 01       		.byte	0x1
 1121 04f0 3E       		.byte	0x3e
 1122 04f1 48010000 		.4byte	0x148
 1123 04f5 05       		.uleb128 0x5
 1124 04f6 03       		.byte	0x3
 1125 04f7 00000000 		.4byte	pid_linv
 1126 04fb 17       		.uleb128 0x17
 1127 04fc BA030000 		.4byte	.LASF61
 1128 0500 01       		.byte	0x1
 1129 0501 3F       		.byte	0x3f
 1130 0502 48010000 		.4byte	0x148
 1131 0506 05       		.uleb128 0x5
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 26


 1132 0507 03       		.byte	0x3
 1133 0508 00000000 		.4byte	pid_angv
 1134 050c 18       		.uleb128 0x18
 1135 050d A5040000 		.4byte	.LASF62
 1136 0511 A5040000 		.4byte	.LASF62
 1137 0515 07       		.byte	0x7
 1138 0516 69       		.byte	0x69
 1139 0517 18       		.uleb128 0x18
 1140 0518 5E010000 		.4byte	.LASF63
 1141 051c 5E010000 		.4byte	.LASF63
 1142 0520 07       		.byte	0x7
 1143 0521 86       		.byte	0x86
 1144 0522 18       		.uleb128 0x18
 1145 0523 03010000 		.4byte	.LASF64
 1146 0527 03010000 		.4byte	.LASF64
 1147 052b 07       		.byte	0x7
 1148 052c 5B       		.byte	0x5b
 1149 052d 18       		.uleb128 0x18
 1150 052e 78010000 		.4byte	.LASF65
 1151 0532 78010000 		.4byte	.LASF65
 1152 0536 07       		.byte	0x7
 1153 0537 5A       		.byte	0x5a
 1154 0538 18       		.uleb128 0x18
 1155 0539 39020000 		.4byte	.LASF66
 1156 053d 39020000 		.4byte	.LASF66
 1157 0541 08       		.byte	0x8
 1158 0542 69       		.byte	0x69
 1159 0543 18       		.uleb128 0x18
 1160 0544 5D000000 		.4byte	.LASF67
 1161 0548 5D000000 		.4byte	.LASF67
 1162 054c 08       		.byte	0x8
 1163 054d 86       		.byte	0x86
 1164 054e 18       		.uleb128 0x18
 1165 054f 8F030000 		.4byte	.LASF68
 1166 0553 8F030000 		.4byte	.LASF68
 1167 0557 08       		.byte	0x8
 1168 0558 5B       		.byte	0x5b
 1169 0559 18       		.uleb128 0x18
 1170 055a 5C040000 		.4byte	.LASF69
 1171 055e 5C040000 		.4byte	.LASF69
 1172 0562 08       		.byte	0x8
 1173 0563 5A       		.byte	0x5a
 1174 0564 18       		.uleb128 0x18
 1175 0565 80000000 		.4byte	.LASF70
 1176 0569 80000000 		.4byte	.LASF70
 1177 056d 09       		.byte	0x9
 1178 056e 70       		.byte	0x70
 1179 056f 18       		.uleb128 0x18
 1180 0570 B2000000 		.4byte	.LASF71
 1181 0574 B2000000 		.4byte	.LASF71
 1182 0578 09       		.byte	0x9
 1183 0579 71       		.byte	0x71
 1184 057a 18       		.uleb128 0x18
 1185 057b 92050000 		.4byte	.LASF72
 1186 057f 92050000 		.4byte	.LASF72
 1187 0583 0A       		.byte	0xa
 1188 0584 2F       		.byte	0x2f
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 27


 1189 0585 18       		.uleb128 0x18
 1190 0586 E7030000 		.4byte	.LASF73
 1191 058a E7030000 		.4byte	.LASF73
 1192 058e 0B       		.byte	0xb
 1193 058f 2F       		.byte	0x2f
 1194 0590 18       		.uleb128 0x18
 1195 0591 FC010000 		.4byte	.LASF74
 1196 0595 FC010000 		.4byte	.LASF74
 1197 0599 09       		.byte	0x9
 1198 059a 54       		.byte	0x54
 1199 059b 18       		.uleb128 0x18
 1200 059c 70020000 		.4byte	.LASF75
 1201 05a0 70020000 		.4byte	.LASF75
 1202 05a4 0C       		.byte	0xc
 1203 05a5 18       		.byte	0x18
 1204 05a6 18       		.uleb128 0x18
 1205 05a7 18010000 		.4byte	.LASF76
 1206 05ab 18010000 		.4byte	.LASF76
 1207 05af 0D       		.byte	0xd
 1208 05b0 18       		.byte	0x18
 1209 05b1 18       		.uleb128 0x18
 1210 05b2 25000000 		.4byte	.LASF77
 1211 05b6 25000000 		.4byte	.LASF77
 1212 05ba 0E       		.byte	0xe
 1213 05bb 18       		.byte	0x18
 1214 05bc 18       		.uleb128 0x18
 1215 05bd AC010000 		.4byte	.LASF78
 1216 05c1 AC010000 		.4byte	.LASF78
 1217 05c5 0F       		.byte	0xf
 1218 05c6 18       		.byte	0x18
 1219 05c7 18       		.uleb128 0x18
 1220 05c8 BF000000 		.4byte	.LASF79
 1221 05cc BF000000 		.4byte	.LASF79
 1222 05d0 10       		.byte	0x10
 1223 05d1 18       		.byte	0x18
 1224 05d2 18       		.uleb128 0x18
 1225 05d3 4C010000 		.4byte	.LASF80
 1226 05d7 4C010000 		.4byte	.LASF80
 1227 05db 11       		.byte	0x11
 1228 05dc 18       		.byte	0x18
 1229 05dd 18       		.uleb128 0x18
 1230 05de 06000000 		.4byte	.LASF81
 1231 05e2 06000000 		.4byte	.LASF81
 1232 05e6 12       		.byte	0x12
 1233 05e7 16       		.byte	0x16
 1234 05e8 00       		.byte	0
 1235              		.section	.debug_abbrev,"",%progbits
 1236              	.Ldebug_abbrev0:
 1237 0000 01       		.uleb128 0x1
 1238 0001 11       		.uleb128 0x11
 1239 0002 01       		.byte	0x1
 1240 0003 25       		.uleb128 0x25
 1241 0004 0E       		.uleb128 0xe
 1242 0005 13       		.uleb128 0x13
 1243 0006 0B       		.uleb128 0xb
 1244 0007 03       		.uleb128 0x3
 1245 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 28


 1246 0009 1B       		.uleb128 0x1b
 1247 000a 0E       		.uleb128 0xe
 1248 000b 55       		.uleb128 0x55
 1249 000c 17       		.uleb128 0x17
 1250 000d 11       		.uleb128 0x11
 1251 000e 01       		.uleb128 0x1
 1252 000f 10       		.uleb128 0x10
 1253 0010 17       		.uleb128 0x17
 1254 0011 00       		.byte	0
 1255 0012 00       		.byte	0
 1256 0013 02       		.uleb128 0x2
 1257 0014 24       		.uleb128 0x24
 1258 0015 00       		.byte	0
 1259 0016 0B       		.uleb128 0xb
 1260 0017 0B       		.uleb128 0xb
 1261 0018 3E       		.uleb128 0x3e
 1262 0019 0B       		.uleb128 0xb
 1263 001a 03       		.uleb128 0x3
 1264 001b 0E       		.uleb128 0xe
 1265 001c 00       		.byte	0
 1266 001d 00       		.byte	0
 1267 001e 03       		.uleb128 0x3
 1268 001f 16       		.uleb128 0x16
 1269 0020 00       		.byte	0
 1270 0021 03       		.uleb128 0x3
 1271 0022 0E       		.uleb128 0xe
 1272 0023 3A       		.uleb128 0x3a
 1273 0024 0B       		.uleb128 0xb
 1274 0025 3B       		.uleb128 0x3b
 1275 0026 0B       		.uleb128 0xb
 1276 0027 49       		.uleb128 0x49
 1277 0028 13       		.uleb128 0x13
 1278 0029 00       		.byte	0
 1279 002a 00       		.byte	0
 1280 002b 04       		.uleb128 0x4
 1281 002c 24       		.uleb128 0x24
 1282 002d 00       		.byte	0
 1283 002e 0B       		.uleb128 0xb
 1284 002f 0B       		.uleb128 0xb
 1285 0030 3E       		.uleb128 0x3e
 1286 0031 0B       		.uleb128 0xb
 1287 0032 03       		.uleb128 0x3
 1288 0033 08       		.uleb128 0x8
 1289 0034 00       		.byte	0
 1290 0035 00       		.byte	0
 1291 0036 05       		.uleb128 0x5
 1292 0037 16       		.uleb128 0x16
 1293 0038 00       		.byte	0
 1294 0039 03       		.uleb128 0x3
 1295 003a 0E       		.uleb128 0xe
 1296 003b 3A       		.uleb128 0x3a
 1297 003c 0B       		.uleb128 0xb
 1298 003d 3B       		.uleb128 0x3b
 1299 003e 05       		.uleb128 0x5
 1300 003f 49       		.uleb128 0x49
 1301 0040 13       		.uleb128 0x13
 1302 0041 00       		.byte	0
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 29


 1303 0042 00       		.byte	0
 1304 0043 06       		.uleb128 0x6
 1305 0044 35       		.uleb128 0x35
 1306 0045 00       		.byte	0
 1307 0046 49       		.uleb128 0x49
 1308 0047 13       		.uleb128 0x13
 1309 0048 00       		.byte	0
 1310 0049 00       		.byte	0
 1311 004a 07       		.uleb128 0x7
 1312 004b 13       		.uleb128 0x13
 1313 004c 01       		.byte	0x1
 1314 004d 0B       		.uleb128 0xb
 1315 004e 0B       		.uleb128 0xb
 1316 004f 3A       		.uleb128 0x3a
 1317 0050 0B       		.uleb128 0xb
 1318 0051 3B       		.uleb128 0x3b
 1319 0052 0B       		.uleb128 0xb
 1320 0053 01       		.uleb128 0x1
 1321 0054 13       		.uleb128 0x13
 1322 0055 00       		.byte	0
 1323 0056 00       		.byte	0
 1324 0057 08       		.uleb128 0x8
 1325 0058 0D       		.uleb128 0xd
 1326 0059 00       		.byte	0
 1327 005a 03       		.uleb128 0x3
 1328 005b 0E       		.uleb128 0xe
 1329 005c 3A       		.uleb128 0x3a
 1330 005d 0B       		.uleb128 0xb
 1331 005e 3B       		.uleb128 0x3b
 1332 005f 0B       		.uleb128 0xb
 1333 0060 49       		.uleb128 0x49
 1334 0061 13       		.uleb128 0x13
 1335 0062 38       		.uleb128 0x38
 1336 0063 0B       		.uleb128 0xb
 1337 0064 00       		.byte	0
 1338 0065 00       		.byte	0
 1339 0066 09       		.uleb128 0x9
 1340 0067 2E       		.uleb128 0x2e
 1341 0068 00       		.byte	0
 1342 0069 3F       		.uleb128 0x3f
 1343 006a 19       		.uleb128 0x19
 1344 006b 03       		.uleb128 0x3
 1345 006c 0E       		.uleb128 0xe
 1346 006d 3A       		.uleb128 0x3a
 1347 006e 0B       		.uleb128 0xb
 1348 006f 3B       		.uleb128 0x3b
 1349 0070 0B       		.uleb128 0xb
 1350 0071 27       		.uleb128 0x27
 1351 0072 19       		.uleb128 0x19
 1352 0073 11       		.uleb128 0x11
 1353 0074 01       		.uleb128 0x1
 1354 0075 12       		.uleb128 0x12
 1355 0076 06       		.uleb128 0x6
 1356 0077 40       		.uleb128 0x40
 1357 0078 18       		.uleb128 0x18
 1358 0079 9742     		.uleb128 0x2117
 1359 007b 19       		.uleb128 0x19
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 30


 1360 007c 00       		.byte	0
 1361 007d 00       		.byte	0
 1362 007e 0A       		.uleb128 0xa
 1363 007f 2E       		.uleb128 0x2e
 1364 0080 01       		.byte	0x1
 1365 0081 3F       		.uleb128 0x3f
 1366 0082 19       		.uleb128 0x19
 1367 0083 03       		.uleb128 0x3
 1368 0084 0E       		.uleb128 0xe
 1369 0085 3A       		.uleb128 0x3a
 1370 0086 0B       		.uleb128 0xb
 1371 0087 3B       		.uleb128 0x3b
 1372 0088 0B       		.uleb128 0xb
 1373 0089 27       		.uleb128 0x27
 1374 008a 19       		.uleb128 0x19
 1375 008b 11       		.uleb128 0x11
 1376 008c 01       		.uleb128 0x1
 1377 008d 12       		.uleb128 0x12
 1378 008e 06       		.uleb128 0x6
 1379 008f 40       		.uleb128 0x40
 1380 0090 18       		.uleb128 0x18
 1381 0091 9742     		.uleb128 0x2117
 1382 0093 19       		.uleb128 0x19
 1383 0094 01       		.uleb128 0x1
 1384 0095 13       		.uleb128 0x13
 1385 0096 00       		.byte	0
 1386 0097 00       		.byte	0
 1387 0098 0B       		.uleb128 0xb
 1388 0099 898201   		.uleb128 0x4109
 1389 009c 00       		.byte	0
 1390 009d 11       		.uleb128 0x11
 1391 009e 01       		.uleb128 0x1
 1392 009f 31       		.uleb128 0x31
 1393 00a0 13       		.uleb128 0x13
 1394 00a1 00       		.byte	0
 1395 00a2 00       		.byte	0
 1396 00a3 0C       		.uleb128 0xc
 1397 00a4 34       		.uleb128 0x34
 1398 00a5 00       		.byte	0
 1399 00a6 03       		.uleb128 0x3
 1400 00a7 0E       		.uleb128 0xe
 1401 00a8 3A       		.uleb128 0x3a
 1402 00a9 0B       		.uleb128 0xb
 1403 00aa 3B       		.uleb128 0x3b
 1404 00ab 0B       		.uleb128 0xb
 1405 00ac 49       		.uleb128 0x49
 1406 00ad 13       		.uleb128 0x13
 1407 00ae 02       		.uleb128 0x2
 1408 00af 17       		.uleb128 0x17
 1409 00b0 00       		.byte	0
 1410 00b1 00       		.byte	0
 1411 00b2 0D       		.uleb128 0xd
 1412 00b3 2E       		.uleb128 0x2e
 1413 00b4 01       		.byte	0x1
 1414 00b5 3F       		.uleb128 0x3f
 1415 00b6 19       		.uleb128 0x19
 1416 00b7 03       		.uleb128 0x3
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 31


 1417 00b8 0E       		.uleb128 0xe
 1418 00b9 3A       		.uleb128 0x3a
 1419 00ba 0B       		.uleb128 0xb
 1420 00bb 3B       		.uleb128 0x3b
 1421 00bc 0B       		.uleb128 0xb
 1422 00bd 27       		.uleb128 0x27
 1423 00be 19       		.uleb128 0x19
 1424 00bf 49       		.uleb128 0x49
 1425 00c0 13       		.uleb128 0x13
 1426 00c1 8701     		.uleb128 0x87
 1427 00c3 19       		.uleb128 0x19
 1428 00c4 11       		.uleb128 0x11
 1429 00c5 01       		.uleb128 0x1
 1430 00c6 12       		.uleb128 0x12
 1431 00c7 06       		.uleb128 0x6
 1432 00c8 40       		.uleb128 0x40
 1433 00c9 18       		.uleb128 0x18
 1434 00ca 9742     		.uleb128 0x2117
 1435 00cc 19       		.uleb128 0x19
 1436 00cd 01       		.uleb128 0x1
 1437 00ce 13       		.uleb128 0x13
 1438 00cf 00       		.byte	0
 1439 00d0 00       		.byte	0
 1440 00d1 0E       		.uleb128 0xe
 1441 00d2 34       		.uleb128 0x34
 1442 00d3 00       		.byte	0
 1443 00d4 03       		.uleb128 0x3
 1444 00d5 0E       		.uleb128 0xe
 1445 00d6 3A       		.uleb128 0x3a
 1446 00d7 0B       		.uleb128 0xb
 1447 00d8 3B       		.uleb128 0x3b
 1448 00d9 0B       		.uleb128 0xb
 1449 00da 49       		.uleb128 0x49
 1450 00db 13       		.uleb128 0x13
 1451 00dc 00       		.byte	0
 1452 00dd 00       		.byte	0
 1453 00de 0F       		.uleb128 0xf
 1454 00df 34       		.uleb128 0x34
 1455 00e0 00       		.byte	0
 1456 00e1 03       		.uleb128 0x3
 1457 00e2 0E       		.uleb128 0xe
 1458 00e3 3A       		.uleb128 0x3a
 1459 00e4 0B       		.uleb128 0xb
 1460 00e5 3B       		.uleb128 0x3b
 1461 00e6 0B       		.uleb128 0xb
 1462 00e7 49       		.uleb128 0x49
 1463 00e8 13       		.uleb128 0x13
 1464 00e9 02       		.uleb128 0x2
 1465 00ea 18       		.uleb128 0x18
 1466 00eb 00       		.byte	0
 1467 00ec 00       		.byte	0
 1468 00ed 10       		.uleb128 0x10
 1469 00ee 0B       		.uleb128 0xb
 1470 00ef 01       		.byte	0x1
 1471 00f0 11       		.uleb128 0x11
 1472 00f1 01       		.uleb128 0x1
 1473 00f2 12       		.uleb128 0x12
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 32


 1474 00f3 06       		.uleb128 0x6
 1475 00f4 01       		.uleb128 0x1
 1476 00f5 13       		.uleb128 0x13
 1477 00f6 00       		.byte	0
 1478 00f7 00       		.byte	0
 1479 00f8 11       		.uleb128 0x11
 1480 00f9 898201   		.uleb128 0x4109
 1481 00fc 01       		.byte	0x1
 1482 00fd 11       		.uleb128 0x11
 1483 00fe 01       		.uleb128 0x1
 1484 00ff 31       		.uleb128 0x31
 1485 0100 13       		.uleb128 0x13
 1486 0101 01       		.uleb128 0x1
 1487 0102 13       		.uleb128 0x13
 1488 0103 00       		.byte	0
 1489 0104 00       		.byte	0
 1490 0105 12       		.uleb128 0x12
 1491 0106 8A8201   		.uleb128 0x410a
 1492 0109 00       		.byte	0
 1493 010a 02       		.uleb128 0x2
 1494 010b 18       		.uleb128 0x18
 1495 010c 9142     		.uleb128 0x2111
 1496 010e 18       		.uleb128 0x18
 1497 010f 00       		.byte	0
 1498 0110 00       		.byte	0
 1499 0111 13       		.uleb128 0x13
 1500 0112 0F       		.uleb128 0xf
 1501 0113 00       		.byte	0
 1502 0114 0B       		.uleb128 0xb
 1503 0115 0B       		.uleb128 0xb
 1504 0116 49       		.uleb128 0x49
 1505 0117 13       		.uleb128 0x13
 1506 0118 00       		.byte	0
 1507 0119 00       		.byte	0
 1508 011a 14       		.uleb128 0x14
 1509 011b 34       		.uleb128 0x34
 1510 011c 00       		.byte	0
 1511 011d 03       		.uleb128 0x3
 1512 011e 0E       		.uleb128 0xe
 1513 011f 3A       		.uleb128 0x3a
 1514 0120 0B       		.uleb128 0xb
 1515 0121 3B       		.uleb128 0x3b
 1516 0122 05       		.uleb128 0x5
 1517 0123 49       		.uleb128 0x49
 1518 0124 13       		.uleb128 0x13
 1519 0125 3F       		.uleb128 0x3f
 1520 0126 19       		.uleb128 0x19
 1521 0127 3C       		.uleb128 0x3c
 1522 0128 19       		.uleb128 0x19
 1523 0129 00       		.byte	0
 1524 012a 00       		.byte	0
 1525 012b 15       		.uleb128 0x15
 1526 012c 01       		.uleb128 0x1
 1527 012d 01       		.byte	0x1
 1528 012e 49       		.uleb128 0x49
 1529 012f 13       		.uleb128 0x13
 1530 0130 01       		.uleb128 0x1
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 33


 1531 0131 13       		.uleb128 0x13
 1532 0132 00       		.byte	0
 1533 0133 00       		.byte	0
 1534 0134 16       		.uleb128 0x16
 1535 0135 21       		.uleb128 0x21
 1536 0136 00       		.byte	0
 1537 0137 49       		.uleb128 0x49
 1538 0138 13       		.uleb128 0x13
 1539 0139 2F       		.uleb128 0x2f
 1540 013a 0B       		.uleb128 0xb
 1541 013b 00       		.byte	0
 1542 013c 00       		.byte	0
 1543 013d 17       		.uleb128 0x17
 1544 013e 34       		.uleb128 0x34
 1545 013f 00       		.byte	0
 1546 0140 03       		.uleb128 0x3
 1547 0141 0E       		.uleb128 0xe
 1548 0142 3A       		.uleb128 0x3a
 1549 0143 0B       		.uleb128 0xb
 1550 0144 3B       		.uleb128 0x3b
 1551 0145 0B       		.uleb128 0xb
 1552 0146 49       		.uleb128 0x49
 1553 0147 13       		.uleb128 0x13
 1554 0148 3F       		.uleb128 0x3f
 1555 0149 19       		.uleb128 0x19
 1556 014a 02       		.uleb128 0x2
 1557 014b 18       		.uleb128 0x18
 1558 014c 00       		.byte	0
 1559 014d 00       		.byte	0
 1560 014e 18       		.uleb128 0x18
 1561 014f 2E       		.uleb128 0x2e
 1562 0150 00       		.byte	0
 1563 0151 3F       		.uleb128 0x3f
 1564 0152 19       		.uleb128 0x19
 1565 0153 3C       		.uleb128 0x3c
 1566 0154 19       		.uleb128 0x19
 1567 0155 6E       		.uleb128 0x6e
 1568 0156 0E       		.uleb128 0xe
 1569 0157 03       		.uleb128 0x3
 1570 0158 0E       		.uleb128 0xe
 1571 0159 3A       		.uleb128 0x3a
 1572 015a 0B       		.uleb128 0xb
 1573 015b 3B       		.uleb128 0x3b
 1574 015c 0B       		.uleb128 0xb
 1575 015d 00       		.byte	0
 1576 015e 00       		.byte	0
 1577 015f 00       		.byte	0
 1578              		.section	.debug_loc,"",%progbits
 1579              	.Ldebug_loc0:
 1580              	.LLST0:
 1581 0000 10000000 		.4byte	.LVL9
 1582 0004 2A000000 		.4byte	.LVL10
 1583 0008 0100     		.2byte	0x1
 1584 000a 50       		.byte	0x50
 1585 000b 00000000 		.4byte	0
 1586 000f 00000000 		.4byte	0
 1587              	.LLST1:
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 34


 1588 0013 2A000000 		.4byte	.LVL14
 1589 0017 60000000 		.4byte	.LVL22
 1590 001b 0200     		.2byte	0x2
 1591 001d 30       		.byte	0x30
 1592 001e 9F       		.byte	0x9f
 1593 001f 00000000 		.4byte	0
 1594 0023 00000000 		.4byte	0
 1595              		.section	.debug_aranges,"",%progbits
 1596 0000 4C000000 		.4byte	0x4c
 1597 0004 0200     		.2byte	0x2
 1598 0006 00000000 		.4byte	.Ldebug_info0
 1599 000a 04       		.byte	0x4
 1600 000b 00       		.byte	0
 1601 000c 0000     		.2byte	0
 1602 000e 0000     		.2byte	0
 1603 0010 00000000 		.4byte	.LFB64
 1604 0014 2C000000 		.4byte	.LFE64-.LFB64
 1605 0018 00000000 		.4byte	.LFB65
 1606 001c 2C000000 		.4byte	.LFE65-.LFB65
 1607 0020 00000000 		.4byte	.LFB68
 1608 0024 02000000 		.4byte	.LFE68-.LFB68
 1609 0028 00000000 		.4byte	.LFB66
 1610 002c 54000000 		.4byte	.LFE66-.LFB66
 1611 0030 00000000 		.4byte	.LFB67
 1612 0034 54000000 		.4byte	.LFE67-.LFB67
 1613 0038 00000000 		.4byte	.LFB69
 1614 003c 34000000 		.4byte	.LFE69-.LFB69
 1615 0040 00000000 		.4byte	.LFB70
 1616 0044 BC000000 		.4byte	.LFE70-.LFB70
 1617 0048 00000000 		.4byte	0
 1618 004c 00000000 		.4byte	0
 1619              		.section	.debug_ranges,"",%progbits
 1620              	.Ldebug_ranges0:
 1621 0000 00000000 		.4byte	.LFB64
 1622 0004 2C000000 		.4byte	.LFE64
 1623 0008 00000000 		.4byte	.LFB65
 1624 000c 2C000000 		.4byte	.LFE65
 1625 0010 00000000 		.4byte	.LFB68
 1626 0014 02000000 		.4byte	.LFE68
 1627 0018 00000000 		.4byte	.LFB66
 1628 001c 54000000 		.4byte	.LFE66
 1629 0020 00000000 		.4byte	.LFB67
 1630 0024 54000000 		.4byte	.LFE67
 1631 0028 00000000 		.4byte	.LFB69
 1632 002c 34000000 		.4byte	.LFE69
 1633 0030 00000000 		.4byte	.LFB70
 1634 0034 BC000000 		.4byte	.LFE70
 1635 0038 00000000 		.4byte	0
 1636 003c 00000000 		.4byte	0
 1637              		.section	.debug_line,"",%progbits
 1638              	.Ldebug_line0:
 1639 0000 D8020000 		.section	.debug_str,"MS",%progbits,1
 1639      02002702 
 1639      00000201 
 1639      FB0E0D00 
 1639      01010101 
 1640              	.LASF23:
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 35


 1641 0000 50676169 		.ascii	"Pgain\000"
 1641      6E00
 1642              	.LASF81:
 1643 0006 6765745F 		.ascii	"get_robot_ID\000"
 1643      726F626F 
 1643      745F4944 
 1643      00
 1644              	.LASF30:
 1645 0013 616E6776 		.ascii	"angv\000"
 1645      00
 1646              	.LASF54:
 1647 0018 74696D65 		.ascii	"timerL_count\000"
 1647      724C5F63 
 1647      6F756E74 
 1647      00
 1648              	.LASF77:
 1649 0025 454E434F 		.ascii	"ENCODER_R_OVF_ISR_StartEx\000"
 1649      4445525F 
 1649      525F4F56 
 1649      465F4953 
 1649      525F5374 
 1650              	.LASF36:
 1651 003f 454E435F 		.ascii	"ENC_L_ISR_vect\000"
 1651      4C5F4953 
 1651      525F7665 
 1651      637400
 1652              	.LASF44:
 1653 004e 74656D70 		.ascii	"temp\000"
 1653      00
 1654              	.LASF2:
 1655 0053 73686F72 		.ascii	"short int\000"
 1655      7420696E 
 1655      7400
 1656              	.LASF67:
 1657 005d 456E636F 		.ascii	"Encoder_L_Timer_ClearFIFO\000"
 1657      6465725F 
 1657      4C5F5469 
 1657      6D65725F 
 1657      436C6561 
 1658              	.LASF22:
 1659 0077 73697A65 		.ascii	"sizetype\000"
 1659      74797065 
 1659      00
 1660              	.LASF70:
 1661 0080 55415254 		.ascii	"UART_ReadRxStatus\000"
 1661      5F526561 
 1661      64527853 
 1661      74617475 
 1661      7300
 1662              	.LASF53:
 1663 0092 74696D65 		.ascii	"timerR_on\000"
 1663      72525F6F 
 1663      6E00
 1664              	.LASF85:
 1665 009c 6D61696E 		.ascii	"main\000"
 1665      00
 1666              	.LASF24:
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 36


 1667 00a1 44676169 		.ascii	"Dgain\000"
 1667      6E00
 1668              	.LASF4:
 1669 00a7 5F5F7569 		.ascii	"__uint16_t\000"
 1669      6E743136 
 1669      5F7400
 1670              	.LASF71:
 1671 00b2 55415254 		.ascii	"UART_GetChar\000"
 1671      5F476574 
 1671      43686172 
 1671      00
 1672              	.LASF79:
 1673 00bf 454E435F 		.ascii	"ENC_R_ISR_StartEx\000"
 1673      525F4953 
 1673      525F5374 
 1673      61727445 
 1673      7800
 1674              	.LASF57:
 1675 00d1 74696D65 		.ascii	"timerR_overflows\000"
 1675      72525F6F 
 1675      76657266 
 1675      6C6F7773 
 1675      00
 1676              	.LASF12:
 1677 00e2 75696E74 		.ascii	"uint8_t\000"
 1677      385F7400 
 1678              	.LASF15:
 1679 00ea 75696E74 		.ascii	"uint8\000"
 1679      3800
 1680              	.LASF55:
 1681 00f0 74696D65 		.ascii	"timerR_count\000"
 1681      72525F63 
 1681      6F756E74 
 1681      00
 1682              	.LASF17:
 1683 00fd 666C6F61 		.ascii	"float\000"
 1683      7400
 1684              	.LASF64:
 1685 0103 456E636F 		.ascii	"Encoder_R_Timer_Stop\000"
 1685      6465725F 
 1685      525F5469 
 1685      6D65725F 
 1685      53746F70 
 1686              	.LASF76:
 1687 0118 72785F69 		.ascii	"rx_isr_StartEx\000"
 1687      73725F53 
 1687      74617274 
 1687      457800
 1688              	.LASF41:
 1689 0127 726F626F 		.ascii	"robot_id\000"
 1689      745F6964 
 1689      00
 1690              	.LASF9:
 1691 0130 6C6F6E67 		.ascii	"long long int\000"
 1691      206C6F6E 
 1691      6720696E 
 1691      7400
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 37


 1692              	.LASF29:
 1693 013e 6C696E76 		.ascii	"linv\000"
 1693      00
 1694              	.LASF7:
 1695 0143 6C6F6E67 		.ascii	"long int\000"
 1695      20696E74 
 1695      00
 1696              	.LASF80:
 1697 014c 454E435F 		.ascii	"ENC_L_ISR_StartEx\000"
 1697      4C5F4953 
 1697      525F5374 
 1697      61727445 
 1697      7800
 1698              	.LASF63:
 1699 015e 456E636F 		.ascii	"Encoder_R_Timer_ClearFIFO\000"
 1699      6465725F 
 1699      525F5469 
 1699      6D65725F 
 1699      436C6561 
 1700              	.LASF65:
 1701 0178 456E636F 		.ascii	"Encoder_R_Timer_Start\000"
 1701      6465725F 
 1701      525F5469 
 1701      6D65725F 
 1701      53746172 
 1702              	.LASF14:
 1703 018e 696E7433 		.ascii	"int32_t\000"
 1703      325F7400 
 1704              	.LASF3:
 1705 0196 5F5F7569 		.ascii	"__uint8_t\000"
 1705      6E74385F 
 1705      7400
 1706              	.LASF37:
 1707 01a0 52585F49 		.ascii	"RX_ISR_vect\000"
 1707      53525F76 
 1707      65637400 
 1708              	.LASF78:
 1709 01ac 454E434F 		.ascii	"ENCODER_L_OVF_ISR_StartEx\000"
 1709      4445525F 
 1709      4C5F4F56 
 1709      465F4953 
 1709      525F5374 
 1710              	.LASF1:
 1711 01c6 756E7369 		.ascii	"unsigned char\000"
 1711      676E6564 
 1711      20636861 
 1711      7200
 1712              	.LASF49:
 1713 01d4 70726F63 		.ascii	"processing_buffer_ptr\000"
 1713      65737369 
 1713      6E675F62 
 1713      75666665 
 1713      725F7074 
 1714              	.LASF46:
 1715 01ea 62756666 		.ascii	"buffer_1\000"
 1715      65725F31 
 1715      00
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 38


 1716              	.LASF47:
 1717 01f3 62756666 		.ascii	"buffer_2\000"
 1717      65725F32 
 1717      00
 1718              	.LASF74:
 1719 01fc 55415254 		.ascii	"UART_Start\000"
 1719      5F537461 
 1719      727400
 1720              	.LASF21:
 1721 0207 6C6F6E67 		.ascii	"long double\000"
 1721      20646F75 
 1721      626C6500 
 1722              	.LASF58:
 1723 0213 74696D65 		.ascii	"timerL_index\000"
 1723      724C5F69 
 1723      6E646578 
 1723      00
 1724              	.LASF51:
 1725 0220 74696D65 		.ascii	"timerL_on\000"
 1725      724C5F6F 
 1725      6E00
 1726              	.LASF35:
 1727 022a 454E435F 		.ascii	"ENC_R_ISR_vect\000"
 1727      525F4953 
 1727      525F7665 
 1727      637400
 1728              	.LASF66:
 1729 0239 456E636F 		.ascii	"Encoder_L_Timer_ReadCounter\000"
 1729      6465725F 
 1729      4C5F5469 
 1729      6D65725F 
 1729      52656164 
 1730              	.LASF26:
 1731 0255 70726576 		.ascii	"previous_error\000"
 1731      696F7573 
 1731      5F657272 
 1731      6F7200
 1732              	.LASF0:
 1733 0264 7369676E 		.ascii	"signed char\000"
 1733      65642063 
 1733      68617200 
 1734              	.LASF75:
 1735 0270 74785F69 		.ascii	"tx_isr_StartEx\000"
 1735      73725F53 
 1735      74617274 
 1735      457800
 1736              	.LASF10:
 1737 027f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1737      206C6F6E 
 1737      6720756E 
 1737      7369676E 
 1737      65642069 
 1738              	.LASF11:
 1739 0296 756E7369 		.ascii	"unsigned int\000"
 1739      676E6564 
 1739      20696E74 
 1739      00
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 39


 1740              	.LASF13:
 1741 02a3 75696E74 		.ascii	"uint16_t\000"
 1741      31365F74 
 1741      00
 1742              	.LASF32:
 1743 02ac 454E434F 		.ascii	"ENCODER_R_OVF_ISR_vect\000"
 1743      4445525F 
 1743      525F4F56 
 1743      465F4953 
 1743      525F7665 
 1744              	.LASF25:
 1745 02c3 49676169 		.ascii	"Igain\000"
 1745      6E00
 1746              	.LASF31:
 1747 02c9 524F424F 		.ascii	"ROBOT_COMMAND\000"
 1747      545F434F 
 1747      4D4D414E 
 1747      4400
 1748              	.LASF84:
 1749 02d7 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\Summer"
 1749      6C65732E 
 1749      6175636B 
 1749      6C616E64 
 1749      2E61632E 
 1750 0305 20526573 		.ascii	" Research\\Robot Soccer Code\\EmbeddedCode\\PsOC Pr"
 1750      65617263 
 1750      685C526F 
 1750      626F7420 
 1750      536F6363 
 1751 0335 6F6A6563 		.ascii	"oject\\Robot_PSoC_test.cydsn-20210126T222121Z-001\\"
 1751      745C526F 
 1751      626F745F 
 1751      50536F43 
 1751      5F746573 
 1752 0366 526F626F 		.ascii	"Robot_PSoC_test.cydsn\000"
 1752      745F5053 
 1752      6F435F74 
 1752      6573742E 
 1752      63796473 
 1753              	.LASF5:
 1754 037c 73686F72 		.ascii	"short unsigned int\000"
 1754      7420756E 
 1754      7369676E 
 1754      65642069 
 1754      6E7400
 1755              	.LASF68:
 1756 038f 456E636F 		.ascii	"Encoder_L_Timer_Stop\000"
 1756      6465725F 
 1756      4C5F5469 
 1756      6D65725F 
 1756      53746F70 
 1757              	.LASF39:
 1758 03a4 72656164 		.ascii	"read_buffer_size\000"
 1758      5F627566 
 1758      6665725F 
 1758      73697A65 
 1758      00
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 40


 1759              	.LASF19:
 1760 03b5 63686172 		.ascii	"char\000"
 1760      00
 1761              	.LASF61:
 1762 03ba 7069645F 		.ascii	"pid_angv\000"
 1762      616E6776 
 1762      00
 1763              	.LASF42:
 1764 03c3 7365745F 		.ascii	"set_robot_angv\000"
 1764      726F626F 
 1764      745F616E 
 1764      677600
 1765              	.LASF48:
 1766 03d2 72656365 		.ascii	"receiving_buffer_ptr\000"
 1766      6976696E 
 1766      675F6275 
 1766      66666572 
 1766      5F707472 
 1767              	.LASF73:
 1768 03e7 454E434F 		.ascii	"ENCODER_TMR_RESET_Write\000"
 1768      4445525F 
 1768      544D525F 
 1768      52455345 
 1768      545F5772 
 1769              	.LASF33:
 1770 03ff 454E434F 		.ascii	"ENCODER_L_OVF_ISR_vect\000"
 1770      4445525F 
 1770      4C5F4F56 
 1770      465F4953 
 1770      525F7665 
 1771              	.LASF52:
 1772 0416 5F426F6F 		.ascii	"_Bool\000"
 1772      6C00
 1773              	.LASF59:
 1774 041c 74696D65 		.ascii	"timerR_index\000"
 1774      72525F69 
 1774      6E646578 
 1774      00
 1775              	.LASF34:
 1776 0429 54585F49 		.ascii	"TX_ISR_vect\000"
 1776      53525F76 
 1776      65637400 
 1777              	.LASF16:
 1778 0435 75696E74 		.ascii	"uint32\000"
 1778      333200
 1779              	.LASF83:
 1780 043c 6D61696E 		.ascii	"main.c\000"
 1780      2E6300
 1781              	.LASF8:
 1782 0443 6C6F6E67 		.ascii	"long unsigned int\000"
 1782      20756E73 
 1782      69676E65 
 1782      6420696E 
 1782      7400
 1783              	.LASF18:
 1784 0455 646F7562 		.ascii	"double\000"
 1784      6C6500
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 41


 1785              	.LASF69:
 1786 045c 456E636F 		.ascii	"Encoder_L_Timer_Start\000"
 1786      6465725F 
 1786      4C5F5469 
 1786      6D65725F 
 1786      53746172 
 1787              	.LASF56:
 1788 0472 74696D65 		.ascii	"timerL_overflows\000"
 1788      724C5F6F 
 1788      76657266 
 1788      6C6F7773 
 1788      00
 1789              	.LASF27:
 1790 0483 6572726F 		.ascii	"error_sum\000"
 1790      725F7375 
 1790      6D00
 1791              	.LASF6:
 1792 048d 5F5F696E 		.ascii	"__int32_t\000"
 1792      7433325F 
 1792      7400
 1793              	.LASF38:
 1794 0497 62797465 		.ascii	"byte_received\000"
 1794      5F726563 
 1794      65697665 
 1794      6400
 1795              	.LASF62:
 1796 04a5 456E636F 		.ascii	"Encoder_R_Timer_ReadCounter\000"
 1796      6465725F 
 1796      525F5469 
 1796      6D65725F 
 1796      52656164 
 1797              	.LASF28:
 1798 04c1 5049445F 		.ascii	"PID_DATA\000"
 1798      44415441 
 1798      00
 1799              	.LASF45:
 1800 04ca 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1800      52784275 
 1800      66666572 
 1800      00
 1801              	.LASF82:
 1802 04d7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1802      43313120 
 1802      352E342E 
 1802      31203230 
 1802      31363036 
 1803 050a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1803      20726576 
 1803      6973696F 
 1803      6E203233 
 1803      37373135 
 1804 053d 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1804      66756E63 
 1804      74696F6E 
 1804      2D736563 
 1804      74696F6E 
 1805              	.LASF60:
ARM GAS  C:\Users\chay322\AppData\Local\Temp\ccG8xmla.s 			page 42


 1806 0565 7069645F 		.ascii	"pid_linv\000"
 1806      6C696E76 
 1806      00
 1807              	.LASF43:
 1808 056e 7365745F 		.ascii	"set_robot_linv\000"
 1808      726F626F 
 1808      745F6C69 
 1808      6E7600
 1809              	.LASF50:
 1810 057d 72785F62 		.ascii	"rx_buffer_size\000"
 1810      75666665 
 1810      725F7369 
 1810      7A6500
 1811              	.LASF20:
 1812 058c 72656733 		.ascii	"reg32\000"
 1812      3200
 1813              	.LASF72:
 1814 0592 50574D5F 		.ascii	"PWM_RESET_Write\000"
 1814      52455345 
 1814      545F5772 
 1814      69746500 
 1815              	.LASF40:
 1816 05a2 63757272 		.ascii	"current_command\000"
 1816      656E745F 
 1816      636F6D6D 
 1816      616E6400 
 1817              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
