ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TX_ISR_vect,"ax",%progbits
  20              		.align	2
  21              		.global	TX_ISR_vect
  22              		.thumb
  23              		.thumb_func
  24              		.type	TX_ISR_vect, %function
  25              	TX_ISR_vect:
  26              	.LFB72:
  27              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * SOCCER ROBOT EMBEDDED CODE
   4:main.c        ****  * VERSION 1.0
   5:main.c        ****  * COMPILED FOR THE PsOC 5LP PROTOTYPING KIT
   6:main.c        ****  * CY8CKIT-059 WHICH IS A CY8C5888LTI-LP097 DEVICE
   7:main.c        ****  *
   8:main.c        ****  * AUTHORED BY CURTIS HAYDON, JUSTIN YE 
   9:main.c        ****  * January / February 2021
  10:main.c        ****  *
  11:main.c        ****  * ========================================
  12:main.c        ****  */
  13:main.c        **** /* TO FIND MORE ON DOUBLE BUFFERING UART SEE https://www.allaboutcircuits.com/technical-articles/ua
  14:main.c        ****    This source is potentially useful as well https://community.cypress.com/t5/PSoC-5-3-1-MCU/UART-I
  15:main.c        **** #include "project.h"
  16:main.c        **** #include "encoder.h"
  17:main.c        **** #include "robotmove.h"
  18:main.c        **** #include "robot_ID.h"
  19:main.c        **** #include <stdio.h>
  20:main.c        **** #include <stdbool.h>
  21:main.c        **** #include <string.h>
  22:main.c        **** #include <stdlib.h>
  23:main.c        **** /* *********************************************** */
  24:main.c        **** /* ************USER DEFINED MACROS**************** */
  25:main.c        **** /* *********************************************** */
  26:main.c        **** //Parameters for global variables
  27:main.c        **** #define ENCODER_TIMER_ARRAY_SIZE 5
  28:main.c        **** #define STR_LEN_MAX 100 //Provides an extra 52 bytes in case Zigbee writes to the input buffer fast
  29:main.c        **** #define TRANSMISSION_STR_LENGTH 48 //Length of each completed transmitted string from the PC
  30:main.c        **** #define ANG_V_SCALING_FACTOR 64  //Transmitted bytes for the angular velocity are scaled up by this
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 2


  31:main.c        **** #define LIN_V_SCALING_FACTOR 2048 //Transmitted bytes for the linear velocity are scaled up by this
  32:main.c        **** #define TRANSMISSION_PKT_SIZE 48 //The transmitted packet is this many bytes long
  33:main.c        **** 
  34:main.c        **** //Robot Hardware parameters
  35:main.c        **** #define ROBOT_WIDTH 0.1 //Measured in meters
  36:main.c        **** #define ENCODER_COUNTS 11 //Encoder pulses generated in a full 360 rotation
  37:main.c        **** #define WHEEL_DIAMETER 0.1 //Measured in meters
  38:main.c        **** #define GEAR_RATIO 8 //Large gear teeth / small gear teeth.  Number of turns of the motor shaft whi
  39:main.c        **** #define MOTOR_MAX_RPM 11600 //Motor rated operating speed.  This is the maximum angv the motor will
  40:main.c        **** 
  41:main.c        **** //Encoder parameters
  42:main.c        **** #define CLOCKWISE 1
  43:main.c        **** #define ANTICLOCKWISE 0
  44:main.c        **** 
  45:main.c        **** //PID parameters
  46:main.c        **** #define Pgain_linv 1 //Proportional gain for linear velocity
  47:main.c        **** #define Dgain_linv 0 //Differential gain for linear velocity
  48:main.c        **** #define Igain_linv 0 //Integral gain for linear velocity
  49:main.c        **** 
  50:main.c        **** #define Pgain_angv 1 //Proportional gain for angular velocity
  51:main.c        **** #define Dgain_angv 0 //Differential gain for angular velocity
  52:main.c        **** #define Igain_angv 0 //Integral gain for angular velocity
  53:main.c        **** 
  54:main.c        **** /* *********************************************** */
  55:main.c        **** /* ***************GLOBAL VARIABLES**************** */
  56:main.c        **** /* *********************************************** */
  57:main.c        **** //Receive double buffering
  58:main.c        **** //Initially buffer_1 will be pointed to by the receive pointer, and buffer 2
  59:main.c        **** //will be pointed to by the processing buffer pointer
  60:main.c        **** volatile char buffer_1[STR_LEN_MAX] = {};
  61:main.c        **** volatile char buffer_2[STR_LEN_MAX]={};
  62:main.c        **** volatile char *receiving_buffer_ptr;
  63:main.c        **** volatile char *processing_buffer_ptr;
  64:main.c        **** volatile uint8_t rx_buffer_size = 0;
  65:main.c        **** 
  66:main.c        **** //Encoder variables
  67:main.c        **** //For storing multiple historic encoder timer values for accurate speed calculations
  68:main.c        **** volatile uint16_t timerL0_count[ENCODER_TIMER_ARRAY_SIZE] = {};
  69:main.c        **** volatile uint16_t timerR0_count[ENCODER_TIMER_ARRAY_SIZE] = {};
  70:main.c        **** 
  71:main.c        **** //Indicates which times to disregard if the timer has overflowed 
  72:main.c        **** volatile bool timerL0_overflows[ENCODER_TIMER_ARRAY_SIZE] = {};
  73:main.c        **** volatile bool timerR0_overflows[ENCODER_TIMER_ARRAY_SIZE] = {};
  74:main.c        **** 
  75:main.c        **** //For accessing the global count and overflow arrays above
  76:main.c        **** volatile uint8_t timerL0_index = 0;
  77:main.c        **** volatile uint8_t timerR0_index = 0;
  78:main.c        **** 
  79:main.c        **** //For indicating the measured wheel turning direction
  80:main.c        **** volatile bool R_direction = CLOCKWISE;
  81:main.c        **** volatile bool L_direction = CLOCKWISE;
  82:main.c        **** 
  83:main.c        **** //For PID control
  84:main.c        **** PID_DATA pid_linv;
  85:main.c        **** PID_DATA pid_angv;
  86:main.c        **** /* *********************************************** */
  87:main.c        **** /* ************USER DEFINED DATATYPES************* */
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 3


  88:main.c        **** /* *********************************************** */
  89:main.c        **** typedef struct{
  90:main.c        ****     double linv, angv;
  91:main.c        **** } ROBOT_COMMAND;
  92:main.c        **** //Note: PID_DATA is defined in robotmove.h
  93:main.c        **** 
  94:main.c        **** /* *********************************************** */
  95:main.c        **** /* ************USER DEFINED FUNCTIONS************* */
  96:main.c        **** /* *********************************************** */
  97:main.c        **** 
  98:main.c        **** CY_ISR_PROTO(ENCODER_R0_OVF_ISR_vect);
  99:main.c        **** CY_ISR_PROTO(ENCODER_L0_OVF_ISR_vect);
 100:main.c        **** CY_ISR_PROTO(ENC_R0_ISR_vect);
 101:main.c        **** CY_ISR_PROTO(ENC_L0_ISR_vect);
 102:main.c        **** CY_ISR_PROTO(ENC_L1_ISR_vect);
 103:main.c        **** CY_ISR_PROTO(ENC_R1_ISR_vect);
 104:main.c        **** CY_ISR_PROTO(TX_ISR_vect);
 105:main.c        **** CY_ISR_PROTO(RX_ISR_vect);
 106:main.c        **** 
 107:main.c        **** /* USBUART INTERFACE */
 108:main.c        **** /* Function: usbPutString
 109:main.c        ****  * Purpose: Puts the input string into the USBUART data buffer once the CDC is ready
 110:main.c        ****  *          If the string is longer than 64 characters it is truncated at 63 as USB restricts 
 111:main.c        ****  *          data packets to 64 characters long (inserting the NULL character at the end)
 112:main.c        ****  *          The final character [63] is a ! to warn the user
 113:main.c        ****  * Inputs:  char *string - the input character string
 114:main.c        ****  * Outputs: None             
 115:main.c        ****  */
 116:main.c        **** void usbPutString(char *string){
 117:main.c        ****     while(USBUART_CDCIsReady() == 0);
 118:main.c        ****     string[63] = '\0';
 119:main.c        ****     string[62] = '!';
 120:main.c        ****     USBUART_PutData((uint8*)string,strlen(string));    
 121:main.c        **** }
 122:main.c        **** /* Function: usbPutChar
 123:main.c        ****  * Purpose: Puts the input character into the USBUART data buffer once the CDC is ready
 124:main.c        ****  * Inputs:  char c - the input character
 125:main.c        ****  * Outputs: None             
 126:main.c        ****  */
 127:main.c        **** void usbPutChar(char c){
 128:main.c        ****     while(USBUART_CDCIsReady() == 0);
 129:main.c        ****     USBUART_PutChar(c);   
 130:main.c        **** }
 131:main.c        **** 
 132:main.c        **** /* *********************************************** */
 133:main.c        **** /* ***********INTERRUPT SERVICE ROUTINES********** */
 134:main.c        **** /* *********************************************** */
 135:main.c        **** //Encoder timer ISRS
 136:main.c        **** 
 137:main.c        **** /* ISR: ENCODER_R0_OVF_ISR_vect
 138:main.c        ****  * Purpose: Set the bit corresponding to the R encoder timer measurement that the timer has
 139:main.c        ****  *          overflowed, allowing the get_velocity function to determine a speed of 0 rad/s
 140:main.c        ****  * Modifies: bool timerR0_overflows[] -  indicates which readings in timerR0_count[] that didn't 
 141:main.c        ****  *                                      measure an overflow of the counter
 142:main.c        ****  *                      
 143:main.c        ****  */
 144:main.c        **** CY_ISR(ENCODER_R0_OVF_ISR_vect){
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 4


 145:main.c        ****     //Ensure R0 index is in correct range
 146:main.c        ****     if(timerR0_index > ENCODER_TIMER_ARRAY_SIZE - 1){
 147:main.c        ****         timerR0_index = 0;    
 148:main.c        ****     }
 149:main.c        ****     timerR0_overflows[timerR0_index] = true;
 150:main.c        ****     //Stop the timer until the next pulse is detected
 151:main.c        ****     Encoder_R0_Timer_Stop();
 152:main.c        **** }
 153:main.c        **** 
 154:main.c        **** /* ISR: ENCODER_L0_OVF_ISR_vect
 155:main.c        ****  * Purpose: Set the bit corresponding to the R encoder timer measurement that the timer has
 156:main.c        ****  *          overflowed, allowing the get_velocity function to determine a speed of 0 rad/s
 157:main.c        ****  * Modifies: bool timerL0_overflows[] -  indicates which readings in timerR0_count[] that didn't 
 158:main.c        ****  *                                      measure an overflow of the counter
 159:main.c        ****  *                      
 160:main.c        ****  */
 161:main.c        **** CY_ISR(ENCODER_L0_OVF_ISR_vect){
 162:main.c        ****     //Ensure L0 index is in correct range
 163:main.c        ****     if(timerL0_index > ENCODER_TIMER_ARRAY_SIZE - 1){
 164:main.c        ****         timerL0_index = 0;    
 165:main.c        ****     }
 166:main.c        ****     timerL0_overflows[timerL0_index] = true;
 167:main.c        ****     //Stop the timer until the next pulse is detected
 168:main.c        ****     Encoder_L0_Timer_Stop();
 169:main.c        **** }
 170:main.c        **** 
 171:main.c        **** //Encoder pin ISRS
 172:main.c        **** /* ISR: ENC_R0_ISR_vect
 173:main.c        ****  * Purpose: Store the capture value in the timer FIFO into timerR0_count
 174:main.c        ****  *          If the timer had overflowed during the time the period is stored
 175:main.c        ****  *          Restart the timer once this is complete
 176:main.c        ****  * Modifies: bool timerR0_count[] - the timer count recorded between adjacent encoder
 177:main.c        ****  *                                  pulse rising edges on the left wheel.
 178:main.c        ****  *           uint8_t timerR0_index - the index is updated                      
 179:main.c        ****  */
 180:main.c        **** CY_ISR(ENC_R0_ISR_vect){
 181:main.c        ****     if(timerR0_index > ENCODER_TIMER_ARRAY_SIZE - 1){
 182:main.c        ****         timerR0_index = 0;   
 183:main.c        ****     }
 184:main.c        ****     uint16_t timer_period = Encoder_R0_Timer_ReadPeriod();
 185:main.c        ****     if(timerR0_overflows[timerR0_index] == false){
 186:main.c        ****         //If the timer has not overflowed, store the capture value
 187:main.c        ****         timerR0_count[timerR0_index] = timer_period - Encoder_R0_Timer_ReadCapture();
 188:main.c        ****     } else {
 189:main.c        ****         //Otherwise store the period time of the timer
 190:main.c        ****         timerR0_count[timerR0_index] = timer_period;
 191:main.c        ****     }
 192:main.c        ****     //Clear the FIFO timer buffer
 193:main.c        ****     Encoder_R0_Timer_ClearFIFO();
 194:main.c        ****     //Re-load the timer period into the count register to restart the timer
 195:main.c        ****     Encoder_R0_Timer_Stop();
 196:main.c        ****     Encoder_R0_Timer_WriteCounter(timer_period);
 197:main.c        ****     
 198:main.c        ****     if(timerR0_index < ENCODER_TIMER_ARRAY_SIZE - 1){
 199:main.c        ****         timerR0_index++;   
 200:main.c        ****     } else {
 201:main.c        ****         timerR0_index = 0;   
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 5


 202:main.c        ****     }
 203:main.c        ****     //Initialise the overflow entry and start the timer
 204:main.c        ****     timerR0_overflows[timerR0_index] = false;    
 205:main.c        ****     Encoder_R0_Timer_Start();
 206:main.c        **** }
 207:main.c        **** 
 208:main.c        **** /* ISR: ENC_L0_ISR_vect
 209:main.c        ****  * Purpose: Store the capture value in the timer FIFO into timerL0_count
 210:main.c        ****  *          If the timer had overflowed during the time the period is stored
 211:main.c        ****  *          Restart the timer once this is complete
 212:main.c        ****  * Modifies: bool timerL0_count[] - the timer count recorded between adjacent encoder
 213:main.c        ****  *                                  pulse rising edges on the left wheel.
 214:main.c        ****  *           uint8_t timerL0_index - the index is updated                      
 215:main.c        ****  */
 216:main.c        **** CY_ISR(ENC_L0_ISR_vect){
 217:main.c        ****     if(timerL0_index > ENCODER_TIMER_ARRAY_SIZE - 1){
 218:main.c        ****         timerL0_index = 0;   
 219:main.c        ****     }
 220:main.c        ****     uint16_t timer_period = Encoder_L0_Timer_ReadPeriod();
 221:main.c        ****     if(timerL0_overflows[timerL0_index] == false){
 222:main.c        ****         //If the timer has not overflowed, store the capture value
 223:main.c        ****         timerL0_count[timerL0_index] = timer_period - Encoder_L0_Timer_ReadCapture();
 224:main.c        ****     } else {
 225:main.c        ****         //Otherwise store the period time of the timer
 226:main.c        ****         timerL0_count[timerL0_index] = timer_period;
 227:main.c        ****     }
 228:main.c        ****     //Clear the FIFO timer buffer
 229:main.c        ****     Encoder_L0_Timer_ClearFIFO();
 230:main.c        ****     //Re-load the timer period into the count register to restart the timer
 231:main.c        ****     Encoder_L0_Timer_Stop();
 232:main.c        ****     Encoder_L0_Timer_WriteCounter(timer_period);
 233:main.c        ****     
 234:main.c        ****     if(timerL0_index < ENCODER_TIMER_ARRAY_SIZE - 1){
 235:main.c        ****         timerL0_index++;   
 236:main.c        ****     } else {
 237:main.c        ****         timerL0_index = 0;   
 238:main.c        ****     }
 239:main.c        ****     //Initialise the overflow entry and start the timer
 240:main.c        ****     timerL0_overflows[timerL0_index] = false;    
 241:main.c        ****     Encoder_L0_Timer_Start();
 242:main.c        **** }
 243:main.c        **** 
 244:main.c        **** /* ISR: ENC_R1_ISR_vect
 245:main.c        ****  * Purpose: Use this to identify which direction the right wheel is turning
 246:main.c        ****  *          This assumes that if R0 has a rising edge before R1, motor is turning clockwise
 247:main.c        ****  *                               R1 has a rising edge before R0, motor is turning anticlockwise
 248:main.c        ****  * Modifies: bool R_direction - 0 - clockwise
 249:main.c        ****  *                              1 - anticlockwise
 250:main.c        ****  */
 251:main.c        **** CY_ISR(ENC_R1_ISR_vect){
 252:main.c        ****     uint8_t encoder_R0_pin_state = Encoder_R0_Read();
 253:main.c        ****     if(encoder_R0_pin_state == 0u){
 254:main.c        ****         //R1 ISR has been triggered before R0.  We will interpret this as the wheel moving 
 255:main.c        ****         //anticlockwise (negative/backwards)
 256:main.c        ****         R_direction = ANTICLOCKWISE;
 257:main.c        ****     } else {
 258:main.c        ****         //R1 was triggered after R0.  Wheel is moving clockwise
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 6


 259:main.c        ****         R_direction = CLOCKWISE;
 260:main.c        ****     }
 261:main.c        ****     //Clear the latched pin events on encoder R1 pin to enable detection of future events
 262:main.c        ****     Encoder_R1_ClearInterrupt();
 263:main.c        **** }
 264:main.c        **** 
 265:main.c        **** /* ISR: ENC_L1_ISR_vect
 266:main.c        ****  * Purpose: Use this to identify which direction the left wheel is turning
 267:main.c        ****  *          This assumes that if L0 has a rising edge before L1, motor is turning clockwise
 268:main.c        ****  *                               L1 has a rising edge before L0, motor is turning anticlockwise
 269:main.c        ****  * Modifies: bool L_direction - 0 - clockwise
 270:main.c        ****  *                              1 - anticlockwise
 271:main.c        ****  */
 272:main.c        **** CY_ISR(ENC_L1_ISR_vect){
 273:main.c        ****     uint8_t encoder_L0_pin_state = Encoder_L0_Read();
 274:main.c        ****     if(encoder_L0_pin_state == 0u){
 275:main.c        ****         //L1 ISR has been triggered before L0.  We will interpret this as the wheel moving 
 276:main.c        ****         //anticlockwise (negative/backwards)
 277:main.c        ****         L_direction = ANTICLOCKWISE;
 278:main.c        ****     } else {
 279:main.c        ****         //L1 was triggered after L0.  Wheel is moving clockwise
 280:main.c        ****         L_direction = CLOCKWISE;
 281:main.c        ****     }
 282:main.c        ****     //Clear the latched pin events on encoder L1 pin to enable detection of future events
 283:main.c        ****     Encoder_L1_ClearInterrupt();
 284:main.c        **** }
 285:main.c        **** 
 286:main.c        **** //USART ISRS
 287:main.c        **** //Currently unused
 288:main.c        **** /* ISR: TX_ISR_vect
 289:main.c        ****  * Purpose: May be used in future to send strings to the host PC with the transmission module
 290:main.c        ****  *          Currently not used.
 291:main.c        ****  *                      
 292:main.c        ****  */
 293:main.c        **** CY_ISR(TX_ISR_vect){
  28              		.loc 1 293 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE72:
  36              		.size	TX_ISR_vect, .-TX_ISR_vect
  37 0002 00BF     		.section	.text.ENCODER_R0_OVF_ISR_vect,"ax",%progbits
  38              		.align	2
  39              		.global	ENCODER_R0_OVF_ISR_vect
  40              		.thumb
  41              		.thumb_func
  42              		.type	ENCODER_R0_OVF_ISR_vect, %function
  43              	ENCODER_R0_OVF_ISR_vect:
  44              	.LFB66:
 144:main.c        ****     //Ensure R0 index is in correct range
  45              		.loc 1 144 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 7


 144:main.c        ****     //Ensure R0 index is in correct range
  49              		.loc 1 144 0
  50 0000 08B5     		push	{r3, lr}
  51              		.cfi_def_cfa_offset 8
  52              		.cfi_offset 3, -8
  53              		.cfi_offset 14, -4
 146:main.c        ****         timerR0_index = 0;    
  54              		.loc 1 146 0
  55 0002 084B     		ldr	r3, .L5
  56 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  57 0006 DBB2     		uxtb	r3, r3
  58 0008 042B     		cmp	r3, #4
  59 000a 02D9     		bls	.L3
 147:main.c        ****     }
  60              		.loc 1 147 0
  61 000c 0022     		movs	r2, #0
  62 000e 054B     		ldr	r3, .L5
  63 0010 1A70     		strb	r2, [r3]
  64              	.L3:
 149:main.c        ****     //Stop the timer until the next pulse is detected
  65              		.loc 1 149 0
  66 0012 044A     		ldr	r2, .L5
  67 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  68 0016 1344     		add	r3, r3, r2
  69 0018 0122     		movs	r2, #1
  70 001a 1A71     		strb	r2, [r3, #4]
 151:main.c        **** }
  71              		.loc 1 151 0
  72 001c FFF7FEFF 		bl	Encoder_R0_Timer_Stop
  73              	.LVL0:
  74 0020 08BD     		pop	{r3, pc}
  75              	.L6:
  76 0022 00BF     		.align	2
  77              	.L5:
  78 0024 00000000 		.word	.LANCHOR0
  79              		.cfi_endproc
  80              	.LFE66:
  81              		.size	ENCODER_R0_OVF_ISR_vect, .-ENCODER_R0_OVF_ISR_vect
  82              		.section	.text.ENCODER_L0_OVF_ISR_vect,"ax",%progbits
  83              		.align	2
  84              		.global	ENCODER_L0_OVF_ISR_vect
  85              		.thumb
  86              		.thumb_func
  87              		.type	ENCODER_L0_OVF_ISR_vect, %function
  88              	ENCODER_L0_OVF_ISR_vect:
  89              	.LFB67:
 161:main.c        ****     //Ensure L0 index is in correct range
  90              		.loc 1 161 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94 0000 08B5     		push	{r3, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 3, -8
  97              		.cfi_offset 14, -4
 163:main.c        ****         timerL0_index = 0;    
  98              		.loc 1 163 0
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 8


  99 0002 084B     		ldr	r3, .L10
 100 0004 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 101 0006 DBB2     		uxtb	r3, r3
 102 0008 042B     		cmp	r3, #4
 103 000a 02D9     		bls	.L8
 164:main.c        ****     }
 104              		.loc 1 164 0
 105 000c 0022     		movs	r2, #0
 106 000e 054B     		ldr	r3, .L10
 107 0010 5A72     		strb	r2, [r3, #9]
 108              	.L8:
 166:main.c        ****     //Stop the timer until the next pulse is detected
 109              		.loc 1 166 0
 110 0012 044A     		ldr	r2, .L10
 111 0014 537A     		ldrb	r3, [r2, #9]	@ zero_extendqisi2
 112 0016 1344     		add	r3, r3, r2
 113 0018 0122     		movs	r2, #1
 114 001a 1A73     		strb	r2, [r3, #12]
 168:main.c        **** }
 115              		.loc 1 168 0
 116 001c FFF7FEFF 		bl	Encoder_L0_Timer_Stop
 117              	.LVL1:
 118 0020 08BD     		pop	{r3, pc}
 119              	.L11:
 120 0022 00BF     		.align	2
 121              	.L10:
 122 0024 00000000 		.word	.LANCHOR0
 123              		.cfi_endproc
 124              	.LFE67:
 125              		.size	ENCODER_L0_OVF_ISR_vect, .-ENCODER_L0_OVF_ISR_vect
 126              		.section	.text.ENC_R0_ISR_vect,"ax",%progbits
 127              		.align	2
 128              		.global	ENC_R0_ISR_vect
 129              		.thumb
 130              		.thumb_func
 131              		.type	ENC_R0_ISR_vect, %function
 132              	ENC_R0_ISR_vect:
 133              	.LFB68:
 180:main.c        ****     if(timerR0_index > ENCODER_TIMER_ARRAY_SIZE - 1){
 134              		.loc 1 180 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138 0000 70B5     		push	{r4, r5, r6, lr}
 139              		.cfi_def_cfa_offset 16
 140              		.cfi_offset 4, -16
 141              		.cfi_offset 5, -12
 142              		.cfi_offset 6, -8
 143              		.cfi_offset 14, -4
 181:main.c        ****         timerR0_index = 0;   
 144              		.loc 1 181 0
 145 0002 1F4B     		ldr	r3, .L19
 146 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 147 0006 DBB2     		uxtb	r3, r3
 148 0008 042B     		cmp	r3, #4
 149 000a 02D9     		bls	.L13
 182:main.c        ****     }
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 9


 150              		.loc 1 182 0
 151 000c 0022     		movs	r2, #0
 152 000e 1C4B     		ldr	r3, .L19
 153 0010 1A70     		strb	r2, [r3]
 154              	.L13:
 184:main.c        ****     if(timerR0_overflows[timerR0_index] == false){
 155              		.loc 1 184 0
 156 0012 FFF7FEFF 		bl	Encoder_R0_Timer_ReadPeriod
 157              	.LVL2:
 158 0016 0446     		mov	r4, r0
 159              	.LVL3:
 185:main.c        ****         //If the timer has not overflowed, store the capture value
 160              		.loc 1 185 0
 161 0018 194A     		ldr	r2, .L19
 162 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 163 001c 1344     		add	r3, r3, r2
 164 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 165 0020 13F0FF0F 		tst	r3, #255
 166 0024 0AD1     		bne	.L14
 187:main.c        ****     } else {
 167              		.loc 1 187 0
 168 0026 1546     		mov	r5, r2
 169 0028 1678     		ldrb	r6, [r2]	@ zero_extendqisi2
 170 002a F6B2     		uxtb	r6, r6
 171 002c FFF7FEFF 		bl	Encoder_R0_Timer_ReadCapture
 172              	.LVL4:
 173 0030 201A     		subs	r0, r4, r0
 174 0032 80B2     		uxth	r0, r0
 175 0034 05EB4605 		add	r5, r5, r6, lsl #1
 176 0038 A882     		strh	r0, [r5, #20]	@ movhi
 177 003a 04E0     		b	.L15
 178              	.LVL5:
 179              	.L14:
 190:main.c        ****     }
 180              		.loc 1 190 0
 181 003c 104B     		ldr	r3, .L19
 182 003e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 183 0040 03EB4203 		add	r3, r3, r2, lsl #1
 184 0044 9882     		strh	r0, [r3, #20]	@ movhi
 185              	.LVL6:
 186              	.L15:
 193:main.c        ****     //Re-load the timer period into the count register to restart the timer
 187              		.loc 1 193 0
 188 0046 FFF7FEFF 		bl	Encoder_R0_Timer_ClearFIFO
 189              	.LVL7:
 195:main.c        ****     Encoder_R0_Timer_WriteCounter(timer_period);
 190              		.loc 1 195 0
 191 004a FFF7FEFF 		bl	Encoder_R0_Timer_Stop
 192              	.LVL8:
 196:main.c        ****     
 193              		.loc 1 196 0
 194 004e 2046     		mov	r0, r4
 195 0050 FFF7FEFF 		bl	Encoder_R0_Timer_WriteCounter
 196              	.LVL9:
 198:main.c        ****         timerR0_index++;   
 197              		.loc 1 198 0
 198 0054 0A4B     		ldr	r3, .L19
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 10


 199 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 200 0058 DBB2     		uxtb	r3, r3
 201 005a 032B     		cmp	r3, #3
 202 005c 05D8     		bhi	.L16
 199:main.c        ****     } else {
 203              		.loc 1 199 0
 204 005e 084A     		ldr	r2, .L19
 205 0060 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 206 0062 0133     		adds	r3, r3, #1
 207 0064 DBB2     		uxtb	r3, r3
 208 0066 1370     		strb	r3, [r2]
 209 0068 02E0     		b	.L17
 210              	.L16:
 201:main.c        ****     }
 211              		.loc 1 201 0
 212 006a 0022     		movs	r2, #0
 213 006c 044B     		ldr	r3, .L19
 214 006e 1A70     		strb	r2, [r3]
 215              	.L17:
 204:main.c        ****     Encoder_R0_Timer_Start();
 216              		.loc 1 204 0
 217 0070 034A     		ldr	r2, .L19
 218 0072 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 219 0074 1344     		add	r3, r3, r2
 220 0076 0022     		movs	r2, #0
 221 0078 1A71     		strb	r2, [r3, #4]
 205:main.c        **** }
 222              		.loc 1 205 0
 223 007a FFF7FEFF 		bl	Encoder_R0_Timer_Start
 224              	.LVL10:
 225 007e 70BD     		pop	{r4, r5, r6, pc}
 226              	.L20:
 227              		.align	2
 228              	.L19:
 229 0080 00000000 		.word	.LANCHOR0
 230              		.cfi_endproc
 231              	.LFE68:
 232              		.size	ENC_R0_ISR_vect, .-ENC_R0_ISR_vect
 233              		.section	.text.ENC_L0_ISR_vect,"ax",%progbits
 234              		.align	2
 235              		.global	ENC_L0_ISR_vect
 236              		.thumb
 237              		.thumb_func
 238              		.type	ENC_L0_ISR_vect, %function
 239              	ENC_L0_ISR_vect:
 240              	.LFB69:
 216:main.c        ****     if(timerL0_index > ENCODER_TIMER_ARRAY_SIZE - 1){
 241              		.loc 1 216 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245 0000 70B5     		push	{r4, r5, r6, lr}
 246              		.cfi_def_cfa_offset 16
 247              		.cfi_offset 4, -16
 248              		.cfi_offset 5, -12
 249              		.cfi_offset 6, -8
 250              		.cfi_offset 14, -4
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 11


 217:main.c        ****         timerL0_index = 0;   
 251              		.loc 1 217 0
 252 0002 1F4B     		ldr	r3, .L28
 253 0004 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 254 0006 DBB2     		uxtb	r3, r3
 255 0008 042B     		cmp	r3, #4
 256 000a 02D9     		bls	.L22
 218:main.c        ****     }
 257              		.loc 1 218 0
 258 000c 0022     		movs	r2, #0
 259 000e 1C4B     		ldr	r3, .L28
 260 0010 5A72     		strb	r2, [r3, #9]
 261              	.L22:
 220:main.c        ****     if(timerL0_overflows[timerL0_index] == false){
 262              		.loc 1 220 0
 263 0012 FFF7FEFF 		bl	Encoder_L0_Timer_ReadPeriod
 264              	.LVL11:
 265 0016 0446     		mov	r4, r0
 266              	.LVL12:
 221:main.c        ****         //If the timer has not overflowed, store the capture value
 267              		.loc 1 221 0
 268 0018 194A     		ldr	r2, .L28
 269 001a 537A     		ldrb	r3, [r2, #9]	@ zero_extendqisi2
 270 001c 1344     		add	r3, r3, r2
 271 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 272 0020 13F0FF0F 		tst	r3, #255
 273 0024 0AD1     		bne	.L23
 223:main.c        ****     } else {
 274              		.loc 1 223 0
 275 0026 1546     		mov	r5, r2
 276 0028 567A     		ldrb	r6, [r2, #9]	@ zero_extendqisi2
 277 002a F6B2     		uxtb	r6, r6
 278 002c FFF7FEFF 		bl	Encoder_L0_Timer_ReadCapture
 279              	.LVL13:
 280 0030 201A     		subs	r0, r4, r0
 281 0032 80B2     		uxth	r0, r0
 282 0034 05EB4605 		add	r5, r5, r6, lsl #1
 283 0038 2884     		strh	r0, [r5, #32]	@ movhi
 284 003a 04E0     		b	.L24
 285              	.LVL14:
 286              	.L23:
 226:main.c        ****     }
 287              		.loc 1 226 0
 288 003c 104B     		ldr	r3, .L28
 289 003e 5A7A     		ldrb	r2, [r3, #9]	@ zero_extendqisi2
 290 0040 03EB4203 		add	r3, r3, r2, lsl #1
 291 0044 1884     		strh	r0, [r3, #32]	@ movhi
 292              	.LVL15:
 293              	.L24:
 229:main.c        ****     //Re-load the timer period into the count register to restart the timer
 294              		.loc 1 229 0
 295 0046 FFF7FEFF 		bl	Encoder_L0_Timer_ClearFIFO
 296              	.LVL16:
 231:main.c        ****     Encoder_L0_Timer_WriteCounter(timer_period);
 297              		.loc 1 231 0
 298 004a FFF7FEFF 		bl	Encoder_L0_Timer_Stop
 299              	.LVL17:
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 12


 232:main.c        ****     
 300              		.loc 1 232 0
 301 004e 2046     		mov	r0, r4
 302 0050 FFF7FEFF 		bl	Encoder_L0_Timer_WriteCounter
 303              	.LVL18:
 234:main.c        ****         timerL0_index++;   
 304              		.loc 1 234 0
 305 0054 0A4B     		ldr	r3, .L28
 306 0056 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 307 0058 DBB2     		uxtb	r3, r3
 308 005a 032B     		cmp	r3, #3
 309 005c 05D8     		bhi	.L25
 235:main.c        ****     } else {
 310              		.loc 1 235 0
 311 005e 084A     		ldr	r2, .L28
 312 0060 537A     		ldrb	r3, [r2, #9]	@ zero_extendqisi2
 313 0062 0133     		adds	r3, r3, #1
 314 0064 DBB2     		uxtb	r3, r3
 315 0066 5372     		strb	r3, [r2, #9]
 316 0068 02E0     		b	.L26
 317              	.L25:
 237:main.c        ****     }
 318              		.loc 1 237 0
 319 006a 0022     		movs	r2, #0
 320 006c 044B     		ldr	r3, .L28
 321 006e 5A72     		strb	r2, [r3, #9]
 322              	.L26:
 240:main.c        ****     Encoder_L0_Timer_Start();
 323              		.loc 1 240 0
 324 0070 034A     		ldr	r2, .L28
 325 0072 537A     		ldrb	r3, [r2, #9]	@ zero_extendqisi2
 326 0074 1344     		add	r3, r3, r2
 327 0076 0022     		movs	r2, #0
 328 0078 1A73     		strb	r2, [r3, #12]
 241:main.c        **** }
 329              		.loc 1 241 0
 330 007a FFF7FEFF 		bl	Encoder_L0_Timer_Start
 331              	.LVL19:
 332 007e 70BD     		pop	{r4, r5, r6, pc}
 333              	.L29:
 334              		.align	2
 335              	.L28:
 336 0080 00000000 		.word	.LANCHOR0
 337              		.cfi_endproc
 338              	.LFE69:
 339              		.size	ENC_L0_ISR_vect, .-ENC_L0_ISR_vect
 340              		.section	.text.ENC_R1_ISR_vect,"ax",%progbits
 341              		.align	2
 342              		.global	ENC_R1_ISR_vect
 343              		.thumb
 344              		.thumb_func
 345              		.type	ENC_R1_ISR_vect, %function
 346              	ENC_R1_ISR_vect:
 347              	.LFB70:
 251:main.c        ****     uint8_t encoder_R0_pin_state = Encoder_R0_Read();
 348              		.loc 1 251 0
 349              		.cfi_startproc
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 13


 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352 0000 08B5     		push	{r3, lr}
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 3, -8
 355              		.cfi_offset 14, -4
 252:main.c        ****     if(encoder_R0_pin_state == 0u){
 356              		.loc 1 252 0
 357 0002 FFF7FEFF 		bl	Encoder_R0_Read
 358              	.LVL20:
 253:main.c        ****         //R1 ISR has been triggered before R0.  We will interpret this as the wheel moving 
 359              		.loc 1 253 0
 360 0006 18B9     		cbnz	r0, .L31
 256:main.c        ****     } else {
 361              		.loc 1 256 0
 362 0008 0022     		movs	r2, #0
 363 000a 044B     		ldr	r3, .L34
 364 000c 1A70     		strb	r2, [r3]
 365 000e 02E0     		b	.L32
 366              	.L31:
 259:main.c        ****     }
 367              		.loc 1 259 0
 368 0010 0122     		movs	r2, #1
 369 0012 024B     		ldr	r3, .L34
 370 0014 1A70     		strb	r2, [r3]
 371              	.L32:
 262:main.c        **** }
 372              		.loc 1 262 0
 373 0016 FFF7FEFF 		bl	Encoder_R1_ClearInterrupt
 374              	.LVL21:
 375 001a 08BD     		pop	{r3, pc}
 376              	.L35:
 377              		.align	2
 378              	.L34:
 379 001c 00000000 		.word	.LANCHOR1
 380              		.cfi_endproc
 381              	.LFE70:
 382              		.size	ENC_R1_ISR_vect, .-ENC_R1_ISR_vect
 383              		.section	.text.ENC_L1_ISR_vect,"ax",%progbits
 384              		.align	2
 385              		.global	ENC_L1_ISR_vect
 386              		.thumb
 387              		.thumb_func
 388              		.type	ENC_L1_ISR_vect, %function
 389              	ENC_L1_ISR_vect:
 390              	.LFB71:
 272:main.c        ****     uint8_t encoder_L0_pin_state = Encoder_L0_Read();
 391              		.loc 1 272 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395 0000 08B5     		push	{r3, lr}
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 3, -8
 398              		.cfi_offset 14, -4
 273:main.c        ****     if(encoder_L0_pin_state == 0u){
 399              		.loc 1 273 0
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 14


 400 0002 FFF7FEFF 		bl	Encoder_L0_Read
 401              	.LVL22:
 274:main.c        ****         //L1 ISR has been triggered before L0.  We will interpret this as the wheel moving 
 402              		.loc 1 274 0
 403 0006 18B9     		cbnz	r0, .L37
 277:main.c        ****     } else {
 404              		.loc 1 277 0
 405 0008 0022     		movs	r2, #0
 406 000a 044B     		ldr	r3, .L40
 407 000c 5A70     		strb	r2, [r3, #1]
 408 000e 02E0     		b	.L38
 409              	.L37:
 280:main.c        ****     }
 410              		.loc 1 280 0
 411 0010 0122     		movs	r2, #1
 412 0012 024B     		ldr	r3, .L40
 413 0014 5A70     		strb	r2, [r3, #1]
 414              	.L38:
 283:main.c        **** }
 415              		.loc 1 283 0
 416 0016 FFF7FEFF 		bl	Encoder_L1_ClearInterrupt
 417              	.LVL23:
 418 001a 08BD     		pop	{r3, pc}
 419              	.L41:
 420              		.align	2
 421              	.L40:
 422 001c 00000000 		.word	.LANCHOR1
 423              		.cfi_endproc
 424              	.LFE71:
 425              		.size	ENC_L1_ISR_vect, .-ENC_L1_ISR_vect
 426              		.section	.text.usbPutString,"ax",%progbits
 427              		.align	2
 428              		.global	usbPutString
 429              		.thumb
 430              		.thumb_func
 431              		.type	usbPutString, %function
 432              	usbPutString:
 433              	.LFB64:
 116:main.c        ****     while(USBUART_CDCIsReady() == 0);
 434              		.loc 1 116 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              	.LVL24:
 439 0000 10B5     		push	{r4, lr}
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 4, -8
 442              		.cfi_offset 14, -4
 443 0002 0446     		mov	r4, r0
 444              	.LVL25:
 445              	.L43:
 117:main.c        ****     string[63] = '\0';
 446              		.loc 1 117 0 discriminator 1
 447 0004 FFF7FEFF 		bl	USBUART_CDCIsReady
 448              	.LVL26:
 449 0008 0028     		cmp	r0, #0
 450 000a FBD0     		beq	.L43
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 15


 118:main.c        ****     string[62] = '!';
 451              		.loc 1 118 0
 452 000c 0023     		movs	r3, #0
 453 000e 84F83F30 		strb	r3, [r4, #63]
 119:main.c        ****     USBUART_PutData((uint8*)string,strlen(string));    
 454              		.loc 1 119 0
 455 0012 2123     		movs	r3, #33
 456 0014 84F83E30 		strb	r3, [r4, #62]
 120:main.c        **** }
 457              		.loc 1 120 0
 458 0018 2046     		mov	r0, r4
 459 001a FFF7FEFF 		bl	strlen
 460              	.LVL27:
 461 001e 81B2     		uxth	r1, r0
 462 0020 2046     		mov	r0, r4
 463 0022 FFF7FEFF 		bl	USBUART_PutData
 464              	.LVL28:
 465 0026 10BD     		pop	{r4, pc}
 466              		.cfi_endproc
 467              	.LFE64:
 468              		.size	usbPutString, .-usbPutString
 469              		.section	.text.usbPutChar,"ax",%progbits
 470              		.align	2
 471              		.global	usbPutChar
 472              		.thumb
 473              		.thumb_func
 474              		.type	usbPutChar, %function
 475              	usbPutChar:
 476              	.LFB65:
 127:main.c        ****     while(USBUART_CDCIsReady() == 0);
 477              		.loc 1 127 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              	.LVL29:
 482 0000 10B5     		push	{r4, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 4, -8
 485              		.cfi_offset 14, -4
 486 0002 0446     		mov	r4, r0
 487              	.LVL30:
 488              	.L46:
 128:main.c        ****     USBUART_PutChar(c);   
 489              		.loc 1 128 0 discriminator 1
 490 0004 FFF7FEFF 		bl	USBUART_CDCIsReady
 491              	.LVL31:
 492 0008 0028     		cmp	r0, #0
 493 000a FBD0     		beq	.L46
 129:main.c        **** }
 494              		.loc 1 129 0
 495 000c 2046     		mov	r0, r4
 496 000e FFF7FEFF 		bl	USBUART_PutChar
 497              	.LVL32:
 498 0012 10BD     		pop	{r4, pc}
 499              		.cfi_endproc
 500              	.LFE65:
 501              		.size	usbPutChar, .-usbPutChar
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 16


 502              		.section	.text.RX_ISR_vect,"ax",%progbits
 503              		.align	2
 504              		.global	RX_ISR_vect
 505              		.thumb
 506              		.thumb_func
 507              		.type	RX_ISR_vect, %function
 508              	RX_ISR_vect:
 509              	.LFB73:
 294:main.c        ****     
 295:main.c        ****     
 296:main.c        **** }
 297:main.c        **** /* ISR: RX_ISR_vect
 298:main.c        ****  * Purpose: Store characters received from UART into the receive buffer
 299:main.c        ****  * Modifies: char *receive_buffer_ptr[] - the input character buffer
 300:main.c        ****  *                                         which is either buffer_1 or buffer_2
 301:main.c        ****  *           uint8_t rx_buffer_size - the index of the rx buffer is updated
 302:main.c        ****  *                      
 303:main.c        ****  */
 304:main.c        **** CY_ISR(RX_ISR_vect){
 510              		.loc 1 304 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514 0000 10B5     		push	{r4, lr}
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 4, -8
 517              		.cfi_offset 14, -4
 305:main.c        ****     char byte_received;
 306:main.c        ****     //Check for the FIFO_NOEMPTY flag which indicates the FIFO has data available to read
 307:main.c        ****     if(UART_ReadRxStatus() & UART_RX_STS_FIFO_NOTEMPTY){
 518              		.loc 1 307 0
 519 0002 FFF7FEFF 		bl	UART_ReadRxStatus
 520              	.LVL33:
 521 0006 10F0200F 		tst	r0, #32
 522 000a 11D0     		beq	.L48
 308:main.c        ****         byte_received = UART_GetChar();
 523              		.loc 1 308 0
 524 000c FFF7FEFF 		bl	UART_GetChar
 525              	.LVL34:
 526 0010 0446     		mov	r4, r0
 527              	.LVL35:
 309:main.c        ****         usbPutChar(byte_received);
 528              		.loc 1 309 0
 529 0012 FFF7FEFF 		bl	usbPutChar
 530              	.LVL36:
 310:main.c        ****         //USBUART_PutChar(byte_received);
 311:main.c        ****         receiving_buffer_ptr[rx_buffer_size] = byte_received;
 531              		.loc 1 311 0
 532 0016 074A     		ldr	r2, .L51
 533 0018 92F82A30 		ldrb	r3, [r2, #42]	@ zero_extendqisi2
 534 001c DBB2     		uxtb	r3, r3
 535 001e 0649     		ldr	r1, .L51+4
 536 0020 0968     		ldr	r1, [r1]
 537 0022 CC54     		strb	r4, [r1, r3]
 312:main.c        ****         rx_buffer_size++;
 538              		.loc 1 312 0
 539 0024 92F82A30 		ldrb	r3, [r2, #42]	@ zero_extendqisi2
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 17


 540 0028 0133     		adds	r3, r3, #1
 541 002a DBB2     		uxtb	r3, r3
 542 002c 82F82A30 		strb	r3, [r2, #42]
 543              	.LVL37:
 544              	.L48:
 545 0030 10BD     		pop	{r4, pc}
 546              	.L52:
 547 0032 00BF     		.align	2
 548              	.L51:
 549 0034 00000000 		.word	.LANCHOR0
 550 0038 00000000 		.word	receiving_buffer_ptr
 551              		.cfi_endproc
 552              	.LFE73:
 553              		.size	RX_ISR_vect, .-RX_ISR_vect
 554              		.global	__aeabi_i2d
 555              		.global	__aeabi_dmul
 556              		.section	.text.main,"ax",%progbits
 557              		.align	2
 558              		.global	main
 559              		.thumb
 560              		.thumb_func
 561              		.type	main, %function
 562              	main:
 563              	.LFB74:
 313:main.c        ****     }
 314:main.c        **** }
 315:main.c        **** 
 316:main.c        **** /* *********************************************** */
 317:main.c        **** /* **********************MAIN********************* */
 318:main.c        **** /* *********************************************** */
 319:main.c        **** int main(void)
 320:main.c        **** {
 564              		.loc 1 320 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 16
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 569              		.cfi_def_cfa_offset 36
 570              		.cfi_offset 4, -36
 571              		.cfi_offset 5, -32
 572              		.cfi_offset 6, -28
 573              		.cfi_offset 7, -24
 574              		.cfi_offset 8, -20
 575              		.cfi_offset 9, -16
 576              		.cfi_offset 10, -12
 577              		.cfi_offset 11, -8
 578              		.cfi_offset 14, -4
 579 0004 8BB0     		sub	sp, sp, #44
 580              		.cfi_def_cfa_offset 80
 321:main.c        ****     /* ********INITIALISE CODE******** */
 322:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 581              		.loc 1 322 0
 582              		.syntax unified
 583              	@ 322 "main.c" 1
 584 0006 62B6     		CPSIE   i
 585              	@ 0 "" 2
 323:main.c        ****     //Ensure reset lines are low initially
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 18


 324:main.c        ****     PWM_RESET_Write(0b0000);
 586              		.loc 1 324 0
 587              		.thumb
 588              		.syntax unified
 589 0008 0020     		movs	r0, #0
 590 000a FFF7FEFF 		bl	PWM_RESET_Write
 591              	.LVL38:
 325:main.c        ****     ENCODER_TMR_RESET_Write(0b0000);
 592              		.loc 1 325 0
 593 000e 0020     		movs	r0, #0
 594 0010 FFF7FEFF 		bl	ENCODER_TMR_RESET_Write
 595              	.LVL39:
 326:main.c        ****     
 327:main.c        ****     //Enable the USART
 328:main.c        ****     UART_Start();
 596              		.loc 1 328 0
 597 0014 FFF7FEFF 		bl	UART_Start
 598              	.LVL40:
 329:main.c        ****     UART_EnableRxInt();
 599              		.loc 1 329 0
 600 0018 A14B     		ldr	r3, .L68+8
 601 001a 2022     		movs	r2, #32
 602 001c 1A60     		str	r2, [r3]
 330:main.c        ****     UART_EnableTxInt();
 603              		.loc 1 330 0
 604 001e 8022     		movs	r2, #128
 605 0020 1A60     		str	r2, [r3]
 331:main.c        ****     USBUART_Start(0,USBUART_5V_OPERATION);
 606              		.loc 1 331 0
 607 0022 0121     		movs	r1, #1
 608 0024 0020     		movs	r0, #0
 609 0026 FFF7FEFF 		bl	USBUART_Start
 610              	.LVL41:
 332:main.c        ****     
 333:main.c        ****     //Enable the PWM wheel outputs
 334:main.c        ****     PWM_L_Start();
 611              		.loc 1 334 0
 612 002a FFF7FEFF 		bl	PWM_L_Start
 613              	.LVL42:
 335:main.c        ****     PWM_R_Start();
 614              		.loc 1 335 0
 615 002e FFF7FEFF 		bl	PWM_R_Start
 616              	.LVL43:
 336:main.c        **** 
 337:main.c        ****     //Enable the encoder timers
 338:main.c        ****     Encoder_L0_Timer_Start();
 617              		.loc 1 338 0
 618 0032 FFF7FEFF 		bl	Encoder_L0_Timer_Start
 619              	.LVL44:
 339:main.c        ****     Encoder_R0_Timer_Start();
 620              		.loc 1 339 0
 621 0036 FFF7FEFF 		bl	Encoder_R0_Timer_Start
 622              	.LVL45:
 340:main.c        ****     
 341:main.c        ****     //Configure the initial pointers for the USART RX isr and the main function
 342:main.c        ****     receiving_buffer_ptr = buffer_1;
 623              		.loc 1 342 0
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 19


 624 003a 9A4B     		ldr	r3, .L68+12
 625 003c 03F12C01 		add	r1, r3, #44
 626 0040 994A     		ldr	r2, .L68+16
 627 0042 1160     		str	r1, [r2]
 343:main.c        ****     processing_buffer_ptr = buffer_2;
 628              		.loc 1 343 0
 629 0044 9033     		adds	r3, r3, #144
 630 0046 994A     		ldr	r2, .L68+20
 631 0048 1360     		str	r3, [r2]
 632              	.LVL46:
 344:main.c        ****     uint8_t read_buffer_size = 0; //The size of the buffer the main function will read from
 345:main.c        **** 
 346:main.c        ****     //Get the robot id
 347:main.c        ****     uint8_t robot_id = get_robot_ID();
 633              		.loc 1 347 0
 634 004a FFF7FEFF 		bl	get_robot_ID
 635              	.LVL47:
 636 004e 8246     		mov	r10, r0
 637              	.LVL48:
 348:main.c        ****     
 349:main.c        ****     //Commands from USART.  Initialise to 0[m/s], 0[rad/s]
 350:main.c        ****     ROBOT_COMMAND *current_command = malloc(sizeof(*current_command));
 638              		.loc 1 350 0
 639 0050 1020     		movs	r0, #16
 640 0052 FFF7FEFF 		bl	malloc
 641              	.LVL49:
 642 0056 0546     		mov	r5, r0
 643              	.LVL50:
 351:main.c        ****     current_command->angv = 0;
 644              		.loc 1 351 0
 645 0058 0026     		movs	r6, #0
 646 005a 0027     		movs	r7, #0
 647 005c C0E90267 		strd	r6, [r0, #8]
 352:main.c        ****     current_command->linv = 0;
 648              		.loc 1 352 0
 649 0060 C0E90067 		strd	r6, [r0]
 650              	.LVL51:
 353:main.c        ****     uint8_t starting_index = 0; //Starting index of the starting bytes of the received data
 354:main.c        ****     bool transmission_corrupted = false;
 355:main.c        **** 	
 356:main.c        **** 	//Initialise PID with the gain values specfied
 357:main.c        **** 	PID_initialise(&pid_linv,Pgain_linv,Dgain_linv,Igain_linv);
 651              		.loc 1 357 0
 652 0064 4FF00008 		mov	r8, #0
 653 0068 DFF88492 		ldr	r9, .L68+88
 654 006c CDE90267 		strd	r6, [sp, #8]
 655 0070 CDE90067 		strd	r6, [sp]
 656 0074 4246     		mov	r2, r8
 657 0076 4B46     		mov	r3, r9
 658 0078 8D48     		ldr	r0, .L68+24
 659              	.LVL52:
 660 007a FFF7FEFF 		bl	PID_initialise
 661              	.LVL53:
 358:main.c        **** 	PID_initialise(&pid_angv,Pgain_angv,Dgain_angv,Igain_angv);
 662              		.loc 1 358 0
 663 007e CDE90267 		strd	r6, [sp, #8]
 664 0082 CDE90067 		strd	r6, [sp]
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 20


 665 0086 4246     		mov	r2, r8
 666 0088 4B46     		mov	r3, r9
 667 008a 8A48     		ldr	r0, .L68+28
 668 008c FFF7FEFF 		bl	PID_initialise
 669              	.LVL54:
 359:main.c        ****     
 360:main.c        ****     char *string = (char*)malloc(STR_LEN_MAX);
 670              		.loc 1 360 0
 671 0090 6420     		movs	r0, #100
 672 0092 FFF7FEFF 		bl	malloc
 673              	.LVL55:
 674 0096 0446     		mov	r4, r0
 675              	.LVL56:
 361:main.c        **** 
 362:main.c        ****     //Enable and configure all interrupts
 363:main.c        ****     tx_isr_StartEx(TX_ISR_vect);
 676              		.loc 1 363 0
 677 0098 8748     		ldr	r0, .L68+32
 678              	.LVL57:
 679 009a FFF7FEFF 		bl	tx_isr_StartEx
 680              	.LVL58:
 364:main.c        ****     rx_isr_StartEx(RX_ISR_vect);
 681              		.loc 1 364 0
 682 009e 8748     		ldr	r0, .L68+36
 683 00a0 FFF7FEFF 		bl	rx_isr_StartEx
 684              	.LVL59:
 365:main.c        ****     ENCODER_R0_OVF_ISR_StartEx(ENCODER_R0_OVF_ISR_vect);
 685              		.loc 1 365 0
 686 00a4 8648     		ldr	r0, .L68+40
 687 00a6 FFF7FEFF 		bl	ENCODER_R0_OVF_ISR_StartEx
 688              	.LVL60:
 366:main.c        ****     ENCODER_L0_OVF_ISR_StartEx(ENCODER_L0_OVF_ISR_vect);
 689              		.loc 1 366 0
 690 00aa 8648     		ldr	r0, .L68+44
 691 00ac FFF7FEFF 		bl	ENCODER_L0_OVF_ISR_StartEx
 692              	.LVL61:
 367:main.c        ****     ENC_R0_ISR_StartEx(ENC_R0_ISR_vect);
 693              		.loc 1 367 0
 694 00b0 8548     		ldr	r0, .L68+48
 695 00b2 FFF7FEFF 		bl	ENC_R0_ISR_StartEx
 696              	.LVL62:
 368:main.c        ****     ENC_L0_ISR_StartEx(ENC_L0_ISR_vect);
 697              		.loc 1 368 0
 698 00b6 8548     		ldr	r0, .L68+52
 699 00b8 FFF7FEFF 		bl	ENC_L0_ISR_StartEx
 700              	.LVL63:
 369:main.c        ****     ENC_R1_ISR_StartEx(ENC_R1_ISR_vect);
 701              		.loc 1 369 0
 702 00bc 8448     		ldr	r0, .L68+56
 703 00be FFF7FEFF 		bl	ENC_R1_ISR_StartEx
 704              	.LVL64:
 370:main.c        ****     ENC_L1_ISR_StartEx(ENC_L1_ISR_vect);
 705              		.loc 1 370 0
 706 00c2 8448     		ldr	r0, .L68+60
 707 00c4 FFF7FEFF 		bl	ENC_L1_ISR_StartEx
 708              	.LVL65:
 371:main.c        ****     
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 21


 372:main.c        ****     usbPutString("Welcome to the ROBOT SOCCER TEST DEBUGGING TERMINAL\n\r");    
 709              		.loc 1 372 0
 710 00c8 8348     		ldr	r0, .L68+64
 711 00ca FFF7FEFF 		bl	usbPutString
 712              	.LVL66:
 373:main.c        ****     sprintf(string,"Robot ID: %d\r\n",robot_id);
 713              		.loc 1 373 0
 714 00ce D346     		mov	fp, r10
 715 00d0 5246     		mov	r2, r10
 716 00d2 8249     		ldr	r1, .L68+68
 717 00d4 2046     		mov	r0, r4
 718 00d6 FFF7FEFF 		bl	sprintf
 719              	.LVL67:
 374:main.c        ****     usbPutString(string);
 720              		.loc 1 374 0
 721 00da 2046     		mov	r0, r4
 722 00dc FFF7FEFF 		bl	usbPutString
 723              	.LVL68:
 353:main.c        ****     bool transmission_corrupted = false;
 724              		.loc 1 353 0
 725 00e0 0024     		movs	r4, #0
 726              	.LVL69:
 727              	.L54:
 375:main.c        ****     
 376:main.c        ****     /* *************RUN CODE************* */
 377:main.c        ****     for(;;){
 378:main.c        ****         /* Get transmission command from USART */
 379:main.c        ****         //Full transmission string has been received in the buffer.  This condition needs to be tes
 380:main.c        ****         if(rx_buffer_size > TRANSMISSION_STR_LENGTH){ 
 728              		.loc 1 380 0
 729 00e2 704B     		ldr	r3, .L68+12
 730 00e4 93F82A30 		ldrb	r3, [r3, #42]	@ zero_extendqisi2
 731 00e8 DBB2     		uxtb	r3, r3
 732 00ea 302B     		cmp	r3, #48
 733 00ec F9D9     		bls	.L54
 734              	.LBB2:
 381:main.c        ****             
 382:main.c        ****             //****CRITICAL_SECTION
 383:main.c        ****             //Swap buffers the pointers point to to read what the ISR has been writing to
 384:main.c        ****             UART_DisableRxInt();    
 735              		.loc 1 384 0
 736 00ee 2022     		movs	r2, #32
 737 00f0 7B4B     		ldr	r3, .L68+72
 738 00f2 1A60     		str	r2, [r3]
 385:main.c        ****                 volatile char *temp = receiving_buffer_ptr;
 739              		.loc 1 385 0
 740 00f4 6C49     		ldr	r1, .L68+16
 741 00f6 0868     		ldr	r0, [r1]
 742              	.LVL70:
 386:main.c        ****                 receiving_buffer_ptr = processing_buffer_ptr;
 743              		.loc 1 386 0
 744 00f8 6C4B     		ldr	r3, .L68+20
 745 00fa 1E68     		ldr	r6, [r3]
 746 00fc 0E60     		str	r6, [r1]
 387:main.c        ****                 processing_buffer_ptr = temp;
 747              		.loc 1 387 0
 748 00fe 1860     		str	r0, [r3]
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 22


 388:main.c        ****             
 389:main.c        ****                 //Save the size of the buffer written to by the UXART RX isr
 390:main.c        ****                 read_buffer_size = rx_buffer_size;
 749              		.loc 1 390 0
 750 0100 6848     		ldr	r0, .L68+12
 751              	.LVL71:
 752 0102 90F82A10 		ldrb	r1, [r0, #42]	@ zero_extendqisi2
 753 0106 C9B2     		uxtb	r1, r1
 754              	.LVL72:
 391:main.c        ****                 //Reset the rx_buffer_size for when the RX isr writes to the new buffer
 392:main.c        ****                 rx_buffer_size = 0;
 755              		.loc 1 392 0
 756 0108 0023     		movs	r3, #0
 757 010a 80F82A30 		strb	r3, [r0, #42]
 393:main.c        ****             UART_EnableRxInt();
 758              		.loc 1 393 0
 759 010e 6448     		ldr	r0, .L68+8
 760 0110 0260     		str	r2, [r0]
 761              	.LVL73:
 762              	.LBB3:
 394:main.c        ****             //****END OF CRITICAL SECTION
 395:main.c        ****             
 396:main.c        ****             //Obtain the starting index of the command string in the receive buffer
 397:main.c        ****             //The start bytes of the transmission are 0xFF, 0xFF and 0x01
 398:main.c        ****             for(uint8_t i = 0; i < read_buffer_size; ++i){
 763              		.loc 1 398 0
 764 0112 16E0     		b	.L55
 765              	.LVL74:
 766              	.L57:
 399:main.c        ****                 //To avoid reading bad memory outside of what has been allocated to the buffer chec
 400:main.c        ****                 if(i + 2 < STR_LEN_MAX){
 767              		.loc 1 400 0
 768 0114 9A1C     		adds	r2, r3, #2
 769 0116 632A     		cmp	r2, #99
 770 0118 11DC     		bgt	.L56
 401:main.c        ****                     if(receiving_buffer_ptr[i] == (char)0xFF && receiving_buffer_ptr[i+1] == (char)
 771              		.loc 1 401 0
 772 011a 634A     		ldr	r2, .L68+16
 773 011c 1068     		ldr	r0, [r2]
 774 011e 1A46     		mov	r2, r3
 775 0120 C65C     		ldrb	r6, [r0, r3]	@ zero_extendqisi2
 776 0122 F6B2     		uxtb	r6, r6
 777 0124 FF2E     		cmp	r6, #255
 778 0126 0AD1     		bne	.L56
 779              		.loc 1 401 0 is_stmt 0 discriminator 1
 780 0128 5E1C     		adds	r6, r3, #1
 781 012a 865D     		ldrb	r6, [r0, r6]	@ zero_extendqisi2
 782 012c F6B2     		uxtb	r6, r6
 783 012e FF2E     		cmp	r6, #255
 784 0130 05D1     		bne	.L56
 785              		.loc 1 401 0 discriminator 2
 786 0132 0232     		adds	r2, r2, #2
 787 0134 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 788 0136 D2B2     		uxtb	r2, r2
 789 0138 012A     		cmp	r2, #1
 790 013a 00D1     		bne	.L56
 402:main.c        ****                         starting_index = i;
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 23


 791              		.loc 1 402 0 is_stmt 1
 792 013c 1C46     		mov	r4, r3
 793              	.LVL75:
 794              	.L56:
 398:main.c        ****                 //To avoid reading bad memory outside of what has been allocated to the buffer chec
 795              		.loc 1 398 0 discriminator 2
 796 013e 0133     		adds	r3, r3, #1
 797              	.LVL76:
 798 0140 DBB2     		uxtb	r3, r3
 799              	.LVL77:
 800              	.L55:
 398:main.c        ****                 //To avoid reading bad memory outside of what has been allocated to the buffer chec
 801              		.loc 1 398 0 is_stmt 0 discriminator 1
 802 0142 8B42     		cmp	r3, r1
 803 0144 E6D3     		bcc	.L57
 804 0146 2346     		mov	r3, r4
 805              	.LVL78:
 806 0148 0022     		movs	r2, #0
 807 014a 08E0     		b	.L58
 808              	.LVL79:
 809              	.L60:
 810              	.LBE3:
 811              	.LBB4:
 403:main.c        ****                     }
 404:main.c        ****                 }
 405:main.c        ****             }
 406:main.c        ****             
 407:main.c        ****             char check_sum = 0;
 408:main.c        ****             //Read the receiving buffer (from receiving_buffer_ptr), parse it and update the robot 
 409:main.c        ****             //Recall the packet is 48 bytes long
 410:main.c        ****             //Check for accuracy in the transmission
 411:main.c        ****             //The sum of the bytes plus the last checksum byte should be 0 if receieved in completi
 412:main.c        ****             for(uint8_t i = starting_index; i < starting_index + TRANSMISSION_PKT_SIZE - 1; ++i){
 413:main.c        ****                 if(i < STR_LEN_MAX){
 812              		.loc 1 413 0 is_stmt 1
 813 014c 632B     		cmp	r3, #99
 814 014e 04D8     		bhi	.L59
 414:main.c        ****                     check_sum += (uint8_t)receiving_buffer_ptr[i];
 815              		.loc 1 414 0
 816 0150 5549     		ldr	r1, .L68+16
 817 0152 0968     		ldr	r1, [r1]
 818 0154 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 819 0156 0A44     		add	r2, r2, r1
 820              	.LVL80:
 821 0158 D2B2     		uxtb	r2, r2
 822              	.LVL81:
 823              	.L59:
 412:main.c        ****                 if(i < STR_LEN_MAX){
 824              		.loc 1 412 0 discriminator 2
 825 015a 0133     		adds	r3, r3, #1
 826              	.LVL82:
 827 015c DBB2     		uxtb	r3, r3
 828              	.LVL83:
 829              	.L58:
 412:main.c        ****                 if(i < STR_LEN_MAX){
 830              		.loc 1 412 0 is_stmt 0 discriminator 1
 831 015e 04F12F01 		add	r1, r4, #47
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 24


 832 0162 8B42     		cmp	r3, r1
 833 0164 F2DB     		blt	.L60
 834              	.LBE4:
 415:main.c        ****                 }
 416:main.c        ****             }
 417:main.c        ****             
 418:main.c        ****             //Check the checksum - if it's zero - uncorrupted
 419:main.c        ****             if(check_sum != 0){
 835              		.loc 1 419 0 is_stmt 1
 836 0166 0AB1     		cbz	r2, .L66
 420:main.c        ****                 transmission_corrupted = true;
 837              		.loc 1 420 0
 838 0168 0121     		movs	r1, #1
 839 016a 00E0     		b	.L61
 840              	.L66:
 421:main.c        ****             } else {
 422:main.c        ****                 transmission_corrupted = false;   
 841              		.loc 1 422 0
 842 016c 0021     		movs	r1, #0
 843              	.L61:
 844              	.LVL84:
 423:main.c        ****             }
 424:main.c        ****             /* *Parse input command* */          
 425:main.c        ****             //Each byte for each robot begins at three plus the nth multiple of 4 after the startin
 426:main.c        ****             //The first three bytes are unrelated to speed transmission as these are the starting b
 427:main.c        ****             //Since robot_id begins at 1 for the 1st robot, the starting index needs to begin at th
 428:main.c        ****             uint8_t robot_data_index = 4 * (robot_id - 1) + 3 + starting_index;
 845              		.loc 1 428 0
 846 016e 0BF1FF33 		add	r3, fp, #-1
 847              	.LVL85:
 848 0172 04EB8303 		add	r3, r4, r3, lsl #2
 849 0176 0333     		adds	r3, r3, #3
 850 0178 DBB2     		uxtb	r3, r3
 851              	.LVL86:
 429:main.c        ****             
 430:main.c        ****             //The transmission has the least significant bits followed by the most significant bits
 431:main.c        ****             //Concatenate these two bytes together to form the scaled version of the linear and ang
 432:main.c        ****             //Two bytes for the linear velocity followed by two bytes for the angular velocity
 433:main.c        ****             uint8_t linv_LSB, argv_LSB;
 434:main.c        ****             int16_t linv_MSB, argv_MSB, scaled_linv, scaled_argv;
 435:main.c        ****             
 436:main.c        ****             //If the transmission has been corrupted, don't update the command
 437:main.c        ****             if(robot_data_index + 3 < STR_LEN_MAX && transmission_corrupted == false){
 852              		.loc 1 437 0
 853 017a DA1C     		adds	r2, r3, #3
 854              	.LVL87:
 855 017c 632A     		cmp	r2, #99
 856 017e 22DC     		bgt	.L62
 857              		.loc 1 437 0 is_stmt 0 discriminator 1
 858 0180 09BB     		cbnz	r1, .L62
 438:main.c        ****                 linv_MSB = (int16_t)(receiving_buffer_ptr[robot_data_index + 1] << 8);
 859              		.loc 1 438 0 is_stmt 1
 860 0182 494A     		ldr	r2, .L68+16
 861 0184 1668     		ldr	r6, [r2]
 862 0186 5A1C     		adds	r2, r3, #1
 863 0188 B25C     		ldrb	r2, [r6, r2]	@ zero_extendqisi2
 864 018a 1202     		lsls	r2, r2, #8
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 25


 865 018c 12B2     		sxth	r2, r2
 866              	.LVL88:
 439:main.c        ****                 linv_LSB = (uint8_t)receiving_buffer_ptr[robot_data_index];
 867              		.loc 1 439 0
 868 018e F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 869              	.LVL89:
 440:main.c        ****                 
 441:main.c        ****                 argv_MSB = (int16_t)(receiving_buffer_ptr[robot_data_index + 3] << 8);
 870              		.loc 1 441 0
 871 0190 D91C     		adds	r1, r3, #3
 872              	.LVL90:
 873 0192 715C     		ldrb	r1, [r6, r1]	@ zero_extendqisi2
 874 0194 0902     		lsls	r1, r1, #8
 875 0196 09B2     		sxth	r1, r1
 876              	.LVL91:
 442:main.c        ****                 argv_LSB = (uint8_t)receiving_buffer_ptr[robot_data_index + 2];
 877              		.loc 1 442 0
 878 0198 0233     		adds	r3, r3, #2
 879              	.LVL92:
 880 019a F65C     		ldrb	r6, [r6, r3]	@ zero_extendqisi2
 881              	.LVL93:
 443:main.c        ****                 
 444:main.c        ****                 scaled_linv = (int16_t)(linv_MSB | linv_LSB);
 445:main.c        ****                 scaled_argv = (int16_t)(argv_MSB | argv_LSB);
 882              		.loc 1 445 0
 883 019c 0E43     		orrs	r6, r6, r1
 884              	.LVL94:
 446:main.c        ****                 
 447:main.c        ****                 current_command->linv = (double)scaled_linv / LIN_V_SCALING_FACTOR;
 885              		.loc 1 447 0
 886 019e 1043     		orrs	r0, r0, r2
 887              	.LVL95:
 888 01a0 FFF7FEFF 		bl	__aeabi_i2d
 889              	.LVL96:
 890 01a4 0022     		movs	r2, #0
 891 01a6 4FF07D53 		mov	r3, #1061158912
 892 01aa FFF7FEFF 		bl	__aeabi_dmul
 893              	.LVL97:
 894 01ae C5E90001 		strd	r0, [r5]
 448:main.c        ****                 current_command->angv = (double)scaled_argv / ANG_V_SCALING_FACTOR;
 895              		.loc 1 448 0
 896 01b2 3046     		mov	r0, r6
 897 01b4 FFF7FEFF 		bl	__aeabi_i2d
 898              	.LVL98:
 899 01b8 0022     		movs	r2, #0
 900 01ba 4A4B     		ldr	r3, .L68+76
 901 01bc FFF7FEFF 		bl	__aeabi_dmul
 902              	.LVL99:
 903 01c0 C5E90201 		strd	r0, [r5, #8]
 904 01c4 02E0     		b	.L63
 905              	.LVL100:
 906              	.L62:
 449:main.c        ****             } else {
 450:main.c        ****                 usbPutString("Robot data received for the robot in question is over the length of t
 907              		.loc 1 450 0
 908 01c6 4848     		ldr	r0, .L68+80
 909 01c8 FFF7FEFF 		bl	usbPutString
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 26


 910              	.LVL101:
 911              	.L63:
 451:main.c        ****             }
 452:main.c        ****             
 453:main.c        **** 			/* Move robot with PID control */
 454:main.c        **** 			//Gettting the actual angular, linear velocities of the robot through the encoder
 455:main.c        **** 		    double motor_angv_R = count_to_angv(timerR0_count[timerR0_index],ENCODER_COUNTS,timerR0_overf
 912              		.loc 1 455 0
 913 01cc 354E     		ldr	r6, .L68+12
 914 01ce 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 915 01d0 06EB4303 		add	r3, r6, r3, lsl #1
 916 01d4 988A     		ldrh	r0, [r3, #20]
 917 01d6 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 918 01d8 3344     		add	r3, r3, r6
 919 01da 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 920 01dc 434F     		ldr	r7, .L68+84
 921 01de 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 922 01e0 0B21     		movs	r1, #11
 923 01e2 80B2     		uxth	r0, r0
 924 01e4 FFF7FEFF 		bl	count_to_angv
 925              	.LVL102:
 926 01e8 8046     		mov	r8, r0
 927 01ea 8946     		mov	r9, r1
 928              	.LVL103:
 456:main.c        ****             double motor_angv_L = count_to_angv(timerL0_count[timerL0_index],ENCODER_COUNTS,timerL0
 929              		.loc 1 456 0
 930 01ec 737A     		ldrb	r3, [r6, #9]	@ zero_extendqisi2
 931 01ee 06EB4303 		add	r3, r6, r3, lsl #1
 932 01f2 188C     		ldrh	r0, [r3, #32]
 933 01f4 737A     		ldrb	r3, [r6, #9]	@ zero_extendqisi2
 934 01f6 1E44     		add	r6, r6, r3
 935 01f8 327B     		ldrb	r2, [r6, #12]	@ zero_extendqisi2
 936 01fa 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 937 01fc 0B21     		movs	r1, #11
 938 01fe 80B2     		uxth	r0, r0
 939 0200 FFF7FEFF 		bl	count_to_angv
 940              	.LVL104:
 457:main.c        **** 		
 458:main.c        **** 			double linv_Lw = motor_angv_to_wheel_linv(motor_angv_L,GEAR_RATIO,WHEEL_DIAMETER);
 941              		.loc 1 458 0
 942 0204 24A7     		adr	r7, .L68
 943 0206 D7E90067 		ldrd	r6, [r7]
 944 020a CDE90067 		strd	r6, [sp]
 945 020e 0822     		movs	r2, #8
 946 0210 FFF7FEFF 		bl	motor_angv_to_wheel_linv
 947              	.LVL105:
 948 0214 CDE90601 		strd	r0, [sp, #24]
 949              	.LVL106:
 459:main.c        **** 			double linv_Rw = motor_angv_to_wheel_linv(motor_angv_R,GEAR_RATIO,WHEEL_DIAMETER);
 950              		.loc 1 459 0
 951 0218 CDE90067 		strd	r6, [sp]
 952 021c 0822     		movs	r2, #8
 953 021e 4046     		mov	r0, r8
 954              	.LVL107:
 955 0220 4946     		mov	r1, r9
 956 0222 FFF7FEFF 		bl	motor_angv_to_wheel_linv
 957              	.LVL108:
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 27


 958 0226 CDE90801 		strd	r0, [sp, #32]
 959              	.LVL109:
 460:main.c        **** 			
 461:main.c        ****             //Linear velocity of rebot measured from encoder
 462:main.c        **** 			double robot_linv = get_robot_linv(linv_Rw,linv_Lw);
 960              		.loc 1 462 0
 961 022a DDE90623 		ldrd	r2, [sp, #24]
 962 022e FFF7FEFF 		bl	get_robot_linv
 963              	.LVL110:
 964 0232 8046     		mov	r8, r0
 965              	.LVL111:
 966 0234 8946     		mov	r9, r1
 967              	.LVL112:
 463:main.c        ****             //Angular velocity of robot measured from encoder
 464:main.c        **** 			double robot_angv = get_robot_angv(linv_Rw,linv_Lw,ROBOT_WIDTH); 
 968              		.loc 1 464 0
 969 0236 CDE90067 		strd	r6, [sp]
 970 023a DDE90623 		ldrd	r2, [sp, #24]
 971 023e DDE90801 		ldrd	r0, [sp, #32]
 972 0242 FFF7FEFF 		bl	get_robot_angv
 973              	.LVL113:
 974 0246 CDE90601 		strd	r0, [sp, #24]
 975              	.LVL114:
 465:main.c        **** 			
 466:main.c        **** 			//Using PID control to adjust any velocity errors of the robot
 467:main.c        **** 			double new_linv = PID_update(&pid_linv,robot_linv,current_command->linv);
 976              		.loc 1 467 0
 977 024a D5E90023 		ldrd	r2, [r5]
 978 024e CDE90023 		strd	r2, [sp]
 979 0252 4246     		mov	r2, r8
 980 0254 4B46     		mov	r3, r9
 981 0256 1648     		ldr	r0, .L68+24
 982              	.LVL115:
 983 0258 FFF7FEFF 		bl	PID_update
 984              	.LVL116:
 985 025c 8046     		mov	r8, r0
 986              	.LVL117:
 987 025e 8946     		mov	r9, r1
 988              	.LVL118:
 468:main.c        **** 			double new_angv = PID_update(&pid_angv,robot_angv,current_command->angv);
 989              		.loc 1 468 0
 990 0260 D5E90223 		ldrd	r2, [r5, #8]
 991 0264 CDE90023 		strd	r2, [sp]
 992 0268 DDE90623 		ldrd	r2, [sp, #24]
 993 026c 1148     		ldr	r0, .L68+28
 994 026e FFF7FEFF 		bl	PID_update
 995              	.LVL119:
 469:main.c        **** 			
 470:main.c        **** 			//Updating the new robot commands/movement
 471:main.c        **** 			move_robot(new_linv,new_angv,ROBOT_WIDTH,WHEEL_DIAMETER,MOTOR_MAX_RPM,GEAR_RATIO);
 996              		.loc 1 471 0
 997 0272 0823     		movs	r3, #8
 998 0274 0593     		str	r3, [sp, #20]
 999 0276 42F65053 		movw	r3, #11600
 1000 027a 0493     		str	r3, [sp, #16]
 1001 027c CDE90267 		strd	r6, [sp, #8]
 1002 0280 CDE90067 		strd	r6, [sp]
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 28


 1003 0284 0246     		mov	r2, r0
 1004 0286 0B46     		mov	r3, r1
 1005 0288 4046     		mov	r0, r8
 1006              	.LVL120:
 1007 028a 4946     		mov	r1, r9
 1008 028c FFF7FEFF 		bl	move_robot
 1009              	.LVL121:
 1010 0290 27E7     		b	.L54
 1011              	.L69:
 1012 0292 00BFAFF3 		.align	3
 1012      0080
 1013              	.L68:
 1014 0298 9A999999 		.word	-1717986918
 1015 029c 9999B93F 		.word	1069128089
 1016 02a0 00E100E0 		.word	-536813312
 1017 02a4 00000000 		.word	.LANCHOR0
 1018 02a8 00000000 		.word	receiving_buffer_ptr
 1019 02ac 00000000 		.word	processing_buffer_ptr
 1020 02b0 00000000 		.word	pid_linv
 1021 02b4 00000000 		.word	pid_angv
 1022 02b8 00000000 		.word	TX_ISR_vect
 1023 02bc 00000000 		.word	RX_ISR_vect
 1024 02c0 00000000 		.word	ENCODER_R0_OVF_ISR_vect
 1025 02c4 00000000 		.word	ENCODER_L0_OVF_ISR_vect
 1026 02c8 00000000 		.word	ENC_R0_ISR_vect
 1027 02cc 00000000 		.word	ENC_L0_ISR_vect
 1028 02d0 00000000 		.word	ENC_R1_ISR_vect
 1029 02d4 00000000 		.word	ENC_L1_ISR_vect
 1030 02d8 00000000 		.word	.LC0
 1031 02dc 38000000 		.word	.LC1
 1032 02e0 80E100E0 		.word	-536813184
 1033 02e4 0000903F 		.word	1066401792
 1034 02e8 48000000 		.word	.LC2
 1035 02ec 00000000 		.word	.LANCHOR1
 1036 02f0 0000F03F 		.word	1072693248
 1037              	.LBE2:
 1038              		.cfi_endproc
 1039              	.LFE74:
 1040              		.size	main, .-main
 1041              		.comm	pid_angv,40,8
 1042              		.comm	pid_linv,40,8
 1043              		.global	L_direction
 1044              		.global	R_direction
 1045              		.global	timerR0_index
 1046              		.global	timerL0_index
 1047              		.global	timerR0_overflows
 1048              		.global	timerL0_overflows
 1049              		.global	timerR0_count
 1050              		.global	timerL0_count
 1051              		.global	rx_buffer_size
 1052              		.comm	processing_buffer_ptr,4,4
 1053              		.comm	receiving_buffer_ptr,4,4
 1054              		.global	buffer_2
 1055              		.global	buffer_1
 1056              		.data
 1057              		.set	.LANCHOR1,. + 0
 1058              		.type	R_direction, %object
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 29


 1059              		.size	R_direction, 1
 1060              	R_direction:
 1061 0000 01       		.byte	1
 1062              		.type	L_direction, %object
 1063              		.size	L_direction, 1
 1064              	L_direction:
 1065 0001 01       		.byte	1
 1066              		.section	.rodata.str1.4,"aMS",%progbits,1
 1067              		.align	2
 1068              	.LC0:
 1069 0000 57656C63 		.ascii	"Welcome to the ROBOT SOCCER TEST DEBUGGING TERMINAL"
 1069      6F6D6520 
 1069      746F2074 
 1069      68652052 
 1069      4F424F54 
 1070 0033 0A0D00   		.ascii	"\012\015\000"
 1071 0036 0000     		.space	2
 1072              	.LC1:
 1073 0038 526F626F 		.ascii	"Robot ID: %d\015\012\000"
 1073      74204944 
 1073      3A202564 
 1073      0D0A00
 1074 0047 00       		.space	1
 1075              	.LC2:
 1076 0048 526F626F 		.ascii	"Robot data received for the robot in question is ov"
 1076      74206461 
 1076      74612072 
 1076      65636569 
 1076      76656420 
 1077 007b 65722074 		.ascii	"er the length of the receive buffer size\012\015\000"
 1077      6865206C 
 1077      656E6774 
 1077      68206F66 
 1077      20746865 
 1078              		.bss
 1079              		.align	2
 1080              		.set	.LANCHOR0,. + 0
 1081              		.type	timerR0_index, %object
 1082              		.size	timerR0_index, 1
 1083              	timerR0_index:
 1084 0000 00       		.space	1
 1085 0001 000000   		.space	3
 1086              		.type	timerR0_overflows, %object
 1087              		.size	timerR0_overflows, 5
 1088              	timerR0_overflows:
 1089 0004 00000000 		.space	5
 1089      00
 1090              		.type	timerL0_index, %object
 1091              		.size	timerL0_index, 1
 1092              	timerL0_index:
 1093 0009 00       		.space	1
 1094 000a 0000     		.space	2
 1095              		.type	timerL0_overflows, %object
 1096              		.size	timerL0_overflows, 5
 1097              	timerL0_overflows:
 1098 000c 00000000 		.space	5
 1098      00
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 30


 1099 0011 000000   		.space	3
 1100              		.type	timerR0_count, %object
 1101              		.size	timerR0_count, 10
 1102              	timerR0_count:
 1103 0014 00000000 		.space	10
 1103      00000000 
 1103      0000
 1104 001e 0000     		.space	2
 1105              		.type	timerL0_count, %object
 1106              		.size	timerL0_count, 10
 1107              	timerL0_count:
 1108 0020 00000000 		.space	10
 1108      00000000 
 1108      0000
 1109              		.type	rx_buffer_size, %object
 1110              		.size	rx_buffer_size, 1
 1111              	rx_buffer_size:
 1112 002a 00       		.space	1
 1113 002b 00       		.space	1
 1114              		.type	buffer_1, %object
 1115              		.size	buffer_1, 100
 1116              	buffer_1:
 1117 002c 00000000 		.space	100
 1117      00000000 
 1117      00000000 
 1117      00000000 
 1117      00000000 
 1118              		.type	buffer_2, %object
 1119              		.size	buffer_2, 100
 1120              	buffer_2:
 1121 0090 00000000 		.space	100
 1121      00000000 
 1121      00000000 
 1121      00000000 
 1121      00000000 
 1122              		.text
 1123              	.Letext0:
 1124              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1125              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1126              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1127              		.file 5 "robotmove.h"
 1128              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1129              		.file 7 "Generated_Source\\PSoC5/Encoder_R0_Timer.h"
 1130              		.file 8 "Generated_Source\\PSoC5/Encoder_L0_Timer.h"
 1131              		.file 9 "Generated_Source\\PSoC5/Encoder_R0.h"
 1132              		.file 10 "Generated_Source\\PSoC5/Encoder_R1.h"
 1133              		.file 11 "Generated_Source\\PSoC5/Encoder_L0.h"
 1134              		.file 12 "Generated_Source\\PSoC5/Encoder_L1.h"
 1135              		.file 13 "Generated_Source\\PSoC5/USBUART_cdc.h"
 1136              		.file 14 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 1137              		.file 15 "Generated_Source\\PSoC5/UART.h"
 1138              		.file 16 "encoder.h"
 1139              		.file 17 "Generated_Source\\PSoC5/PWM_RESET.h"
 1140              		.file 18 "Generated_Source\\PSoC5/ENCODER_TMR_RESET.h"
 1141              		.file 19 "Generated_Source\\PSoC5/USBUART.h"
 1142              		.file 20 "Generated_Source\\PSoC5/PWM_L.h"
 1143              		.file 21 "Generated_Source\\PSoC5/PWM_R.h"
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 31


 1144              		.file 22 "robot_ID.h"
 1145              		.file 23 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 1146              		.file 24 "Generated_Source\\PSoC5/tx_isr.h"
 1147              		.file 25 "Generated_Source\\PSoC5/rx_isr.h"
 1148              		.file 26 "Generated_Source\\PSoC5/ENCODER_R0_OVF_ISR.h"
 1149              		.file 27 "Generated_Source\\PSoC5/ENCODER_L0_OVF_ISR.h"
 1150              		.file 28 "Generated_Source\\PSoC5/ENC_R0_ISR.h"
 1151              		.file 29 "Generated_Source\\PSoC5/ENC_L0_ISR.h"
 1152              		.file 30 "Generated_Source\\PSoC5/ENC_R1_ISR.h"
 1153              		.file 31 "Generated_Source\\PSoC5/ENC_L1_ISR.h"
 1154              		.file 32 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 1155              		.section	.debug_info,"",%progbits
 1156              	.Ldebug_info0:
 1157 0000 610C0000 		.4byte	0xc61
 1158 0004 0400     		.2byte	0x4
 1159 0006 00000000 		.4byte	.Ldebug_abbrev0
 1160 000a 04       		.byte	0x4
 1161 000b 01       		.uleb128 0x1
 1162 000c 4B020000 		.4byte	.LASF133
 1163 0010 0C       		.byte	0xc
 1164 0011 00000000 		.4byte	.LASF134
 1165 0015 31070000 		.4byte	.LASF135
 1166 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1167 001d 00000000 		.4byte	0
 1168 0021 00000000 		.4byte	.Ldebug_line0
 1169 0025 02       		.uleb128 0x2
 1170 0026 08       		.byte	0x8
 1171 0027 04       		.byte	0x4
 1172 0028 FC070000 		.4byte	.LASF0
 1173 002c 02       		.uleb128 0x2
 1174 002d 01       		.byte	0x1
 1175 002e 06       		.byte	0x6
 1176 002f C4070000 		.4byte	.LASF1
 1177 0033 03       		.uleb128 0x3
 1178 0034 18060000 		.4byte	.LASF3
 1179 0038 02       		.byte	0x2
 1180 0039 1D       		.byte	0x1d
 1181 003a 3E000000 		.4byte	0x3e
 1182 003e 02       		.uleb128 0x2
 1183 003f 01       		.byte	0x1
 1184 0040 08       		.byte	0x8
 1185 0041 CB060000 		.4byte	.LASF2
 1186 0045 03       		.uleb128 0x3
 1187 0046 96040000 		.4byte	.LASF4
 1188 004a 02       		.byte	0x2
 1189 004b 29       		.byte	0x29
 1190 004c 50000000 		.4byte	0x50
 1191 0050 02       		.uleb128 0x2
 1192 0051 02       		.byte	0x2
 1193 0052 05       		.byte	0x5
 1194 0053 BC050000 		.4byte	.LASF5
 1195 0057 03       		.uleb128 0x3
 1196 0058 0D020000 		.4byte	.LASF6
 1197 005c 02       		.byte	0x2
 1198 005d 2B       		.byte	0x2b
 1199 005e 62000000 		.4byte	0x62
 1200 0062 02       		.uleb128 0x2
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 32


 1201 0063 02       		.byte	0x2
 1202 0064 07       		.byte	0x7
 1203 0065 D0070000 		.4byte	.LASF7
 1204 0069 03       		.uleb128 0x3
 1205 006a 5E000000 		.4byte	.LASF8
 1206 006e 02       		.byte	0x2
 1207 006f 3F       		.byte	0x3f
 1208 0070 74000000 		.4byte	0x74
 1209 0074 02       		.uleb128 0x2
 1210 0075 04       		.byte	0x4
 1211 0076 05       		.byte	0x5
 1212 0077 D5050000 		.4byte	.LASF9
 1213 007b 02       		.uleb128 0x2
 1214 007c 04       		.byte	0x4
 1215 007d 07       		.byte	0x7
 1216 007e 82060000 		.4byte	.LASF10
 1217 0082 02       		.uleb128 0x2
 1218 0083 08       		.byte	0x8
 1219 0084 05       		.byte	0x5
 1220 0085 47040000 		.4byte	.LASF11
 1221 0089 02       		.uleb128 0x2
 1222 008a 08       		.byte	0x8
 1223 008b 07       		.byte	0x7
 1224 008c F6010000 		.4byte	.LASF12
 1225 0090 04       		.uleb128 0x4
 1226 0091 04       		.byte	0x4
 1227 0092 05       		.byte	0x5
 1228 0093 696E7400 		.ascii	"int\000"
 1229 0097 02       		.uleb128 0x2
 1230 0098 04       		.byte	0x4
 1231 0099 07       		.byte	0x7
 1232 009a 51000000 		.4byte	.LASF13
 1233 009e 03       		.uleb128 0x3
 1234 009f 2F040000 		.4byte	.LASF14
 1235 00a3 03       		.byte	0x3
 1236 00a4 18       		.byte	0x18
 1237 00a5 33000000 		.4byte	0x33
 1238 00a9 03       		.uleb128 0x3
 1239 00aa EE010000 		.4byte	.LASF15
 1240 00ae 03       		.byte	0x3
 1241 00af 20       		.byte	0x20
 1242 00b0 45000000 		.4byte	0x45
 1243 00b4 03       		.uleb128 0x3
 1244 00b5 94050000 		.4byte	.LASF16
 1245 00b9 03       		.byte	0x3
 1246 00ba 24       		.byte	0x24
 1247 00bb 57000000 		.4byte	0x57
 1248 00bf 03       		.uleb128 0x3
 1249 00c0 A7060000 		.4byte	.LASF17
 1250 00c4 03       		.byte	0x3
 1251 00c5 2C       		.byte	0x2c
 1252 00c6 69000000 		.4byte	0x69
 1253 00ca 05       		.uleb128 0x5
 1254 00cb F6070000 		.4byte	.LASF18
 1255 00cf 04       		.byte	0x4
 1256 00d0 E901     		.2byte	0x1e9
 1257 00d2 3E000000 		.4byte	0x3e
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 33


 1258 00d6 05       		.uleb128 0x5
 1259 00d7 D2040000 		.4byte	.LASF19
 1260 00db 04       		.byte	0x4
 1261 00dc EB01     		.2byte	0x1eb
 1262 00de 7B000000 		.4byte	0x7b
 1263 00e2 02       		.uleb128 0x2
 1264 00e3 04       		.byte	0x4
 1265 00e4 04       		.byte	0x4
 1266 00e5 B1010000 		.4byte	.LASF20
 1267 00e9 02       		.uleb128 0x2
 1268 00ea 01       		.byte	0x1
 1269 00eb 08       		.byte	0x8
 1270 00ec E5030000 		.4byte	.LASF21
 1271 00f0 05       		.uleb128 0x5
 1272 00f1 9D050000 		.4byte	.LASF22
 1273 00f5 04       		.byte	0x4
 1274 00f6 9502     		.2byte	0x295
 1275 00f8 FC000000 		.4byte	0xfc
 1276 00fc 06       		.uleb128 0x6
 1277 00fd D6000000 		.4byte	0xd6
 1278 0101 02       		.uleb128 0x2
 1279 0102 08       		.byte	0x8
 1280 0103 04       		.byte	0x4
 1281 0104 80050000 		.4byte	.LASF23
 1282 0108 02       		.uleb128 0x2
 1283 0109 04       		.byte	0x4
 1284 010a 07       		.byte	0x7
 1285 010b 79060000 		.4byte	.LASF24
 1286 010f 07       		.uleb128 0x7
 1287 0110 04       		.byte	0x4
 1288 0111 E9000000 		.4byte	0xe9
 1289 0115 06       		.uleb128 0x6
 1290 0116 9E000000 		.4byte	0x9e
 1291 011a 06       		.uleb128 0x6
 1292 011b B4000000 		.4byte	0xb4
 1293 011f 08       		.uleb128 0x8
 1294 0120 28       		.byte	0x28
 1295 0121 05       		.byte	0x5
 1296 0122 17       		.byte	0x17
 1297 0123 64010000 		.4byte	0x164
 1298 0127 09       		.uleb128 0x9
 1299 0128 57080000 		.4byte	.LASF25
 1300 012c 05       		.byte	0x5
 1301 012d 18       		.byte	0x18
 1302 012e 25000000 		.4byte	0x25
 1303 0132 00       		.byte	0
 1304 0133 09       		.uleb128 0x9
 1305 0134 F6000000 		.4byte	.LASF26
 1306 0138 05       		.byte	0x5
 1307 0139 18       		.byte	0x18
 1308 013a 25000000 		.4byte	0x25
 1309 013e 08       		.byte	0x8
 1310 013f 09       		.uleb128 0x9
 1311 0140 DF030000 		.4byte	.LASF27
 1312 0144 05       		.byte	0x5
 1313 0145 18       		.byte	0x18
 1314 0146 25000000 		.4byte	0x25
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 34


 1315 014a 10       		.byte	0x10
 1316 014b 09       		.uleb128 0x9
 1317 014c C6050000 		.4byte	.LASF28
 1318 0150 05       		.byte	0x5
 1319 0151 19       		.byte	0x19
 1320 0152 25000000 		.4byte	0x25
 1321 0156 18       		.byte	0x18
 1322 0157 09       		.uleb128 0x9
 1323 0158 A3050000 		.4byte	.LASF29
 1324 015c 05       		.byte	0x5
 1325 015d 1A       		.byte	0x1a
 1326 015e 25000000 		.4byte	0x25
 1327 0162 20       		.byte	0x20
 1328 0163 00       		.byte	0
 1329 0164 03       		.uleb128 0x3
 1330 0165 8D070000 		.4byte	.LASF30
 1331 0169 05       		.byte	0x5
 1332 016a 1B       		.byte	0x1b
 1333 016b 1F010000 		.4byte	0x11f
 1334 016f 08       		.uleb128 0x8
 1335 0170 10       		.byte	0x10
 1336 0171 01       		.byte	0x1
 1337 0172 59       		.byte	0x59
 1338 0173 90010000 		.4byte	0x190
 1339 0177 09       		.uleb128 0x9
 1340 0178 1F070000 		.4byte	.LASF31
 1341 017c 01       		.byte	0x1
 1342 017d 5A       		.byte	0x5a
 1343 017e 25000000 		.4byte	0x25
 1344 0182 00       		.byte	0
 1345 0183 09       		.uleb128 0x9
 1346 0184 07000000 		.4byte	.LASF32
 1347 0188 01       		.byte	0x1
 1348 0189 5A       		.byte	0x5a
 1349 018a 25000000 		.4byte	0x25
 1350 018e 08       		.byte	0x8
 1351 018f 00       		.byte	0
 1352 0190 03       		.uleb128 0x3
 1353 0191 46030000 		.4byte	.LASF33
 1354 0195 01       		.byte	0x1
 1355 0196 5B       		.byte	0x5b
 1356 0197 6F010000 		.4byte	0x16f
 1357 019b 0A       		.uleb128 0xa
 1358 019c A0040000 		.4byte	.LASF136
 1359 01a0 01       		.byte	0x1
 1360 01a1 2501     		.2byte	0x125
 1361 01a3 00000000 		.4byte	.LFB72
 1362 01a7 02000000 		.4byte	.LFE72-.LFB72
 1363 01ab 01       		.uleb128 0x1
 1364 01ac 9C       		.byte	0x9c
 1365 01ad 0B       		.uleb128 0xb
 1366 01ae 00060000 		.4byte	.LASF34
 1367 01b2 01       		.byte	0x1
 1368 01b3 90       		.byte	0x90
 1369 01b4 00000000 		.4byte	.LFB66
 1370 01b8 28000000 		.4byte	.LFE66-.LFB66
 1371 01bc 01       		.uleb128 0x1
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 35


 1372 01bd 9C       		.byte	0x9c
 1373 01be CC010000 		.4byte	0x1cc
 1374 01c2 0C       		.uleb128 0xc
 1375 01c3 20000000 		.4byte	.LVL0
 1376 01c7 690A0000 		.4byte	0xa69
 1377 01cb 00       		.byte	0
 1378 01cc 0B       		.uleb128 0xb
 1379 01cd CD000000 		.4byte	.LASF35
 1380 01d1 01       		.byte	0x1
 1381 01d2 A1       		.byte	0xa1
 1382 01d3 00000000 		.4byte	.LFB67
 1383 01d7 28000000 		.4byte	.LFE67-.LFB67
 1384 01db 01       		.uleb128 0x1
 1385 01dc 9C       		.byte	0x9c
 1386 01dd EB010000 		.4byte	0x1eb
 1387 01e1 0C       		.uleb128 0xc
 1388 01e2 20000000 		.4byte	.LVL1
 1389 01e6 740A0000 		.4byte	0xa74
 1390 01ea 00       		.byte	0
 1391 01eb 0B       		.uleb128 0xb
 1392 01ec 73040000 		.4byte	.LASF36
 1393 01f0 01       		.byte	0x1
 1394 01f1 B4       		.byte	0xb4
 1395 01f2 00000000 		.4byte	.LFB68
 1396 01f6 84000000 		.4byte	.LFE68-.LFB68
 1397 01fa 01       		.uleb128 0x1
 1398 01fb 9C       		.byte	0x9c
 1399 01fc 51020000 		.4byte	0x251
 1400 0200 0D       		.uleb128 0xd
 1401 0201 14030000 		.4byte	.LASF38
 1402 0205 01       		.byte	0x1
 1403 0206 B8       		.byte	0xb8
 1404 0207 B4000000 		.4byte	0xb4
 1405 020b 00000000 		.4byte	.LLST0
 1406 020f 0C       		.uleb128 0xc
 1407 0210 16000000 		.4byte	.LVL2
 1408 0214 7F0A0000 		.4byte	0xa7f
 1409 0218 0C       		.uleb128 0xc
 1410 0219 30000000 		.4byte	.LVL4
 1411 021d 8A0A0000 		.4byte	0xa8a
 1412 0221 0C       		.uleb128 0xc
 1413 0222 4A000000 		.4byte	.LVL7
 1414 0226 950A0000 		.4byte	0xa95
 1415 022a 0C       		.uleb128 0xc
 1416 022b 4E000000 		.4byte	.LVL8
 1417 022f 690A0000 		.4byte	0xa69
 1418 0233 0E       		.uleb128 0xe
 1419 0234 54000000 		.4byte	.LVL9
 1420 0238 A00A0000 		.4byte	0xaa0
 1421 023c 47020000 		.4byte	0x247
 1422 0240 0F       		.uleb128 0xf
 1423 0241 01       		.uleb128 0x1
 1424 0242 50       		.byte	0x50
 1425 0243 02       		.uleb128 0x2
 1426 0244 74       		.byte	0x74
 1427 0245 00       		.sleb128 0
 1428 0246 00       		.byte	0
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 36


 1429 0247 0C       		.uleb128 0xc
 1430 0248 7E000000 		.4byte	.LVL10
 1431 024c AB0A0000 		.4byte	0xaab
 1432 0250 00       		.byte	0
 1433 0251 0B       		.uleb128 0xb
 1434 0252 37040000 		.4byte	.LASF37
 1435 0256 01       		.byte	0x1
 1436 0257 D8       		.byte	0xd8
 1437 0258 00000000 		.4byte	.LFB69
 1438 025c 84000000 		.4byte	.LFE69-.LFB69
 1439 0260 01       		.uleb128 0x1
 1440 0261 9C       		.byte	0x9c
 1441 0262 B7020000 		.4byte	0x2b7
 1442 0266 0D       		.uleb128 0xd
 1443 0267 14030000 		.4byte	.LASF38
 1444 026b 01       		.byte	0x1
 1445 026c DC       		.byte	0xdc
 1446 026d B4000000 		.4byte	0xb4
 1447 0271 1E000000 		.4byte	.LLST1
 1448 0275 0C       		.uleb128 0xc
 1449 0276 16000000 		.4byte	.LVL11
 1450 027a B60A0000 		.4byte	0xab6
 1451 027e 0C       		.uleb128 0xc
 1452 027f 30000000 		.4byte	.LVL13
 1453 0283 C10A0000 		.4byte	0xac1
 1454 0287 0C       		.uleb128 0xc
 1455 0288 4A000000 		.4byte	.LVL16
 1456 028c CC0A0000 		.4byte	0xacc
 1457 0290 0C       		.uleb128 0xc
 1458 0291 4E000000 		.4byte	.LVL17
 1459 0295 740A0000 		.4byte	0xa74
 1460 0299 0E       		.uleb128 0xe
 1461 029a 54000000 		.4byte	.LVL18
 1462 029e D70A0000 		.4byte	0xad7
 1463 02a2 AD020000 		.4byte	0x2ad
 1464 02a6 0F       		.uleb128 0xf
 1465 02a7 01       		.uleb128 0x1
 1466 02a8 50       		.byte	0x50
 1467 02a9 02       		.uleb128 0x2
 1468 02aa 74       		.byte	0x74
 1469 02ab 00       		.sleb128 0
 1470 02ac 00       		.byte	0
 1471 02ad 0C       		.uleb128 0xc
 1472 02ae 7E000000 		.4byte	.LVL19
 1473 02b2 E20A0000 		.4byte	0xae2
 1474 02b6 00       		.byte	0
 1475 02b7 0B       		.uleb128 0xb
 1476 02b8 22060000 		.4byte	.LASF39
 1477 02bc 01       		.byte	0x1
 1478 02bd FB       		.byte	0xfb
 1479 02be 00000000 		.4byte	.LFB70
 1480 02c2 20000000 		.4byte	.LFE70-.LFB70
 1481 02c6 01       		.uleb128 0x1
 1482 02c7 9C       		.byte	0x9c
 1483 02c8 EE020000 		.4byte	0x2ee
 1484 02cc 0D       		.uleb128 0xd
 1485 02cd 0E040000 		.4byte	.LASF40
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 37


 1486 02d1 01       		.byte	0x1
 1487 02d2 FC       		.byte	0xfc
 1488 02d3 9E000000 		.4byte	0x9e
 1489 02d7 3C000000 		.4byte	.LLST2
 1490 02db 0C       		.uleb128 0xc
 1491 02dc 06000000 		.4byte	.LVL20
 1492 02e0 ED0A0000 		.4byte	0xaed
 1493 02e4 0C       		.uleb128 0xc
 1494 02e5 1A000000 		.4byte	.LVL21
 1495 02e9 F80A0000 		.4byte	0xaf8
 1496 02ed 00       		.byte	0
 1497 02ee 10       		.uleb128 0x10
 1498 02ef AF060000 		.4byte	.LASF41
 1499 02f3 01       		.byte	0x1
 1500 02f4 1001     		.2byte	0x110
 1501 02f6 00000000 		.4byte	.LFB71
 1502 02fa 20000000 		.4byte	.LFE71-.LFB71
 1503 02fe 01       		.uleb128 0x1
 1504 02ff 9C       		.byte	0x9c
 1505 0300 27030000 		.4byte	0x327
 1506 0304 11       		.uleb128 0x11
 1507 0305 7D030000 		.4byte	.LASF42
 1508 0309 01       		.byte	0x1
 1509 030a 1101     		.2byte	0x111
 1510 030c 9E000000 		.4byte	0x9e
 1511 0310 4F000000 		.4byte	.LLST3
 1512 0314 0C       		.uleb128 0xc
 1513 0315 06000000 		.4byte	.LVL22
 1514 0319 030B0000 		.4byte	0xb03
 1515 031d 0C       		.uleb128 0xc
 1516 031e 1A000000 		.4byte	.LVL23
 1517 0322 0E0B0000 		.4byte	0xb0e
 1518 0326 00       		.byte	0
 1519 0327 0B       		.uleb128 0xb
 1520 0328 4A010000 		.4byte	.LASF43
 1521 032c 01       		.byte	0x1
 1522 032d 74       		.byte	0x74
 1523 032e 00000000 		.4byte	.LFB64
 1524 0332 28000000 		.4byte	.LFE64-.LFB64
 1525 0336 01       		.uleb128 0x1
 1526 0337 9C       		.byte	0x9c
 1527 0338 79030000 		.4byte	0x379
 1528 033c 12       		.uleb128 0x12
 1529 033d F8030000 		.4byte	.LASF45
 1530 0341 01       		.byte	0x1
 1531 0342 74       		.byte	0x74
 1532 0343 0F010000 		.4byte	0x10f
 1533 0347 62000000 		.4byte	.LLST4
 1534 034b 0C       		.uleb128 0xc
 1535 034c 08000000 		.4byte	.LVL26
 1536 0350 190B0000 		.4byte	0xb19
 1537 0354 0E       		.uleb128 0xe
 1538 0355 1E000000 		.4byte	.LVL27
 1539 0359 240B0000 		.4byte	0xb24
 1540 035d 68030000 		.4byte	0x368
 1541 0361 0F       		.uleb128 0xf
 1542 0362 01       		.uleb128 0x1
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 38


 1543 0363 50       		.byte	0x50
 1544 0364 02       		.uleb128 0x2
 1545 0365 74       		.byte	0x74
 1546 0366 00       		.sleb128 0
 1547 0367 00       		.byte	0
 1548 0368 13       		.uleb128 0x13
 1549 0369 26000000 		.4byte	.LVL28
 1550 036d 2F0B0000 		.4byte	0xb2f
 1551 0371 0F       		.uleb128 0xf
 1552 0372 01       		.uleb128 0x1
 1553 0373 50       		.byte	0x50
 1554 0374 02       		.uleb128 0x2
 1555 0375 74       		.byte	0x74
 1556 0376 00       		.sleb128 0
 1557 0377 00       		.byte	0
 1558 0378 00       		.byte	0
 1559 0379 0B       		.uleb128 0xb
 1560 037a B9070000 		.4byte	.LASF44
 1561 037e 01       		.byte	0x1
 1562 037f 7F       		.byte	0x7f
 1563 0380 00000000 		.4byte	.LFB65
 1564 0384 14000000 		.4byte	.LFE65-.LFB65
 1565 0388 01       		.uleb128 0x1
 1566 0389 9C       		.byte	0x9c
 1567 038a B5030000 		.4byte	0x3b5
 1568 038e 14       		.uleb128 0x14
 1569 038f 6300     		.ascii	"c\000"
 1570 0391 01       		.byte	0x1
 1571 0392 7F       		.byte	0x7f
 1572 0393 E9000000 		.4byte	0xe9
 1573 0397 80000000 		.4byte	.LLST5
 1574 039b 0C       		.uleb128 0xc
 1575 039c 08000000 		.4byte	.LVL31
 1576 03a0 190B0000 		.4byte	0xb19
 1577 03a4 13       		.uleb128 0x13
 1578 03a5 12000000 		.4byte	.LVL32
 1579 03a9 3A0B0000 		.4byte	0xb3a
 1580 03ad 0F       		.uleb128 0xf
 1581 03ae 01       		.uleb128 0x1
 1582 03af 50       		.byte	0x50
 1583 03b0 02       		.uleb128 0x2
 1584 03b1 74       		.byte	0x74
 1585 03b2 00       		.sleb128 0
 1586 03b3 00       		.byte	0
 1587 03b4 00       		.byte	0
 1588 03b5 10       		.uleb128 0x10
 1589 03b6 BF060000 		.4byte	.LASF46
 1590 03ba 01       		.byte	0x1
 1591 03bb 3001     		.2byte	0x130
 1592 03bd 00000000 		.4byte	.LFB73
 1593 03c1 3C000000 		.4byte	.LFE73-.LFB73
 1594 03c5 01       		.uleb128 0x1
 1595 03c6 9C       		.byte	0x9c
 1596 03c7 FE030000 		.4byte	0x3fe
 1597 03cb 11       		.uleb128 0x11
 1598 03cc 19080000 		.4byte	.LASF47
 1599 03d0 01       		.byte	0x1
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 39


 1600 03d1 3101     		.2byte	0x131
 1601 03d3 E9000000 		.4byte	0xe9
 1602 03d7 A1000000 		.4byte	.LLST6
 1603 03db 0C       		.uleb128 0xc
 1604 03dc 06000000 		.4byte	.LVL33
 1605 03e0 450B0000 		.4byte	0xb45
 1606 03e4 0C       		.uleb128 0xc
 1607 03e5 10000000 		.4byte	.LVL34
 1608 03e9 500B0000 		.4byte	0xb50
 1609 03ed 13       		.uleb128 0x13
 1610 03ee 16000000 		.4byte	.LVL36
 1611 03f2 79030000 		.4byte	0x379
 1612 03f6 0F       		.uleb128 0xf
 1613 03f7 01       		.uleb128 0x1
 1614 03f8 50       		.byte	0x50
 1615 03f9 02       		.uleb128 0x2
 1616 03fa 74       		.byte	0x74
 1617 03fb 00       		.sleb128 0
 1618 03fc 00       		.byte	0
 1619 03fd 00       		.byte	0
 1620 03fe 15       		.uleb128 0x15
 1621 03ff E3070000 		.4byte	.LASF137
 1622 0403 01       		.byte	0x1
 1623 0404 3F01     		.2byte	0x13f
 1624 0406 90000000 		.4byte	0x90
 1625 040a 00000000 		.4byte	.LFB74
 1626 040e F4020000 		.4byte	.LFE74-.LFB74
 1627 0412 01       		.uleb128 0x1
 1628 0413 9C       		.byte	0x9c
 1629 0414 EE080000 		.4byte	0x8ee
 1630 0418 11       		.uleb128 0x11
 1631 0419 BB030000 		.4byte	.LASF48
 1632 041d 01       		.byte	0x1
 1633 041e 5801     		.2byte	0x158
 1634 0420 9E000000 		.4byte	0x9e
 1635 0424 B4000000 		.4byte	.LLST7
 1636 0428 16       		.uleb128 0x16
 1637 0429 10080000 		.4byte	.LASF49
 1638 042d 01       		.byte	0x1
 1639 042e 5B01     		.2byte	0x15b
 1640 0430 9E000000 		.4byte	0x9e
 1641 0434 01       		.uleb128 0x1
 1642 0435 5A       		.byte	0x5a
 1643 0436 11       		.uleb128 0x11
 1644 0437 F4060000 		.4byte	.LASF50
 1645 043b 01       		.byte	0x1
 1646 043c 5E01     		.2byte	0x15e
 1647 043e EE080000 		.4byte	0x8ee
 1648 0442 D3000000 		.4byte	.LLST8
 1649 0446 11       		.uleb128 0x11
 1650 0447 AD050000 		.4byte	.LASF51
 1651 044b 01       		.byte	0x1
 1652 044c 6101     		.2byte	0x161
 1653 044e 9E000000 		.4byte	0x9e
 1654 0452 F1000000 		.4byte	.LLST9
 1655 0456 11       		.uleb128 0x11
 1656 0457 37080000 		.4byte	.LASF52
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 40


 1657 045b 01       		.byte	0x1
 1658 045c 6201     		.2byte	0x162
 1659 045e F4080000 		.4byte	0x8f4
 1660 0462 10010000 		.4byte	.LLST10
 1661 0466 11       		.uleb128 0x11
 1662 0467 F8030000 		.4byte	.LASF45
 1663 046b 01       		.byte	0x1
 1664 046c 6801     		.2byte	0x168
 1665 046e 0F010000 		.4byte	0x10f
 1666 0472 3A010000 		.4byte	.LLST11
 1667 0476 17       		.uleb128 0x17
 1668 0477 EE000000 		.4byte	.LBB2
 1669 047b 06020000 		.4byte	.LBE2-.LBB2
 1670 047f 02070000 		.4byte	0x702
 1671 0483 11       		.uleb128 0x11
 1672 0484 EB050000 		.4byte	.LASF53
 1673 0488 01       		.byte	0x1
 1674 0489 8101     		.2byte	0x181
 1675 048b FB080000 		.4byte	0x8fb
 1676 048f 58010000 		.4byte	.LLST12
 1677 0493 11       		.uleb128 0x11
 1678 0494 B1030000 		.4byte	.LASF54
 1679 0498 01       		.byte	0x1
 1680 0499 9701     		.2byte	0x197
 1681 049b E9000000 		.4byte	0xe9
 1682 049f 7A010000 		.4byte	.LLST13
 1683 04a3 11       		.uleb128 0x11
 1684 04a4 20050000 		.4byte	.LASF55
 1685 04a8 01       		.byte	0x1
 1686 04a9 AC01     		.2byte	0x1ac
 1687 04ab 9E000000 		.4byte	0x9e
 1688 04af 98010000 		.4byte	.LLST14
 1689 04b3 11       		.uleb128 0x11
 1690 04b4 63010000 		.4byte	.LASF56
 1691 04b8 01       		.byte	0x1
 1692 04b9 B101     		.2byte	0x1b1
 1693 04bb 9E000000 		.4byte	0x9e
 1694 04bf EB010000 		.4byte	.LLST15
 1695 04c3 11       		.uleb128 0x11
 1696 04c4 B0070000 		.4byte	.LASF57
 1697 04c8 01       		.byte	0x1
 1698 04c9 B101     		.2byte	0x1b1
 1699 04cb 9E000000 		.4byte	0x9e
 1700 04cf FE010000 		.4byte	.LLST16
 1701 04d3 11       		.uleb128 0x11
 1702 04d4 31050000 		.4byte	.LASF58
 1703 04d8 01       		.byte	0x1
 1704 04d9 B201     		.2byte	0x1b2
 1705 04db A9000000 		.4byte	0xa9
 1706 04df 11020000 		.4byte	.LLST17
 1707 04e3 11       		.uleb128 0x11
 1708 04e4 18020000 		.4byte	.LASF59
 1709 04e8 01       		.byte	0x1
 1710 04e9 B201     		.2byte	0x1b2
 1711 04eb A9000000 		.4byte	0xa9
 1712 04ef 24020000 		.4byte	.LLST18
 1713 04f3 11       		.uleb128 0x11
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 41


 1714 04f4 23040000 		.4byte	.LASF60
 1715 04f8 01       		.byte	0x1
 1716 04f9 B201     		.2byte	0x1b2
 1717 04fb A9000000 		.4byte	0xa9
 1718 04ff 37020000 		.4byte	.LLST19
 1719 0503 11       		.uleb128 0x11
 1720 0504 89010000 		.4byte	.LASF61
 1721 0508 01       		.byte	0x1
 1722 0509 B201     		.2byte	0x1b2
 1723 050b A9000000 		.4byte	0xa9
 1724 050f 4F020000 		.4byte	.LLST20
 1725 0513 11       		.uleb128 0x11
 1726 0514 07030000 		.4byte	.LASF62
 1727 0518 01       		.byte	0x1
 1728 0519 C701     		.2byte	0x1c7
 1729 051b 25000000 		.4byte	0x25
 1730 051f 62020000 		.4byte	.LLST21
 1731 0523 11       		.uleb128 0x11
 1732 0524 24070000 		.4byte	.LASF63
 1733 0528 01       		.byte	0x1
 1734 0529 C801     		.2byte	0x1c8
 1735 052b 25000000 		.4byte	0x25
 1736 052f 7A020000 		.4byte	.LLST22
 1737 0533 11       		.uleb128 0x11
 1738 0534 48060000 		.4byte	.LASF64
 1739 0538 01       		.byte	0x1
 1740 0539 CA01     		.2byte	0x1ca
 1741 053b 25000000 		.4byte	0x25
 1742 053f 92020000 		.4byte	.LLST23
 1743 0543 11       		.uleb128 0x11
 1744 0544 EE000000 		.4byte	.LASF65
 1745 0548 01       		.byte	0x1
 1746 0549 CB01     		.2byte	0x1cb
 1747 054b 25000000 		.4byte	0x25
 1748 054f B6020000 		.4byte	.LLST24
 1749 0553 11       		.uleb128 0x11
 1750 0554 29000000 		.4byte	.LASF66
 1751 0558 01       		.byte	0x1
 1752 0559 CE01     		.2byte	0x1ce
 1753 055b 25000000 		.4byte	0x25
 1754 055f DA020000 		.4byte	.LLST25
 1755 0563 11       		.uleb128 0x11
 1756 0564 E3010000 		.4byte	.LASF67
 1757 0568 01       		.byte	0x1
 1758 0569 D001     		.2byte	0x1d0
 1759 056b 25000000 		.4byte	0x25
 1760 056f F2020000 		.4byte	.LLST26
 1761 0573 16       		.uleb128 0x16
 1762 0574 4E080000 		.4byte	.LASF68
 1763 0578 01       		.byte	0x1
 1764 0579 D301     		.2byte	0x1d3
 1765 057b 25000000 		.4byte	0x25
 1766 057f 06       		.uleb128 0x6
 1767 0580 58       		.byte	0x58
 1768 0581 93       		.byte	0x93
 1769 0582 04       		.uleb128 0x4
 1770 0583 59       		.byte	0x59
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 42


 1771 0584 93       		.byte	0x93
 1772 0585 04       		.uleb128 0x4
 1773 0586 11       		.uleb128 0x11
 1774 0587 E5000000 		.4byte	.LASF69
 1775 058b 01       		.byte	0x1
 1776 058c D401     		.2byte	0x1d4
 1777 058e 25000000 		.4byte	0x25
 1778 0592 16030000 		.4byte	.LLST27
 1779 0596 17       		.uleb128 0x17
 1780 0597 12010000 		.4byte	.LBB3
 1781 059b 3A000000 		.4byte	.LBE3-.LBB3
 1782 059f B2050000 		.4byte	0x5b2
 1783 05a3 18       		.uleb128 0x18
 1784 05a4 6900     		.ascii	"i\000"
 1785 05a6 01       		.byte	0x1
 1786 05a7 8E01     		.2byte	0x18e
 1787 05a9 9E000000 		.4byte	0x9e
 1788 05ad 2E030000 		.4byte	.LLST28
 1789 05b1 00       		.byte	0
 1790 05b2 17       		.uleb128 0x17
 1791 05b3 4C010000 		.4byte	.LBB4
 1792 05b7 1A000000 		.4byte	.LBE4-.LBB4
 1793 05bb CE050000 		.4byte	0x5ce
 1794 05bf 18       		.uleb128 0x18
 1795 05c0 6900     		.ascii	"i\000"
 1796 05c2 01       		.byte	0x1
 1797 05c3 9C01     		.2byte	0x19c
 1798 05c5 9E000000 		.4byte	0x9e
 1799 05c9 58030000 		.4byte	.LLST29
 1800 05cd 00       		.byte	0
 1801 05ce 0E       		.uleb128 0xe
 1802 05cf CC010000 		.4byte	.LVL101
 1803 05d3 27030000 		.4byte	0x327
 1804 05d7 E5050000 		.4byte	0x5e5
 1805 05db 0F       		.uleb128 0xf
 1806 05dc 01       		.uleb128 0x1
 1807 05dd 50       		.byte	0x50
 1808 05de 05       		.uleb128 0x5
 1809 05df 03       		.byte	0x3
 1810 05e0 48000000 		.4byte	.LC2
 1811 05e4 00       		.byte	0
 1812 05e5 0E       		.uleb128 0xe
 1813 05e6 E8010000 		.4byte	.LVL102
 1814 05ea 5B0B0000 		.4byte	0xb5b
 1815 05ee F8050000 		.4byte	0x5f8
 1816 05f2 0F       		.uleb128 0xf
 1817 05f3 01       		.uleb128 0x1
 1818 05f4 51       		.byte	0x51
 1819 05f5 01       		.uleb128 0x1
 1820 05f6 3B       		.byte	0x3b
 1821 05f7 00       		.byte	0
 1822 05f8 0E       		.uleb128 0xe
 1823 05f9 04020000 		.4byte	.LVL104
 1824 05fd 5B0B0000 		.4byte	0xb5b
 1825 0601 0B060000 		.4byte	0x60b
 1826 0605 0F       		.uleb128 0xf
 1827 0606 01       		.uleb128 0x1
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 43


 1828 0607 51       		.byte	0x51
 1829 0608 01       		.uleb128 0x1
 1830 0609 3B       		.byte	0x3b
 1831 060a 00       		.byte	0
 1832 060b 0E       		.uleb128 0xe
 1833 060c 14020000 		.4byte	.LVL105
 1834 0610 660B0000 		.4byte	0xb66
 1835 0614 26060000 		.4byte	0x626
 1836 0618 0F       		.uleb128 0xf
 1837 0619 01       		.uleb128 0x1
 1838 061a 52       		.byte	0x52
 1839 061b 01       		.uleb128 0x1
 1840 061c 38       		.byte	0x38
 1841 061d 0F       		.uleb128 0xf
 1842 061e 02       		.uleb128 0x2
 1843 061f 7D       		.byte	0x7d
 1844 0620 00       		.sleb128 0
 1845 0621 03       		.uleb128 0x3
 1846 0622 F5       		.byte	0xf5
 1847 0623 06       		.uleb128 0x6
 1848 0624 25       		.uleb128 0x25
 1849 0625 00       		.byte	0
 1850 0626 0E       		.uleb128 0xe
 1851 0627 26020000 		.4byte	.LVL108
 1852 062b 660B0000 		.4byte	0xb66
 1853 062f 41060000 		.4byte	0x641
 1854 0633 0F       		.uleb128 0xf
 1855 0634 01       		.uleb128 0x1
 1856 0635 52       		.byte	0x52
 1857 0636 01       		.uleb128 0x1
 1858 0637 38       		.byte	0x38
 1859 0638 0F       		.uleb128 0xf
 1860 0639 02       		.uleb128 0x2
 1861 063a 7D       		.byte	0x7d
 1862 063b 00       		.sleb128 0
 1863 063c 03       		.uleb128 0x3
 1864 063d F5       		.byte	0xf5
 1865 063e 06       		.uleb128 0x6
 1866 063f 25       		.uleb128 0x25
 1867 0640 00       		.byte	0
 1868 0641 0E       		.uleb128 0xe
 1869 0642 32020000 		.4byte	.LVL110
 1870 0646 710B0000 		.4byte	0xb71
 1871 064a 6B060000 		.4byte	0x66b
 1872 064e 0F       		.uleb128 0xf
 1873 064f 06       		.uleb128 0x6
 1874 0650 50       		.byte	0x50
 1875 0651 93       		.byte	0x93
 1876 0652 04       		.uleb128 0x4
 1877 0653 51       		.byte	0x51
 1878 0654 93       		.byte	0x93
 1879 0655 04       		.uleb128 0x4
 1880 0656 05       		.uleb128 0x5
 1881 0657 91       		.byte	0x91
 1882 0658 50       		.sleb128 -48
 1883 0659 F6       		.byte	0xf6
 1884 065a 08       		.byte	0x8
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 44


 1885 065b 25       		.uleb128 0x25
 1886 065c 0F       		.uleb128 0xf
 1887 065d 06       		.uleb128 0x6
 1888 065e 52       		.byte	0x52
 1889 065f 93       		.byte	0x93
 1890 0660 04       		.uleb128 0x4
 1891 0661 53       		.byte	0x53
 1892 0662 93       		.byte	0x93
 1893 0663 04       		.uleb128 0x4
 1894 0664 05       		.uleb128 0x5
 1895 0665 91       		.byte	0x91
 1896 0666 48       		.sleb128 -56
 1897 0667 F6       		.byte	0xf6
 1898 0668 08       		.byte	0x8
 1899 0669 25       		.uleb128 0x25
 1900 066a 00       		.byte	0
 1901 066b 0E       		.uleb128 0xe
 1902 066c 46020000 		.4byte	.LVL113
 1903 0670 7C0B0000 		.4byte	0xb7c
 1904 0674 9D060000 		.4byte	0x69d
 1905 0678 0F       		.uleb128 0xf
 1906 0679 06       		.uleb128 0x6
 1907 067a 50       		.byte	0x50
 1908 067b 93       		.byte	0x93
 1909 067c 04       		.uleb128 0x4
 1910 067d 51       		.byte	0x51
 1911 067e 93       		.byte	0x93
 1912 067f 04       		.uleb128 0x4
 1913 0680 05       		.uleb128 0x5
 1914 0681 91       		.byte	0x91
 1915 0682 50       		.sleb128 -48
 1916 0683 F6       		.byte	0xf6
 1917 0684 08       		.byte	0x8
 1918 0685 25       		.uleb128 0x25
 1919 0686 0F       		.uleb128 0xf
 1920 0687 06       		.uleb128 0x6
 1921 0688 52       		.byte	0x52
 1922 0689 93       		.byte	0x93
 1923 068a 04       		.uleb128 0x4
 1924 068b 53       		.byte	0x53
 1925 068c 93       		.byte	0x93
 1926 068d 04       		.uleb128 0x4
 1927 068e 05       		.uleb128 0x5
 1928 068f 91       		.byte	0x91
 1929 0690 48       		.sleb128 -56
 1930 0691 F6       		.byte	0xf6
 1931 0692 08       		.byte	0x8
 1932 0693 25       		.uleb128 0x25
 1933 0694 0F       		.uleb128 0xf
 1934 0695 02       		.uleb128 0x2
 1935 0696 7D       		.byte	0x7d
 1936 0697 00       		.sleb128 0
 1937 0698 03       		.uleb128 0x3
 1938 0699 F5       		.byte	0xf5
 1939 069a 06       		.uleb128 0x6
 1940 069b 25       		.uleb128 0x25
 1941 069c 00       		.byte	0
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 45


 1942 069d 0E       		.uleb128 0xe
 1943 069e 5C020000 		.4byte	.LVL116
 1944 06a2 870B0000 		.4byte	0xb87
 1945 06a6 B4060000 		.4byte	0x6b4
 1946 06aa 0F       		.uleb128 0xf
 1947 06ab 01       		.uleb128 0x1
 1948 06ac 50       		.byte	0x50
 1949 06ad 05       		.uleb128 0x5
 1950 06ae 03       		.byte	0x3
 1951 06af 00000000 		.4byte	pid_linv
 1952 06b3 00       		.byte	0
 1953 06b4 0E       		.uleb128 0xe
 1954 06b5 72020000 		.4byte	.LVL119
 1955 06b9 870B0000 		.4byte	0xb87
 1956 06bd D9060000 		.4byte	0x6d9
 1957 06c1 0F       		.uleb128 0xf
 1958 06c2 01       		.uleb128 0x1
 1959 06c3 50       		.byte	0x50
 1960 06c4 05       		.uleb128 0x5
 1961 06c5 03       		.byte	0x3
 1962 06c6 00000000 		.4byte	pid_angv
 1963 06ca 0F       		.uleb128 0xf
 1964 06cb 06       		.uleb128 0x6
 1965 06cc 52       		.byte	0x52
 1966 06cd 93       		.byte	0x93
 1967 06ce 04       		.uleb128 0x4
 1968 06cf 53       		.byte	0x53
 1969 06d0 93       		.byte	0x93
 1970 06d1 04       		.uleb128 0x4
 1971 06d2 05       		.uleb128 0x5
 1972 06d3 91       		.byte	0x91
 1973 06d4 48       		.sleb128 -56
 1974 06d5 F6       		.byte	0xf6
 1975 06d6 08       		.byte	0x8
 1976 06d7 25       		.uleb128 0x25
 1977 06d8 00       		.byte	0
 1978 06d9 13       		.uleb128 0x13
 1979 06da 90020000 		.4byte	.LVL121
 1980 06de 920B0000 		.4byte	0xb92
 1981 06e2 0F       		.uleb128 0xf
 1982 06e3 02       		.uleb128 0x2
 1983 06e4 7D       		.byte	0x7d
 1984 06e5 00       		.sleb128 0
 1985 06e6 03       		.uleb128 0x3
 1986 06e7 F5       		.byte	0xf5
 1987 06e8 06       		.uleb128 0x6
 1988 06e9 25       		.uleb128 0x25
 1989 06ea 0F       		.uleb128 0xf
 1990 06eb 02       		.uleb128 0x2
 1991 06ec 7D       		.byte	0x7d
 1992 06ed 08       		.sleb128 8
 1993 06ee 03       		.uleb128 0x3
 1994 06ef F5       		.byte	0xf5
 1995 06f0 06       		.uleb128 0x6
 1996 06f1 25       		.uleb128 0x25
 1997 06f2 0F       		.uleb128 0xf
 1998 06f3 02       		.uleb128 0x2
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 46


 1999 06f4 7D       		.byte	0x7d
 2000 06f5 10       		.sleb128 16
 2001 06f6 03       		.uleb128 0x3
 2002 06f7 0A       		.byte	0xa
 2003 06f8 502D     		.2byte	0x2d50
 2004 06fa 0F       		.uleb128 0xf
 2005 06fb 02       		.uleb128 0x2
 2006 06fc 7D       		.byte	0x7d
 2007 06fd 14       		.sleb128 20
 2008 06fe 01       		.uleb128 0x1
 2009 06ff 38       		.byte	0x38
 2010 0700 00       		.byte	0
 2011 0701 00       		.byte	0
 2012 0702 0E       		.uleb128 0xe
 2013 0703 0E000000 		.4byte	.LVL38
 2014 0707 9D0B0000 		.4byte	0xb9d
 2015 070b 15070000 		.4byte	0x715
 2016 070f 0F       		.uleb128 0xf
 2017 0710 01       		.uleb128 0x1
 2018 0711 50       		.byte	0x50
 2019 0712 01       		.uleb128 0x1
 2020 0713 30       		.byte	0x30
 2021 0714 00       		.byte	0
 2022 0715 0E       		.uleb128 0xe
 2023 0716 14000000 		.4byte	.LVL39
 2024 071a A80B0000 		.4byte	0xba8
 2025 071e 28070000 		.4byte	0x728
 2026 0722 0F       		.uleb128 0xf
 2027 0723 01       		.uleb128 0x1
 2028 0724 50       		.byte	0x50
 2029 0725 01       		.uleb128 0x1
 2030 0726 30       		.byte	0x30
 2031 0727 00       		.byte	0
 2032 0728 0C       		.uleb128 0xc
 2033 0729 18000000 		.4byte	.LVL40
 2034 072d B30B0000 		.4byte	0xbb3
 2035 0731 0E       		.uleb128 0xe
 2036 0732 2A000000 		.4byte	.LVL41
 2037 0736 BE0B0000 		.4byte	0xbbe
 2038 073a 49070000 		.4byte	0x749
 2039 073e 0F       		.uleb128 0xf
 2040 073f 01       		.uleb128 0x1
 2041 0740 50       		.byte	0x50
 2042 0741 01       		.uleb128 0x1
 2043 0742 30       		.byte	0x30
 2044 0743 0F       		.uleb128 0xf
 2045 0744 01       		.uleb128 0x1
 2046 0745 51       		.byte	0x51
 2047 0746 01       		.uleb128 0x1
 2048 0747 31       		.byte	0x31
 2049 0748 00       		.byte	0
 2050 0749 0C       		.uleb128 0xc
 2051 074a 2E000000 		.4byte	.LVL42
 2052 074e CA0B0000 		.4byte	0xbca
 2053 0752 0C       		.uleb128 0xc
 2054 0753 32000000 		.4byte	.LVL43
 2055 0757 D50B0000 		.4byte	0xbd5
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 47


 2056 075b 0C       		.uleb128 0xc
 2057 075c 36000000 		.4byte	.LVL44
 2058 0760 E20A0000 		.4byte	0xae2
 2059 0764 0C       		.uleb128 0xc
 2060 0765 3A000000 		.4byte	.LVL45
 2061 0769 AB0A0000 		.4byte	0xaab
 2062 076d 0C       		.uleb128 0xc
 2063 076e 4E000000 		.4byte	.LVL47
 2064 0772 E00B0000 		.4byte	0xbe0
 2065 0776 0E       		.uleb128 0xe
 2066 0777 56000000 		.4byte	.LVL49
 2067 077b EB0B0000 		.4byte	0xbeb
 2068 077f 89070000 		.4byte	0x789
 2069 0783 0F       		.uleb128 0xf
 2070 0784 01       		.uleb128 0x1
 2071 0785 50       		.byte	0x50
 2072 0786 01       		.uleb128 0x1
 2073 0787 40       		.byte	0x40
 2074 0788 00       		.byte	0
 2075 0789 0E       		.uleb128 0xe
 2076 078a 7E000000 		.4byte	.LVL53
 2077 078e F60B0000 		.4byte	0xbf6
 2078 0792 B0070000 		.4byte	0x7b0
 2079 0796 0F       		.uleb128 0xf
 2080 0797 01       		.uleb128 0x1
 2081 0798 50       		.byte	0x50
 2082 0799 05       		.uleb128 0x5
 2083 079a 03       		.byte	0x3
 2084 079b 00000000 		.4byte	pid_linv
 2085 079f 0F       		.uleb128 0xf
 2086 07a0 02       		.uleb128 0x2
 2087 07a1 7D       		.byte	0x7d
 2088 07a2 00       		.sleb128 0
 2089 07a3 03       		.uleb128 0x3
 2090 07a4 F5       		.byte	0xf5
 2091 07a5 06       		.uleb128 0x6
 2092 07a6 25       		.uleb128 0x25
 2093 07a7 0F       		.uleb128 0xf
 2094 07a8 02       		.uleb128 0x2
 2095 07a9 7D       		.byte	0x7d
 2096 07aa 08       		.sleb128 8
 2097 07ab 03       		.uleb128 0x3
 2098 07ac F5       		.byte	0xf5
 2099 07ad 06       		.uleb128 0x6
 2100 07ae 25       		.uleb128 0x25
 2101 07af 00       		.byte	0
 2102 07b0 0E       		.uleb128 0xe
 2103 07b1 90000000 		.4byte	.LVL54
 2104 07b5 F60B0000 		.4byte	0xbf6
 2105 07b9 D7070000 		.4byte	0x7d7
 2106 07bd 0F       		.uleb128 0xf
 2107 07be 01       		.uleb128 0x1
 2108 07bf 50       		.byte	0x50
 2109 07c0 05       		.uleb128 0x5
 2110 07c1 03       		.byte	0x3
 2111 07c2 00000000 		.4byte	pid_angv
 2112 07c6 0F       		.uleb128 0xf
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 48


 2113 07c7 02       		.uleb128 0x2
 2114 07c8 7D       		.byte	0x7d
 2115 07c9 00       		.sleb128 0
 2116 07ca 03       		.uleb128 0x3
 2117 07cb F5       		.byte	0xf5
 2118 07cc 06       		.uleb128 0x6
 2119 07cd 25       		.uleb128 0x25
 2120 07ce 0F       		.uleb128 0xf
 2121 07cf 02       		.uleb128 0x2
 2122 07d0 7D       		.byte	0x7d
 2123 07d1 08       		.sleb128 8
 2124 07d2 03       		.uleb128 0x3
 2125 07d3 F5       		.byte	0xf5
 2126 07d4 06       		.uleb128 0x6
 2127 07d5 25       		.uleb128 0x25
 2128 07d6 00       		.byte	0
 2129 07d7 0E       		.uleb128 0xe
 2130 07d8 96000000 		.4byte	.LVL55
 2131 07dc EB0B0000 		.4byte	0xbeb
 2132 07e0 EB070000 		.4byte	0x7eb
 2133 07e4 0F       		.uleb128 0xf
 2134 07e5 01       		.uleb128 0x1
 2135 07e6 50       		.byte	0x50
 2136 07e7 02       		.uleb128 0x2
 2137 07e8 08       		.byte	0x8
 2138 07e9 64       		.byte	0x64
 2139 07ea 00       		.byte	0
 2140 07eb 0E       		.uleb128 0xe
 2141 07ec 9E000000 		.4byte	.LVL58
 2142 07f0 010C0000 		.4byte	0xc01
 2143 07f4 02080000 		.4byte	0x802
 2144 07f8 0F       		.uleb128 0xf
 2145 07f9 01       		.uleb128 0x1
 2146 07fa 50       		.byte	0x50
 2147 07fb 05       		.uleb128 0x5
 2148 07fc 03       		.byte	0x3
 2149 07fd 00000000 		.4byte	TX_ISR_vect
 2150 0801 00       		.byte	0
 2151 0802 0E       		.uleb128 0xe
 2152 0803 A4000000 		.4byte	.LVL59
 2153 0807 0C0C0000 		.4byte	0xc0c
 2154 080b 19080000 		.4byte	0x819
 2155 080f 0F       		.uleb128 0xf
 2156 0810 01       		.uleb128 0x1
 2157 0811 50       		.byte	0x50
 2158 0812 05       		.uleb128 0x5
 2159 0813 03       		.byte	0x3
 2160 0814 00000000 		.4byte	RX_ISR_vect
 2161 0818 00       		.byte	0
 2162 0819 0E       		.uleb128 0xe
 2163 081a AA000000 		.4byte	.LVL60
 2164 081e 170C0000 		.4byte	0xc17
 2165 0822 30080000 		.4byte	0x830
 2166 0826 0F       		.uleb128 0xf
 2167 0827 01       		.uleb128 0x1
 2168 0828 50       		.byte	0x50
 2169 0829 05       		.uleb128 0x5
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 49


 2170 082a 03       		.byte	0x3
 2171 082b 00000000 		.4byte	ENCODER_R0_OVF_ISR_vect
 2172 082f 00       		.byte	0
 2173 0830 0E       		.uleb128 0xe
 2174 0831 B0000000 		.4byte	.LVL61
 2175 0835 220C0000 		.4byte	0xc22
 2176 0839 47080000 		.4byte	0x847
 2177 083d 0F       		.uleb128 0xf
 2178 083e 01       		.uleb128 0x1
 2179 083f 50       		.byte	0x50
 2180 0840 05       		.uleb128 0x5
 2181 0841 03       		.byte	0x3
 2182 0842 00000000 		.4byte	ENCODER_L0_OVF_ISR_vect
 2183 0846 00       		.byte	0
 2184 0847 0E       		.uleb128 0xe
 2185 0848 B6000000 		.4byte	.LVL62
 2186 084c 2D0C0000 		.4byte	0xc2d
 2187 0850 5E080000 		.4byte	0x85e
 2188 0854 0F       		.uleb128 0xf
 2189 0855 01       		.uleb128 0x1
 2190 0856 50       		.byte	0x50
 2191 0857 05       		.uleb128 0x5
 2192 0858 03       		.byte	0x3
 2193 0859 00000000 		.4byte	ENC_R0_ISR_vect
 2194 085d 00       		.byte	0
 2195 085e 0E       		.uleb128 0xe
 2196 085f BC000000 		.4byte	.LVL63
 2197 0863 380C0000 		.4byte	0xc38
 2198 0867 75080000 		.4byte	0x875
 2199 086b 0F       		.uleb128 0xf
 2200 086c 01       		.uleb128 0x1
 2201 086d 50       		.byte	0x50
 2202 086e 05       		.uleb128 0x5
 2203 086f 03       		.byte	0x3
 2204 0870 00000000 		.4byte	ENC_L0_ISR_vect
 2205 0874 00       		.byte	0
 2206 0875 0E       		.uleb128 0xe
 2207 0876 C2000000 		.4byte	.LVL64
 2208 087a 430C0000 		.4byte	0xc43
 2209 087e 8C080000 		.4byte	0x88c
 2210 0882 0F       		.uleb128 0xf
 2211 0883 01       		.uleb128 0x1
 2212 0884 50       		.byte	0x50
 2213 0885 05       		.uleb128 0x5
 2214 0886 03       		.byte	0x3
 2215 0887 00000000 		.4byte	ENC_R1_ISR_vect
 2216 088b 00       		.byte	0
 2217 088c 0E       		.uleb128 0xe
 2218 088d C8000000 		.4byte	.LVL65
 2219 0891 4E0C0000 		.4byte	0xc4e
 2220 0895 A3080000 		.4byte	0x8a3
 2221 0899 0F       		.uleb128 0xf
 2222 089a 01       		.uleb128 0x1
 2223 089b 50       		.byte	0x50
 2224 089c 05       		.uleb128 0x5
 2225 089d 03       		.byte	0x3
 2226 089e 00000000 		.4byte	ENC_L1_ISR_vect
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 50


 2227 08a2 00       		.byte	0
 2228 08a3 0E       		.uleb128 0xe
 2229 08a4 CE000000 		.4byte	.LVL66
 2230 08a8 27030000 		.4byte	0x327
 2231 08ac BA080000 		.4byte	0x8ba
 2232 08b0 0F       		.uleb128 0xf
 2233 08b1 01       		.uleb128 0x1
 2234 08b2 50       		.byte	0x50
 2235 08b3 05       		.uleb128 0x5
 2236 08b4 03       		.byte	0x3
 2237 08b5 00000000 		.4byte	.LC0
 2238 08b9 00       		.byte	0
 2239 08ba 0E       		.uleb128 0xe
 2240 08bb DA000000 		.4byte	.LVL67
 2241 08bf 590C0000 		.4byte	0xc59
 2242 08c3 DD080000 		.4byte	0x8dd
 2243 08c7 0F       		.uleb128 0xf
 2244 08c8 01       		.uleb128 0x1
 2245 08c9 50       		.byte	0x50
 2246 08ca 02       		.uleb128 0x2
 2247 08cb 74       		.byte	0x74
 2248 08cc 00       		.sleb128 0
 2249 08cd 0F       		.uleb128 0xf
 2250 08ce 01       		.uleb128 0x1
 2251 08cf 51       		.byte	0x51
 2252 08d0 05       		.uleb128 0x5
 2253 08d1 03       		.byte	0x3
 2254 08d2 38000000 		.4byte	.LC1
 2255 08d6 0F       		.uleb128 0xf
 2256 08d7 01       		.uleb128 0x1
 2257 08d8 52       		.byte	0x52
 2258 08d9 02       		.uleb128 0x2
 2259 08da 7A       		.byte	0x7a
 2260 08db 00       		.sleb128 0
 2261 08dc 00       		.byte	0
 2262 08dd 13       		.uleb128 0x13
 2263 08de E0000000 		.4byte	.LVL68
 2264 08e2 27030000 		.4byte	0x327
 2265 08e6 0F       		.uleb128 0xf
 2266 08e7 01       		.uleb128 0x1
 2267 08e8 50       		.byte	0x50
 2268 08e9 02       		.uleb128 0x2
 2269 08ea 74       		.byte	0x74
 2270 08eb 00       		.sleb128 0
 2271 08ec 00       		.byte	0
 2272 08ed 00       		.byte	0
 2273 08ee 07       		.uleb128 0x7
 2274 08ef 04       		.byte	0x4
 2275 08f0 90010000 		.4byte	0x190
 2276 08f4 02       		.uleb128 0x2
 2277 08f5 01       		.byte	0x1
 2278 08f6 02       		.byte	0x2
 2279 08f7 3A050000 		.4byte	.LASF70
 2280 08fb 07       		.uleb128 0x7
 2281 08fc 04       		.byte	0x4
 2282 08fd 01090000 		.4byte	0x901
 2283 0901 06       		.uleb128 0x6
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 51


 2284 0902 E9000000 		.4byte	0xe9
 2285 0906 19       		.uleb128 0x19
 2286 0907 DE050000 		.4byte	.LASF71
 2287 090b 06       		.byte	0x6
 2288 090c 1207     		.2byte	0x712
 2289 090e 12090000 		.4byte	0x912
 2290 0912 06       		.uleb128 0x6
 2291 0913 BF000000 		.4byte	0xbf
 2292 0917 1A       		.uleb128 0x1a
 2293 0918 01090000 		.4byte	0x901
 2294 091c 27090000 		.4byte	0x927
 2295 0920 1B       		.uleb128 0x1b
 2296 0921 08010000 		.4byte	0x108
 2297 0925 63       		.byte	0x63
 2298 0926 00       		.byte	0
 2299 0927 1C       		.uleb128 0x1c
 2300 0928 F5020000 		.4byte	.LASF72
 2301 092c 01       		.byte	0x1
 2302 092d 3C       		.byte	0x3c
 2303 092e 38090000 		.4byte	0x938
 2304 0932 05       		.uleb128 0x5
 2305 0933 03       		.byte	0x3
 2306 0934 00000000 		.4byte	buffer_1
 2307 0938 06       		.uleb128 0x6
 2308 0939 17090000 		.4byte	0x917
 2309 093d 1C       		.uleb128 0x1c
 2310 093e FE020000 		.4byte	.LASF73
 2311 0942 01       		.byte	0x1
 2312 0943 3D       		.byte	0x3d
 2313 0944 4E090000 		.4byte	0x94e
 2314 0948 05       		.uleb128 0x5
 2315 0949 03       		.byte	0x3
 2316 094a 00000000 		.4byte	buffer_2
 2317 094e 06       		.uleb128 0x6
 2318 094f 17090000 		.4byte	0x917
 2319 0953 1C       		.uleb128 0x1c
 2320 0954 0C010000 		.4byte	.LASF74
 2321 0958 01       		.byte	0x1
 2322 0959 3E       		.byte	0x3e
 2323 095a FB080000 		.4byte	0x8fb
 2324 095e 05       		.uleb128 0x5
 2325 095f 03       		.byte	0x3
 2326 0960 00000000 		.4byte	receiving_buffer_ptr
 2327 0964 1C       		.uleb128 0x1c
 2328 0965 32060000 		.4byte	.LASF75
 2329 0969 01       		.byte	0x1
 2330 096a 3F       		.byte	0x3f
 2331 096b FB080000 		.4byte	0x8fb
 2332 096f 05       		.uleb128 0x5
 2333 0970 03       		.byte	0x3
 2334 0971 00000000 		.4byte	processing_buffer_ptr
 2335 0975 1C       		.uleb128 0x1c
 2336 0976 3C020000 		.4byte	.LASF76
 2337 097a 01       		.byte	0x1
 2338 097b 40       		.byte	0x40
 2339 097c 15010000 		.4byte	0x115
 2340 0980 05       		.uleb128 0x5
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 52


 2341 0981 03       		.byte	0x3
 2342 0982 00000000 		.4byte	rx_buffer_size
 2343 0986 1A       		.uleb128 0x1a
 2344 0987 1A010000 		.4byte	0x11a
 2345 098b 96090000 		.4byte	0x996
 2346 098f 1B       		.uleb128 0x1b
 2347 0990 08010000 		.4byte	0x108
 2348 0994 04       		.byte	0x4
 2349 0995 00       		.byte	0
 2350 0996 1C       		.uleb128 0x1c
 2351 0997 EA030000 		.4byte	.LASF77
 2352 099b 01       		.byte	0x1
 2353 099c 44       		.byte	0x44
 2354 099d A7090000 		.4byte	0x9a7
 2355 09a1 05       		.uleb128 0x5
 2356 09a2 03       		.byte	0x3
 2357 09a3 00000000 		.4byte	timerL0_count
 2358 09a7 06       		.uleb128 0x6
 2359 09a8 86090000 		.4byte	0x986
 2360 09ac 1C       		.uleb128 0x1c
 2361 09ad 04050000 		.4byte	.LASF78
 2362 09b1 01       		.byte	0x1
 2363 09b2 45       		.byte	0x45
 2364 09b3 BD090000 		.4byte	0x9bd
 2365 09b7 05       		.uleb128 0x5
 2366 09b8 03       		.byte	0x3
 2367 09b9 00000000 		.4byte	timerR0_count
 2368 09bd 06       		.uleb128 0x6
 2369 09be 86090000 		.4byte	0x986
 2370 09c2 1A       		.uleb128 0x1a
 2371 09c3 D2090000 		.4byte	0x9d2
 2372 09c7 D2090000 		.4byte	0x9d2
 2373 09cb 1B       		.uleb128 0x1b
 2374 09cc 08010000 		.4byte	0x108
 2375 09d0 04       		.byte	0x4
 2376 09d1 00       		.byte	0
 2377 09d2 06       		.uleb128 0x6
 2378 09d3 F4080000 		.4byte	0x8f4
 2379 09d7 1C       		.uleb128 0x1c
 2380 09d8 AC040000 		.4byte	.LASF79
 2381 09dc 01       		.byte	0x1
 2382 09dd 48       		.byte	0x48
 2383 09de E8090000 		.4byte	0x9e8
 2384 09e2 05       		.uleb128 0x5
 2385 09e3 03       		.byte	0x3
 2386 09e4 00000000 		.4byte	timerL0_overflows
 2387 09e8 06       		.uleb128 0x6
 2388 09e9 C2090000 		.4byte	0x9c2
 2389 09ed 1C       		.uleb128 0x1c
 2390 09ee 6E050000 		.4byte	.LASF80
 2391 09f2 01       		.byte	0x1
 2392 09f3 49       		.byte	0x49
 2393 09f4 FE090000 		.4byte	0x9fe
 2394 09f8 05       		.uleb128 0x5
 2395 09f9 03       		.byte	0x3
 2396 09fa 00000000 		.4byte	timerR0_overflows
 2397 09fe 06       		.uleb128 0x6
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 53


 2398 09ff C2090000 		.4byte	0x9c2
 2399 0a03 1C       		.uleb128 0x1c
 2400 0a04 E8070000 		.4byte	.LASF81
 2401 0a08 01       		.byte	0x1
 2402 0a09 4C       		.byte	0x4c
 2403 0a0a 15010000 		.4byte	0x115
 2404 0a0e 05       		.uleb128 0x5
 2405 0a0f 03       		.byte	0x3
 2406 0a10 00000000 		.4byte	timerL0_index
 2407 0a14 1C       		.uleb128 0x1c
 2408 0a15 12050000 		.4byte	.LASF82
 2409 0a19 01       		.byte	0x1
 2410 0a1a 4D       		.byte	0x4d
 2411 0a1b 15010000 		.4byte	0x115
 2412 0a1f 05       		.uleb128 0x5
 2413 0a20 03       		.byte	0x3
 2414 0a21 00000000 		.4byte	timerR0_index
 2415 0a25 1C       		.uleb128 0x1c
 2416 0a26 C1000000 		.4byte	.LASF83
 2417 0a2a 01       		.byte	0x1
 2418 0a2b 50       		.byte	0x50
 2419 0a2c D2090000 		.4byte	0x9d2
 2420 0a30 05       		.uleb128 0x5
 2421 0a31 03       		.byte	0x3
 2422 0a32 00000000 		.4byte	R_direction
 2423 0a36 1C       		.uleb128 0x1c
 2424 0a37 57010000 		.4byte	.LASF84
 2425 0a3b 01       		.byte	0x1
 2426 0a3c 51       		.byte	0x51
 2427 0a3d D2090000 		.4byte	0x9d2
 2428 0a41 05       		.uleb128 0x5
 2429 0a42 03       		.byte	0x3
 2430 0a43 00000000 		.4byte	L_direction
 2431 0a47 1C       		.uleb128 0x1c
 2432 0a48 A8030000 		.4byte	.LASF85
 2433 0a4c 01       		.byte	0x1
 2434 0a4d 54       		.byte	0x54
 2435 0a4e 64010000 		.4byte	0x164
 2436 0a52 05       		.uleb128 0x5
 2437 0a53 03       		.byte	0x3
 2438 0a54 00000000 		.4byte	pid_linv
 2439 0a58 1C       		.uleb128 0x1c
 2440 0a59 C9040000 		.4byte	.LASF86
 2441 0a5d 01       		.byte	0x1
 2442 0a5e 55       		.byte	0x55
 2443 0a5f 64010000 		.4byte	0x164
 2444 0a63 05       		.uleb128 0x5
 2445 0a64 03       		.byte	0x3
 2446 0a65 00000000 		.4byte	pid_angv
 2447 0a69 1D       		.uleb128 0x1d
 2448 0a6a 30030000 		.4byte	.LASF87
 2449 0a6e 30030000 		.4byte	.LASF87
 2450 0a72 07       		.byte	0x7
 2451 0a73 5B       		.byte	0x5b
 2452 0a74 1D       		.uleb128 0x1d
 2453 0a75 92030000 		.4byte	.LASF88
 2454 0a79 92030000 		.4byte	.LASF88
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 54


 2455 0a7d 08       		.byte	0x8
 2456 0a7e 5B       		.byte	0x5b
 2457 0a7f 1D       		.uleb128 0x1d
 2458 0a80 D9020000 		.4byte	.LASF89
 2459 0a84 D9020000 		.4byte	.LASF89
 2460 0a88 07       		.byte	0x7
 2461 0a89 67       		.byte	0x67
 2462 0a8a 1D       		.uleb128 0x1d
 2463 0a8b 6C010000 		.4byte	.LASF90
 2464 0a8f 6C010000 		.4byte	.LASF90
 2465 0a93 07       		.byte	0x7
 2466 0a94 6B       		.byte	0x6b
 2467 0a95 1D       		.uleb128 0x1d
 2468 0a96 D9060000 		.4byte	.LASF91
 2469 0a9a D9060000 		.4byte	.LASF91
 2470 0a9e 07       		.byte	0x7
 2471 0a9f 86       		.byte	0x86
 2472 0aa0 1D       		.uleb128 0x1d
 2473 0aa1 E6040000 		.4byte	.LASF92
 2474 0aa5 E6040000 		.4byte	.LASF92
 2475 0aa9 07       		.byte	0x7
 2476 0aaa 6A       		.byte	0x6a
 2477 0aab 1D       		.uleb128 0x1d
 2478 0aac 68000000 		.4byte	.LASF93
 2479 0ab0 68000000 		.4byte	.LASF93
 2480 0ab4 07       		.byte	0x7
 2481 0ab5 5A       		.byte	0x5a
 2482 0ab6 1D       		.uleb128 0x1d
 2483 0ab7 95010000 		.4byte	.LASF94
 2484 0abb 95010000 		.4byte	.LASF94
 2485 0abf 08       		.byte	0x8
 2486 0ac0 67       		.byte	0x67
 2487 0ac1 1D       		.uleb128 0x1d
 2488 0ac2 34000000 		.4byte	.LASF95
 2489 0ac6 34000000 		.4byte	.LASF95
 2490 0aca 08       		.byte	0x8
 2491 0acb 6B       		.byte	0x6b
 2492 0acc 1D       		.uleb128 0x1d
 2493 0acd 04070000 		.4byte	.LASF96
 2494 0ad1 04070000 		.4byte	.LASF96
 2495 0ad5 08       		.byte	0x8
 2496 0ad6 86       		.byte	0x86
 2497 0ad7 1D       		.uleb128 0x1d
 2498 0ad8 5B060000 		.4byte	.LASF97
 2499 0adc 5B060000 		.4byte	.LASF97
 2500 0ae0 08       		.byte	0x8
 2501 0ae1 6A       		.byte	0x6a
 2502 0ae2 1D       		.uleb128 0x1d
 2503 0ae3 7F000000 		.4byte	.LASF98
 2504 0ae7 7F000000 		.4byte	.LASF98
 2505 0aeb 08       		.byte	0x8
 2506 0aec 5A       		.byte	0x5a
 2507 0aed 1D       		.uleb128 0x1d
 2508 0aee 3A010000 		.4byte	.LASF99
 2509 0af2 3A010000 		.4byte	.LASF99
 2510 0af6 09       		.byte	0x9
 2511 0af7 29       		.byte	0x29
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 55


 2512 0af8 1D       		.uleb128 0x1d
 2513 0af9 63030000 		.4byte	.LASF100
 2514 0afd 63030000 		.4byte	.LASF100
 2515 0b01 0A       		.byte	0xa
 2516 0b02 2B       		.byte	0x2b
 2517 0b03 1D       		.uleb128 0x1d
 2518 0b04 F0050000 		.4byte	.LASF101
 2519 0b08 F0050000 		.4byte	.LASF101
 2520 0b0c 0B       		.byte	0xb
 2521 0b0d 29       		.byte	0x29
 2522 0b0e 1D       		.uleb128 0x1d
 2523 0b0f 96070000 		.4byte	.LASF102
 2524 0b13 96070000 		.4byte	.LASF102
 2525 0b17 0C       		.byte	0xc
 2526 0b18 2B       		.byte	0x2b
 2527 0b19 1D       		.uleb128 0x1d
 2528 0b1a 94060000 		.4byte	.LASF103
 2529 0b1e 94060000 		.4byte	.LASF103
 2530 0b22 0D       		.byte	0xd
 2531 0b23 28       		.byte	0x28
 2532 0b24 1D       		.uleb128 0x1d
 2533 0b25 58050000 		.4byte	.LASF104
 2534 0b29 58050000 		.4byte	.LASF104
 2535 0b2d 0E       		.byte	0xe
 2536 0b2e 21       		.byte	0x21
 2537 0b2f 1D       		.uleb128 0x1d
 2538 0b30 FC000000 		.4byte	.LASF105
 2539 0b34 FC000000 		.4byte	.LASF105
 2540 0b38 0D       		.byte	0xd
 2541 0b39 23       		.byte	0x23
 2542 0b3a 1D       		.uleb128 0x1d
 2543 0b3b B1000000 		.4byte	.LASF106
 2544 0b3f B1000000 		.4byte	.LASF106
 2545 0b43 0D       		.byte	0xd
 2546 0b44 25       		.byte	0x25
 2547 0b45 1D       		.uleb128 0x1d
 2548 0b46 61040000 		.4byte	.LASF107
 2549 0b4a 61040000 		.4byte	.LASF107
 2550 0b4e 0F       		.byte	0xf
 2551 0b4f 70       		.byte	0x70
 2552 0b50 1D       		.uleb128 0x1d
 2553 0b51 D9040000 		.4byte	.LASF108
 2554 0b55 D9040000 		.4byte	.LASF108
 2555 0b59 0F       		.byte	0xf
 2556 0b5a 71       		.byte	0x71
 2557 0b5b 1D       		.uleb128 0x1d
 2558 0b5c 0C000000 		.4byte	.LASF109
 2559 0b60 0C000000 		.4byte	.LASF109
 2560 0b64 10       		.byte	0x10
 2561 0b65 0F       		.byte	0xf
 2562 0b66 1D       		.uleb128 0x1d
 2563 0b67 C3010000 		.4byte	.LASF110
 2564 0b6b C3010000 		.4byte	.LASF110
 2565 0b6f 10       		.byte	0x10
 2566 0b70 11       		.byte	0x11
 2567 0b71 1D       		.uleb128 0x1d
 2568 0b72 FF030000 		.4byte	.LASF111
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 56


 2569 0b76 FF030000 		.4byte	.LASF111
 2570 0b7a 10       		.byte	0x10
 2571 0b7b 15       		.byte	0x15
 2572 0b7c 1D       		.uleb128 0x1d
 2573 0b7d 5F050000 		.4byte	.LASF112
 2574 0b81 5F050000 		.4byte	.LASF112
 2575 0b85 10       		.byte	0x10
 2576 0b86 16       		.byte	0x16
 2577 0b87 1D       		.uleb128 0x1d
 2578 0b88 BE040000 		.4byte	.LASF113
 2579 0b8c BE040000 		.4byte	.LASF113
 2580 0b90 05       		.byte	0x5
 2581 0b91 1E       		.byte	0x1e
 2582 0b92 1D       		.uleb128 0x1d
 2583 0b93 2F010000 		.4byte	.LASF114
 2584 0b97 2F010000 		.4byte	.LASF114
 2585 0b9b 05       		.byte	0x5
 2586 0b9c 10       		.byte	0x10
 2587 0b9d 1D       		.uleb128 0x1d
 2588 0b9e 27080000 		.4byte	.LASF115
 2589 0ba2 27080000 		.4byte	.LASF115
 2590 0ba6 11       		.byte	0x11
 2591 0ba7 2F       		.byte	0x2f
 2592 0ba8 1D       		.uleb128 0x1d
 2593 0ba9 40050000 		.4byte	.LASF116
 2594 0bad 40050000 		.4byte	.LASF116
 2595 0bb1 12       		.byte	0x12
 2596 0bb2 2F       		.byte	0x2f
 2597 0bb3 1D       		.uleb128 0x1d
 2598 0bb4 50060000 		.4byte	.LASF117
 2599 0bb8 50060000 		.4byte	.LASF117
 2600 0bbc 0F       		.byte	0xf
 2601 0bbd 54       		.byte	0x54
 2602 0bbe 1E       		.uleb128 0x1e
 2603 0bbf 21010000 		.4byte	.LASF118
 2604 0bc3 21010000 		.4byte	.LASF118
 2605 0bc7 13       		.byte	0x13
 2606 0bc8 2A01     		.2byte	0x12a
 2607 0bca 1D       		.uleb128 0x1d
 2608 0bcb B7010000 		.4byte	.LASF119
 2609 0bcf B7010000 		.4byte	.LASF119
 2610 0bd3 14       		.byte	0x14
 2611 0bd4 92       		.byte	0x92
 2612 0bd5 1D       		.uleb128 0x1d
 2613 0bd6 55040000 		.4byte	.LASF120
 2614 0bda 55040000 		.4byte	.LASF120
 2615 0bde 15       		.byte	0x15
 2616 0bdf 92       		.byte	0x92
 2617 0be0 1D       		.uleb128 0x1d
 2618 0be1 03080000 		.4byte	.LASF121
 2619 0be5 03080000 		.4byte	.LASF121
 2620 0be9 16       		.byte	0x16
 2621 0bea 16       		.byte	0x16
 2622 0beb 1D       		.uleb128 0x1d
 2623 0bec DC010000 		.4byte	.LASF122
 2624 0bf0 DC010000 		.4byte	.LASF122
 2625 0bf4 17       		.byte	0x17
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 57


 2626 0bf5 64       		.byte	0x64
 2627 0bf6 1D       		.uleb128 0x1d
 2628 0bf7 1A000000 		.4byte	.LASF123
 2629 0bfb 1A000000 		.4byte	.LASF123
 2630 0bff 05       		.byte	0x5
 2631 0c00 1D       		.byte	0x1d
 2632 0c01 1D       		.uleb128 0x1d
 2633 0c02 54030000 		.4byte	.LASF124
 2634 0c06 54030000 		.4byte	.LASF124
 2635 0c0a 18       		.byte	0x18
 2636 0c0b 18       		.byte	0x18
 2637 0c0c 1D       		.uleb128 0x1d
 2638 0c0d 21030000 		.4byte	.LASF125
 2639 0c11 21030000 		.4byte	.LASF125
 2640 0c15 19       		.byte	0x19
 2641 0c16 18       		.byte	0x18
 2642 0c17 1D       		.uleb128 0x1d
 2643 0c18 96000000 		.4byte	.LASF126
 2644 0c1c 96000000 		.4byte	.LASF126
 2645 0c20 1A       		.byte	0x1a
 2646 0c21 18       		.byte	0x18
 2647 0c22 1D       		.uleb128 0x1d
 2648 0c23 21020000 		.4byte	.LASF127
 2649 0c27 21020000 		.4byte	.LASF127
 2650 0c2b 1B       		.byte	0x1b
 2651 0c2c 18       		.byte	0x18
 2652 0c2d 1D       		.uleb128 0x1d
 2653 0c2e 5D080000 		.4byte	.LASF128
 2654 0c32 5D080000 		.4byte	.LASF128
 2655 0c36 1C       		.byte	0x1c
 2656 0c37 18       		.byte	0x18
 2657 0c38 1D       		.uleb128 0x1d
 2658 0c39 70080000 		.4byte	.LASF129
 2659 0c3d 70080000 		.4byte	.LASF129
 2660 0c41 1D       		.byte	0x1d
 2661 0c42 18       		.byte	0x18
 2662 0c43 1D       		.uleb128 0x1d
 2663 0c44 CC030000 		.4byte	.LASF130
 2664 0c48 CC030000 		.4byte	.LASF130
 2665 0c4c 1E       		.byte	0x1e
 2666 0c4d 18       		.byte	0x18
 2667 0c4e 1D       		.uleb128 0x1d
 2668 0c4f 83040000 		.4byte	.LASF131
 2669 0c53 83040000 		.4byte	.LASF131
 2670 0c57 1F       		.byte	0x1f
 2671 0c58 18       		.byte	0x18
 2672 0c59 1D       		.uleb128 0x1d
 2673 0c5a 8C050000 		.4byte	.LASF132
 2674 0c5e 8C050000 		.4byte	.LASF132
 2675 0c62 20       		.byte	0x20
 2676 0c63 E7       		.byte	0xe7
 2677 0c64 00       		.byte	0
 2678              		.section	.debug_abbrev,"",%progbits
 2679              	.Ldebug_abbrev0:
 2680 0000 01       		.uleb128 0x1
 2681 0001 11       		.uleb128 0x11
 2682 0002 01       		.byte	0x1
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 58


 2683 0003 25       		.uleb128 0x25
 2684 0004 0E       		.uleb128 0xe
 2685 0005 13       		.uleb128 0x13
 2686 0006 0B       		.uleb128 0xb
 2687 0007 03       		.uleb128 0x3
 2688 0008 0E       		.uleb128 0xe
 2689 0009 1B       		.uleb128 0x1b
 2690 000a 0E       		.uleb128 0xe
 2691 000b 55       		.uleb128 0x55
 2692 000c 17       		.uleb128 0x17
 2693 000d 11       		.uleb128 0x11
 2694 000e 01       		.uleb128 0x1
 2695 000f 10       		.uleb128 0x10
 2696 0010 17       		.uleb128 0x17
 2697 0011 00       		.byte	0
 2698 0012 00       		.byte	0
 2699 0013 02       		.uleb128 0x2
 2700 0014 24       		.uleb128 0x24
 2701 0015 00       		.byte	0
 2702 0016 0B       		.uleb128 0xb
 2703 0017 0B       		.uleb128 0xb
 2704 0018 3E       		.uleb128 0x3e
 2705 0019 0B       		.uleb128 0xb
 2706 001a 03       		.uleb128 0x3
 2707 001b 0E       		.uleb128 0xe
 2708 001c 00       		.byte	0
 2709 001d 00       		.byte	0
 2710 001e 03       		.uleb128 0x3
 2711 001f 16       		.uleb128 0x16
 2712 0020 00       		.byte	0
 2713 0021 03       		.uleb128 0x3
 2714 0022 0E       		.uleb128 0xe
 2715 0023 3A       		.uleb128 0x3a
 2716 0024 0B       		.uleb128 0xb
 2717 0025 3B       		.uleb128 0x3b
 2718 0026 0B       		.uleb128 0xb
 2719 0027 49       		.uleb128 0x49
 2720 0028 13       		.uleb128 0x13
 2721 0029 00       		.byte	0
 2722 002a 00       		.byte	0
 2723 002b 04       		.uleb128 0x4
 2724 002c 24       		.uleb128 0x24
 2725 002d 00       		.byte	0
 2726 002e 0B       		.uleb128 0xb
 2727 002f 0B       		.uleb128 0xb
 2728 0030 3E       		.uleb128 0x3e
 2729 0031 0B       		.uleb128 0xb
 2730 0032 03       		.uleb128 0x3
 2731 0033 08       		.uleb128 0x8
 2732 0034 00       		.byte	0
 2733 0035 00       		.byte	0
 2734 0036 05       		.uleb128 0x5
 2735 0037 16       		.uleb128 0x16
 2736 0038 00       		.byte	0
 2737 0039 03       		.uleb128 0x3
 2738 003a 0E       		.uleb128 0xe
 2739 003b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 59


 2740 003c 0B       		.uleb128 0xb
 2741 003d 3B       		.uleb128 0x3b
 2742 003e 05       		.uleb128 0x5
 2743 003f 49       		.uleb128 0x49
 2744 0040 13       		.uleb128 0x13
 2745 0041 00       		.byte	0
 2746 0042 00       		.byte	0
 2747 0043 06       		.uleb128 0x6
 2748 0044 35       		.uleb128 0x35
 2749 0045 00       		.byte	0
 2750 0046 49       		.uleb128 0x49
 2751 0047 13       		.uleb128 0x13
 2752 0048 00       		.byte	0
 2753 0049 00       		.byte	0
 2754 004a 07       		.uleb128 0x7
 2755 004b 0F       		.uleb128 0xf
 2756 004c 00       		.byte	0
 2757 004d 0B       		.uleb128 0xb
 2758 004e 0B       		.uleb128 0xb
 2759 004f 49       		.uleb128 0x49
 2760 0050 13       		.uleb128 0x13
 2761 0051 00       		.byte	0
 2762 0052 00       		.byte	0
 2763 0053 08       		.uleb128 0x8
 2764 0054 13       		.uleb128 0x13
 2765 0055 01       		.byte	0x1
 2766 0056 0B       		.uleb128 0xb
 2767 0057 0B       		.uleb128 0xb
 2768 0058 3A       		.uleb128 0x3a
 2769 0059 0B       		.uleb128 0xb
 2770 005a 3B       		.uleb128 0x3b
 2771 005b 0B       		.uleb128 0xb
 2772 005c 01       		.uleb128 0x1
 2773 005d 13       		.uleb128 0x13
 2774 005e 00       		.byte	0
 2775 005f 00       		.byte	0
 2776 0060 09       		.uleb128 0x9
 2777 0061 0D       		.uleb128 0xd
 2778 0062 00       		.byte	0
 2779 0063 03       		.uleb128 0x3
 2780 0064 0E       		.uleb128 0xe
 2781 0065 3A       		.uleb128 0x3a
 2782 0066 0B       		.uleb128 0xb
 2783 0067 3B       		.uleb128 0x3b
 2784 0068 0B       		.uleb128 0xb
 2785 0069 49       		.uleb128 0x49
 2786 006a 13       		.uleb128 0x13
 2787 006b 38       		.uleb128 0x38
 2788 006c 0B       		.uleb128 0xb
 2789 006d 00       		.byte	0
 2790 006e 00       		.byte	0
 2791 006f 0A       		.uleb128 0xa
 2792 0070 2E       		.uleb128 0x2e
 2793 0071 00       		.byte	0
 2794 0072 3F       		.uleb128 0x3f
 2795 0073 19       		.uleb128 0x19
 2796 0074 03       		.uleb128 0x3
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 60


 2797 0075 0E       		.uleb128 0xe
 2798 0076 3A       		.uleb128 0x3a
 2799 0077 0B       		.uleb128 0xb
 2800 0078 3B       		.uleb128 0x3b
 2801 0079 05       		.uleb128 0x5
 2802 007a 27       		.uleb128 0x27
 2803 007b 19       		.uleb128 0x19
 2804 007c 11       		.uleb128 0x11
 2805 007d 01       		.uleb128 0x1
 2806 007e 12       		.uleb128 0x12
 2807 007f 06       		.uleb128 0x6
 2808 0080 40       		.uleb128 0x40
 2809 0081 18       		.uleb128 0x18
 2810 0082 9742     		.uleb128 0x2117
 2811 0084 19       		.uleb128 0x19
 2812 0085 00       		.byte	0
 2813 0086 00       		.byte	0
 2814 0087 0B       		.uleb128 0xb
 2815 0088 2E       		.uleb128 0x2e
 2816 0089 01       		.byte	0x1
 2817 008a 3F       		.uleb128 0x3f
 2818 008b 19       		.uleb128 0x19
 2819 008c 03       		.uleb128 0x3
 2820 008d 0E       		.uleb128 0xe
 2821 008e 3A       		.uleb128 0x3a
 2822 008f 0B       		.uleb128 0xb
 2823 0090 3B       		.uleb128 0x3b
 2824 0091 0B       		.uleb128 0xb
 2825 0092 27       		.uleb128 0x27
 2826 0093 19       		.uleb128 0x19
 2827 0094 11       		.uleb128 0x11
 2828 0095 01       		.uleb128 0x1
 2829 0096 12       		.uleb128 0x12
 2830 0097 06       		.uleb128 0x6
 2831 0098 40       		.uleb128 0x40
 2832 0099 18       		.uleb128 0x18
 2833 009a 9742     		.uleb128 0x2117
 2834 009c 19       		.uleb128 0x19
 2835 009d 01       		.uleb128 0x1
 2836 009e 13       		.uleb128 0x13
 2837 009f 00       		.byte	0
 2838 00a0 00       		.byte	0
 2839 00a1 0C       		.uleb128 0xc
 2840 00a2 898201   		.uleb128 0x4109
 2841 00a5 00       		.byte	0
 2842 00a6 11       		.uleb128 0x11
 2843 00a7 01       		.uleb128 0x1
 2844 00a8 31       		.uleb128 0x31
 2845 00a9 13       		.uleb128 0x13
 2846 00aa 00       		.byte	0
 2847 00ab 00       		.byte	0
 2848 00ac 0D       		.uleb128 0xd
 2849 00ad 34       		.uleb128 0x34
 2850 00ae 00       		.byte	0
 2851 00af 03       		.uleb128 0x3
 2852 00b0 0E       		.uleb128 0xe
 2853 00b1 3A       		.uleb128 0x3a
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 61


 2854 00b2 0B       		.uleb128 0xb
 2855 00b3 3B       		.uleb128 0x3b
 2856 00b4 0B       		.uleb128 0xb
 2857 00b5 49       		.uleb128 0x49
 2858 00b6 13       		.uleb128 0x13
 2859 00b7 02       		.uleb128 0x2
 2860 00b8 17       		.uleb128 0x17
 2861 00b9 00       		.byte	0
 2862 00ba 00       		.byte	0
 2863 00bb 0E       		.uleb128 0xe
 2864 00bc 898201   		.uleb128 0x4109
 2865 00bf 01       		.byte	0x1
 2866 00c0 11       		.uleb128 0x11
 2867 00c1 01       		.uleb128 0x1
 2868 00c2 31       		.uleb128 0x31
 2869 00c3 13       		.uleb128 0x13
 2870 00c4 01       		.uleb128 0x1
 2871 00c5 13       		.uleb128 0x13
 2872 00c6 00       		.byte	0
 2873 00c7 00       		.byte	0
 2874 00c8 0F       		.uleb128 0xf
 2875 00c9 8A8201   		.uleb128 0x410a
 2876 00cc 00       		.byte	0
 2877 00cd 02       		.uleb128 0x2
 2878 00ce 18       		.uleb128 0x18
 2879 00cf 9142     		.uleb128 0x2111
 2880 00d1 18       		.uleb128 0x18
 2881 00d2 00       		.byte	0
 2882 00d3 00       		.byte	0
 2883 00d4 10       		.uleb128 0x10
 2884 00d5 2E       		.uleb128 0x2e
 2885 00d6 01       		.byte	0x1
 2886 00d7 3F       		.uleb128 0x3f
 2887 00d8 19       		.uleb128 0x19
 2888 00d9 03       		.uleb128 0x3
 2889 00da 0E       		.uleb128 0xe
 2890 00db 3A       		.uleb128 0x3a
 2891 00dc 0B       		.uleb128 0xb
 2892 00dd 3B       		.uleb128 0x3b
 2893 00de 05       		.uleb128 0x5
 2894 00df 27       		.uleb128 0x27
 2895 00e0 19       		.uleb128 0x19
 2896 00e1 11       		.uleb128 0x11
 2897 00e2 01       		.uleb128 0x1
 2898 00e3 12       		.uleb128 0x12
 2899 00e4 06       		.uleb128 0x6
 2900 00e5 40       		.uleb128 0x40
 2901 00e6 18       		.uleb128 0x18
 2902 00e7 9742     		.uleb128 0x2117
 2903 00e9 19       		.uleb128 0x19
 2904 00ea 01       		.uleb128 0x1
 2905 00eb 13       		.uleb128 0x13
 2906 00ec 00       		.byte	0
 2907 00ed 00       		.byte	0
 2908 00ee 11       		.uleb128 0x11
 2909 00ef 34       		.uleb128 0x34
 2910 00f0 00       		.byte	0
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 62


 2911 00f1 03       		.uleb128 0x3
 2912 00f2 0E       		.uleb128 0xe
 2913 00f3 3A       		.uleb128 0x3a
 2914 00f4 0B       		.uleb128 0xb
 2915 00f5 3B       		.uleb128 0x3b
 2916 00f6 05       		.uleb128 0x5
 2917 00f7 49       		.uleb128 0x49
 2918 00f8 13       		.uleb128 0x13
 2919 00f9 02       		.uleb128 0x2
 2920 00fa 17       		.uleb128 0x17
 2921 00fb 00       		.byte	0
 2922 00fc 00       		.byte	0
 2923 00fd 12       		.uleb128 0x12
 2924 00fe 05       		.uleb128 0x5
 2925 00ff 00       		.byte	0
 2926 0100 03       		.uleb128 0x3
 2927 0101 0E       		.uleb128 0xe
 2928 0102 3A       		.uleb128 0x3a
 2929 0103 0B       		.uleb128 0xb
 2930 0104 3B       		.uleb128 0x3b
 2931 0105 0B       		.uleb128 0xb
 2932 0106 49       		.uleb128 0x49
 2933 0107 13       		.uleb128 0x13
 2934 0108 02       		.uleb128 0x2
 2935 0109 17       		.uleb128 0x17
 2936 010a 00       		.byte	0
 2937 010b 00       		.byte	0
 2938 010c 13       		.uleb128 0x13
 2939 010d 898201   		.uleb128 0x4109
 2940 0110 01       		.byte	0x1
 2941 0111 11       		.uleb128 0x11
 2942 0112 01       		.uleb128 0x1
 2943 0113 31       		.uleb128 0x31
 2944 0114 13       		.uleb128 0x13
 2945 0115 00       		.byte	0
 2946 0116 00       		.byte	0
 2947 0117 14       		.uleb128 0x14
 2948 0118 05       		.uleb128 0x5
 2949 0119 00       		.byte	0
 2950 011a 03       		.uleb128 0x3
 2951 011b 08       		.uleb128 0x8
 2952 011c 3A       		.uleb128 0x3a
 2953 011d 0B       		.uleb128 0xb
 2954 011e 3B       		.uleb128 0x3b
 2955 011f 0B       		.uleb128 0xb
 2956 0120 49       		.uleb128 0x49
 2957 0121 13       		.uleb128 0x13
 2958 0122 02       		.uleb128 0x2
 2959 0123 17       		.uleb128 0x17
 2960 0124 00       		.byte	0
 2961 0125 00       		.byte	0
 2962 0126 15       		.uleb128 0x15
 2963 0127 2E       		.uleb128 0x2e
 2964 0128 01       		.byte	0x1
 2965 0129 3F       		.uleb128 0x3f
 2966 012a 19       		.uleb128 0x19
 2967 012b 03       		.uleb128 0x3
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 63


 2968 012c 0E       		.uleb128 0xe
 2969 012d 3A       		.uleb128 0x3a
 2970 012e 0B       		.uleb128 0xb
 2971 012f 3B       		.uleb128 0x3b
 2972 0130 05       		.uleb128 0x5
 2973 0131 27       		.uleb128 0x27
 2974 0132 19       		.uleb128 0x19
 2975 0133 49       		.uleb128 0x49
 2976 0134 13       		.uleb128 0x13
 2977 0135 8701     		.uleb128 0x87
 2978 0137 19       		.uleb128 0x19
 2979 0138 11       		.uleb128 0x11
 2980 0139 01       		.uleb128 0x1
 2981 013a 12       		.uleb128 0x12
 2982 013b 06       		.uleb128 0x6
 2983 013c 40       		.uleb128 0x40
 2984 013d 18       		.uleb128 0x18
 2985 013e 9642     		.uleb128 0x2116
 2986 0140 19       		.uleb128 0x19
 2987 0141 01       		.uleb128 0x1
 2988 0142 13       		.uleb128 0x13
 2989 0143 00       		.byte	0
 2990 0144 00       		.byte	0
 2991 0145 16       		.uleb128 0x16
 2992 0146 34       		.uleb128 0x34
 2993 0147 00       		.byte	0
 2994 0148 03       		.uleb128 0x3
 2995 0149 0E       		.uleb128 0xe
 2996 014a 3A       		.uleb128 0x3a
 2997 014b 0B       		.uleb128 0xb
 2998 014c 3B       		.uleb128 0x3b
 2999 014d 05       		.uleb128 0x5
 3000 014e 49       		.uleb128 0x49
 3001 014f 13       		.uleb128 0x13
 3002 0150 02       		.uleb128 0x2
 3003 0151 18       		.uleb128 0x18
 3004 0152 00       		.byte	0
 3005 0153 00       		.byte	0
 3006 0154 17       		.uleb128 0x17
 3007 0155 0B       		.uleb128 0xb
 3008 0156 01       		.byte	0x1
 3009 0157 11       		.uleb128 0x11
 3010 0158 01       		.uleb128 0x1
 3011 0159 12       		.uleb128 0x12
 3012 015a 06       		.uleb128 0x6
 3013 015b 01       		.uleb128 0x1
 3014 015c 13       		.uleb128 0x13
 3015 015d 00       		.byte	0
 3016 015e 00       		.byte	0
 3017 015f 18       		.uleb128 0x18
 3018 0160 34       		.uleb128 0x34
 3019 0161 00       		.byte	0
 3020 0162 03       		.uleb128 0x3
 3021 0163 08       		.uleb128 0x8
 3022 0164 3A       		.uleb128 0x3a
 3023 0165 0B       		.uleb128 0xb
 3024 0166 3B       		.uleb128 0x3b
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 64


 3025 0167 05       		.uleb128 0x5
 3026 0168 49       		.uleb128 0x49
 3027 0169 13       		.uleb128 0x13
 3028 016a 02       		.uleb128 0x2
 3029 016b 17       		.uleb128 0x17
 3030 016c 00       		.byte	0
 3031 016d 00       		.byte	0
 3032 016e 19       		.uleb128 0x19
 3033 016f 34       		.uleb128 0x34
 3034 0170 00       		.byte	0
 3035 0171 03       		.uleb128 0x3
 3036 0172 0E       		.uleb128 0xe
 3037 0173 3A       		.uleb128 0x3a
 3038 0174 0B       		.uleb128 0xb
 3039 0175 3B       		.uleb128 0x3b
 3040 0176 05       		.uleb128 0x5
 3041 0177 49       		.uleb128 0x49
 3042 0178 13       		.uleb128 0x13
 3043 0179 3F       		.uleb128 0x3f
 3044 017a 19       		.uleb128 0x19
 3045 017b 3C       		.uleb128 0x3c
 3046 017c 19       		.uleb128 0x19
 3047 017d 00       		.byte	0
 3048 017e 00       		.byte	0
 3049 017f 1A       		.uleb128 0x1a
 3050 0180 01       		.uleb128 0x1
 3051 0181 01       		.byte	0x1
 3052 0182 49       		.uleb128 0x49
 3053 0183 13       		.uleb128 0x13
 3054 0184 01       		.uleb128 0x1
 3055 0185 13       		.uleb128 0x13
 3056 0186 00       		.byte	0
 3057 0187 00       		.byte	0
 3058 0188 1B       		.uleb128 0x1b
 3059 0189 21       		.uleb128 0x21
 3060 018a 00       		.byte	0
 3061 018b 49       		.uleb128 0x49
 3062 018c 13       		.uleb128 0x13
 3063 018d 2F       		.uleb128 0x2f
 3064 018e 0B       		.uleb128 0xb
 3065 018f 00       		.byte	0
 3066 0190 00       		.byte	0
 3067 0191 1C       		.uleb128 0x1c
 3068 0192 34       		.uleb128 0x34
 3069 0193 00       		.byte	0
 3070 0194 03       		.uleb128 0x3
 3071 0195 0E       		.uleb128 0xe
 3072 0196 3A       		.uleb128 0x3a
 3073 0197 0B       		.uleb128 0xb
 3074 0198 3B       		.uleb128 0x3b
 3075 0199 0B       		.uleb128 0xb
 3076 019a 49       		.uleb128 0x49
 3077 019b 13       		.uleb128 0x13
 3078 019c 3F       		.uleb128 0x3f
 3079 019d 19       		.uleb128 0x19
 3080 019e 02       		.uleb128 0x2
 3081 019f 18       		.uleb128 0x18
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 65


 3082 01a0 00       		.byte	0
 3083 01a1 00       		.byte	0
 3084 01a2 1D       		.uleb128 0x1d
 3085 01a3 2E       		.uleb128 0x2e
 3086 01a4 00       		.byte	0
 3087 01a5 3F       		.uleb128 0x3f
 3088 01a6 19       		.uleb128 0x19
 3089 01a7 3C       		.uleb128 0x3c
 3090 01a8 19       		.uleb128 0x19
 3091 01a9 6E       		.uleb128 0x6e
 3092 01aa 0E       		.uleb128 0xe
 3093 01ab 03       		.uleb128 0x3
 3094 01ac 0E       		.uleb128 0xe
 3095 01ad 3A       		.uleb128 0x3a
 3096 01ae 0B       		.uleb128 0xb
 3097 01af 3B       		.uleb128 0x3b
 3098 01b0 0B       		.uleb128 0xb
 3099 01b1 00       		.byte	0
 3100 01b2 00       		.byte	0
 3101 01b3 1E       		.uleb128 0x1e
 3102 01b4 2E       		.uleb128 0x2e
 3103 01b5 00       		.byte	0
 3104 01b6 3F       		.uleb128 0x3f
 3105 01b7 19       		.uleb128 0x19
 3106 01b8 3C       		.uleb128 0x3c
 3107 01b9 19       		.uleb128 0x19
 3108 01ba 6E       		.uleb128 0x6e
 3109 01bb 0E       		.uleb128 0xe
 3110 01bc 03       		.uleb128 0x3
 3111 01bd 0E       		.uleb128 0xe
 3112 01be 3A       		.uleb128 0x3a
 3113 01bf 0B       		.uleb128 0xb
 3114 01c0 3B       		.uleb128 0x3b
 3115 01c1 05       		.uleb128 0x5
 3116 01c2 00       		.byte	0
 3117 01c3 00       		.byte	0
 3118 01c4 00       		.byte	0
 3119              		.section	.debug_loc,"",%progbits
 3120              	.Ldebug_loc0:
 3121              	.LLST0:
 3122 0000 18000000 		.4byte	.LVL3
 3123 0004 2F000000 		.4byte	.LVL4-1
 3124 0008 0100     		.2byte	0x1
 3125 000a 50       		.byte	0x50
 3126 000b 3C000000 		.4byte	.LVL5
 3127 000f 46000000 		.4byte	.LVL6
 3128 0013 0100     		.2byte	0x1
 3129 0015 50       		.byte	0x50
 3130 0016 00000000 		.4byte	0
 3131 001a 00000000 		.4byte	0
 3132              	.LLST1:
 3133 001e 18000000 		.4byte	.LVL12
 3134 0022 2F000000 		.4byte	.LVL13-1
 3135 0026 0100     		.2byte	0x1
 3136 0028 50       		.byte	0x50
 3137 0029 3C000000 		.4byte	.LVL14
 3138 002d 46000000 		.4byte	.LVL15
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 66


 3139 0031 0100     		.2byte	0x1
 3140 0033 50       		.byte	0x50
 3141 0034 00000000 		.4byte	0
 3142 0038 00000000 		.4byte	0
 3143              	.LLST2:
 3144 003c 06000000 		.4byte	.LVL20
 3145 0040 19000000 		.4byte	.LVL21-1
 3146 0044 0100     		.2byte	0x1
 3147 0046 50       		.byte	0x50
 3148 0047 00000000 		.4byte	0
 3149 004b 00000000 		.4byte	0
 3150              	.LLST3:
 3151 004f 06000000 		.4byte	.LVL22
 3152 0053 19000000 		.4byte	.LVL23-1
 3153 0057 0100     		.2byte	0x1
 3154 0059 50       		.byte	0x50
 3155 005a 00000000 		.4byte	0
 3156 005e 00000000 		.4byte	0
 3157              	.LLST4:
 3158 0062 00000000 		.4byte	.LVL24
 3159 0066 04000000 		.4byte	.LVL25
 3160 006a 0100     		.2byte	0x1
 3161 006c 50       		.byte	0x50
 3162 006d 04000000 		.4byte	.LVL25
 3163 0071 28000000 		.4byte	.LFE64
 3164 0075 0100     		.2byte	0x1
 3165 0077 54       		.byte	0x54
 3166 0078 00000000 		.4byte	0
 3167 007c 00000000 		.4byte	0
 3168              	.LLST5:
 3169 0080 00000000 		.4byte	.LVL29
 3170 0084 04000000 		.4byte	.LVL30
 3171 0088 0100     		.2byte	0x1
 3172 008a 50       		.byte	0x50
 3173 008b 04000000 		.4byte	.LVL30
 3174 008f 14000000 		.4byte	.LFE65
 3175 0093 0400     		.2byte	0x4
 3176 0095 F3       		.byte	0xf3
 3177 0096 01       		.uleb128 0x1
 3178 0097 50       		.byte	0x50
 3179 0098 9F       		.byte	0x9f
 3180 0099 00000000 		.4byte	0
 3181 009d 00000000 		.4byte	0
 3182              	.LLST6:
 3183 00a1 12000000 		.4byte	.LVL35
 3184 00a5 30000000 		.4byte	.LVL37
 3185 00a9 0100     		.2byte	0x1
 3186 00ab 54       		.byte	0x54
 3187 00ac 00000000 		.4byte	0
 3188 00b0 00000000 		.4byte	0
 3189              	.LLST7:
 3190 00b4 4A000000 		.4byte	.LVL46
 3191 00b8 E2000000 		.4byte	.LVL69
 3192 00bc 0200     		.2byte	0x2
 3193 00be 30       		.byte	0x30
 3194 00bf 9F       		.byte	0x9f
 3195 00c0 08010000 		.4byte	.LVL72
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 67


 3196 00c4 4C010000 		.4byte	.LVL79
 3197 00c8 0100     		.2byte	0x1
 3198 00ca 51       		.byte	0x51
 3199 00cb 00000000 		.4byte	0
 3200 00cf 00000000 		.4byte	0
 3201              	.LLST8:
 3202 00d3 58000000 		.4byte	.LVL50
 3203 00d7 7A000000 		.4byte	.LVL52
 3204 00db 0100     		.2byte	0x1
 3205 00dd 50       		.byte	0x50
 3206 00de 7A000000 		.4byte	.LVL52
 3207 00e2 F4020000 		.4byte	.LFE74
 3208 00e6 0100     		.2byte	0x1
 3209 00e8 55       		.byte	0x55
 3210 00e9 00000000 		.4byte	0
 3211 00ed 00000000 		.4byte	0
 3212              	.LLST9:
 3213 00f1 64000000 		.4byte	.LVL51
 3214 00f5 E2000000 		.4byte	.LVL69
 3215 00f9 0200     		.2byte	0x2
 3216 00fb 30       		.byte	0x30
 3217 00fc 9F       		.byte	0x9f
 3218 00fd E2000000 		.4byte	.LVL69
 3219 0101 F4020000 		.4byte	.LFE74
 3220 0105 0100     		.2byte	0x1
 3221 0107 54       		.byte	0x54
 3222 0108 00000000 		.4byte	0
 3223 010c 00000000 		.4byte	0
 3224              	.LLST10:
 3225 0110 64000000 		.4byte	.LVL51
 3226 0114 E2000000 		.4byte	.LVL69
 3227 0118 0200     		.2byte	0x2
 3228 011a 30       		.byte	0x30
 3229 011b 9F       		.byte	0x9f
 3230 011c 6E010000 		.4byte	.LVL84
 3231 0120 92010000 		.4byte	.LVL90
 3232 0124 0100     		.2byte	0x1
 3233 0126 51       		.byte	0x51
 3234 0127 C6010000 		.4byte	.LVL100
 3235 012b CB010000 		.4byte	.LVL101-1
 3236 012f 0100     		.2byte	0x1
 3237 0131 51       		.byte	0x51
 3238 0132 00000000 		.4byte	0
 3239 0136 00000000 		.4byte	0
 3240              	.LLST11:
 3241 013a 98000000 		.4byte	.LVL56
 3242 013e 9A000000 		.4byte	.LVL57
 3243 0142 0100     		.2byte	0x1
 3244 0144 50       		.byte	0x50
 3245 0145 9A000000 		.4byte	.LVL57
 3246 0149 E2000000 		.4byte	.LVL69
 3247 014d 0100     		.2byte	0x1
 3248 014f 54       		.byte	0x54
 3249 0150 00000000 		.4byte	0
 3250 0154 00000000 		.4byte	0
 3251              	.LLST12:
 3252 0158 F8000000 		.4byte	.LVL70
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 68


 3253 015c 02010000 		.4byte	.LVL71
 3254 0160 0100     		.2byte	0x1
 3255 0162 50       		.byte	0x50
 3256 0163 02010000 		.4byte	.LVL71
 3257 0167 12010000 		.4byte	.LVL73
 3258 016b 0500     		.2byte	0x5
 3259 016d 03       		.byte	0x3
 3260 016e 00000000 		.4byte	processing_buffer_ptr
 3261 0172 00000000 		.4byte	0
 3262 0176 00000000 		.4byte	0
 3263              	.LLST13:
 3264 017a 4C010000 		.4byte	.LVL79
 3265 017e 58010000 		.4byte	.LVL80
 3266 0182 0100     		.2byte	0x1
 3267 0184 52       		.byte	0x52
 3268 0185 5A010000 		.4byte	.LVL81
 3269 0189 7C010000 		.4byte	.LVL87
 3270 018d 0100     		.2byte	0x1
 3271 018f 52       		.byte	0x52
 3272 0190 00000000 		.4byte	0
 3273 0194 00000000 		.4byte	0
 3274              	.LLST14:
 3275 0198 7A010000 		.4byte	.LVL86
 3276 019c 9A010000 		.4byte	.LVL92
 3277 01a0 0100     		.2byte	0x1
 3278 01a2 53       		.byte	0x53
 3279 01a3 9A010000 		.4byte	.LVL92
 3280 01a7 A3010000 		.4byte	.LVL96-1
 3281 01ab 0300     		.2byte	0x3
 3282 01ad 73       		.byte	0x73
 3283 01ae 7E       		.sleb128 -2
 3284 01af 9F       		.byte	0x9f
 3285 01b0 A3010000 		.4byte	.LVL96-1
 3286 01b4 C6010000 		.4byte	.LVL100
 3287 01b8 0A00     		.2byte	0xa
 3288 01ba 7A       		.byte	0x7a
 3289 01bb 7F       		.sleb128 -1
 3290 01bc 32       		.byte	0x32
 3291 01bd 24       		.byte	0x24
 3292 01be 74       		.byte	0x74
 3293 01bf 00       		.sleb128 0
 3294 01c0 22       		.byte	0x22
 3295 01c1 23       		.byte	0x23
 3296 01c2 03       		.uleb128 0x3
 3297 01c3 9F       		.byte	0x9f
 3298 01c4 C6010000 		.4byte	.LVL100
 3299 01c8 CB010000 		.4byte	.LVL101-1
 3300 01cc 0100     		.2byte	0x1
 3301 01ce 53       		.byte	0x53
 3302 01cf CB010000 		.4byte	.LVL101-1
 3303 01d3 F4020000 		.4byte	.LFE74
 3304 01d7 0A00     		.2byte	0xa
 3305 01d9 7A       		.byte	0x7a
 3306 01da 7F       		.sleb128 -1
 3307 01db 32       		.byte	0x32
 3308 01dc 24       		.byte	0x24
 3309 01dd 74       		.byte	0x74
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 69


 3310 01de 00       		.sleb128 0
 3311 01df 22       		.byte	0x22
 3312 01e0 23       		.byte	0x23
 3313 01e1 03       		.uleb128 0x3
 3314 01e2 9F       		.byte	0x9f
 3315 01e3 00000000 		.4byte	0
 3316 01e7 00000000 		.4byte	0
 3317              	.LLST15:
 3318 01eb 90010000 		.4byte	.LVL89
 3319 01ef A0010000 		.4byte	.LVL95
 3320 01f3 0100     		.2byte	0x1
 3321 01f5 50       		.byte	0x50
 3322 01f6 00000000 		.4byte	0
 3323 01fa 00000000 		.4byte	0
 3324              	.LLST16:
 3325 01fe 9C010000 		.4byte	.LVL93
 3326 0202 9E010000 		.4byte	.LVL94
 3327 0206 0100     		.2byte	0x1
 3328 0208 56       		.byte	0x56
 3329 0209 00000000 		.4byte	0
 3330 020d 00000000 		.4byte	0
 3331              	.LLST17:
 3332 0211 8E010000 		.4byte	.LVL88
 3333 0215 A3010000 		.4byte	.LVL96-1
 3334 0219 0100     		.2byte	0x1
 3335 021b 52       		.byte	0x52
 3336 021c 00000000 		.4byte	0
 3337 0220 00000000 		.4byte	0
 3338              	.LLST18:
 3339 0224 98010000 		.4byte	.LVL91
 3340 0228 A3010000 		.4byte	.LVL96-1
 3341 022c 0100     		.2byte	0x1
 3342 022e 51       		.byte	0x51
 3343 022f 00000000 		.4byte	0
 3344 0233 00000000 		.4byte	0
 3345              	.LLST19:
 3346 0237 9C010000 		.4byte	.LVL93
 3347 023b A0010000 		.4byte	.LVL95
 3348 023f 0600     		.2byte	0x6
 3349 0241 72       		.byte	0x72
 3350 0242 00       		.sleb128 0
 3351 0243 70       		.byte	0x70
 3352 0244 00       		.sleb128 0
 3353 0245 21       		.byte	0x21
 3354 0246 9F       		.byte	0x9f
 3355 0247 00000000 		.4byte	0
 3356 024b 00000000 		.4byte	0
 3357              	.LLST20:
 3358 024f 9E010000 		.4byte	.LVL94
 3359 0253 C6010000 		.4byte	.LVL100
 3360 0257 0100     		.2byte	0x1
 3361 0259 56       		.byte	0x56
 3362 025a 00000000 		.4byte	0
 3363 025e 00000000 		.4byte	0
 3364              	.LLST21:
 3365 0262 EC010000 		.4byte	.LVL103
 3366 0266 34020000 		.4byte	.LVL111
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 70


 3367 026a 0600     		.2byte	0x6
 3368 026c 58       		.byte	0x58
 3369 026d 93       		.byte	0x93
 3370 026e 04       		.uleb128 0x4
 3371 026f 59       		.byte	0x59
 3372 0270 93       		.byte	0x93
 3373 0271 04       		.uleb128 0x4
 3374 0272 00000000 		.4byte	0
 3375 0276 00000000 		.4byte	0
 3376              	.LLST22:
 3377 027a 04020000 		.4byte	.LVL104
 3378 027e 13020000 		.4byte	.LVL105-1
 3379 0282 0600     		.2byte	0x6
 3380 0284 50       		.byte	0x50
 3381 0285 93       		.byte	0x93
 3382 0286 04       		.uleb128 0x4
 3383 0287 51       		.byte	0x51
 3384 0288 93       		.byte	0x93
 3385 0289 04       		.uleb128 0x4
 3386 028a 00000000 		.4byte	0
 3387 028e 00000000 		.4byte	0
 3388              	.LLST23:
 3389 0292 18020000 		.4byte	.LVL106
 3390 0296 20020000 		.4byte	.LVL107
 3391 029a 0600     		.2byte	0x6
 3392 029c 50       		.byte	0x50
 3393 029d 93       		.byte	0x93
 3394 029e 04       		.uleb128 0x4
 3395 029f 51       		.byte	0x51
 3396 02a0 93       		.byte	0x93
 3397 02a1 04       		.uleb128 0x4
 3398 02a2 20020000 		.4byte	.LVL107
 3399 02a6 4A020000 		.4byte	.LVL114
 3400 02aa 0200     		.2byte	0x2
 3401 02ac 91       		.byte	0x91
 3402 02ad 48       		.sleb128 -56
 3403 02ae 00000000 		.4byte	0
 3404 02b2 00000000 		.4byte	0
 3405              	.LLST24:
 3406 02b6 2A020000 		.4byte	.LVL109
 3407 02ba 31020000 		.4byte	.LVL110-1
 3408 02be 0600     		.2byte	0x6
 3409 02c0 50       		.byte	0x50
 3410 02c1 93       		.byte	0x93
 3411 02c2 04       		.uleb128 0x4
 3412 02c3 51       		.byte	0x51
 3413 02c4 93       		.byte	0x93
 3414 02c5 04       		.uleb128 0x4
 3415 02c6 31020000 		.4byte	.LVL110-1
 3416 02ca F4020000 		.4byte	.LFE74
 3417 02ce 0200     		.2byte	0x2
 3418 02d0 91       		.byte	0x91
 3419 02d1 50       		.sleb128 -48
 3420 02d2 00000000 		.4byte	0
 3421 02d6 00000000 		.4byte	0
 3422              	.LLST25:
 3423 02da 36020000 		.4byte	.LVL112
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 71


 3424 02de 5E020000 		.4byte	.LVL117
 3425 02e2 0600     		.2byte	0x6
 3426 02e4 58       		.byte	0x58
 3427 02e5 93       		.byte	0x93
 3428 02e6 04       		.uleb128 0x4
 3429 02e7 59       		.byte	0x59
 3430 02e8 93       		.byte	0x93
 3431 02e9 04       		.uleb128 0x4
 3432 02ea 00000000 		.4byte	0
 3433 02ee 00000000 		.4byte	0
 3434              	.LLST26:
 3435 02f2 4A020000 		.4byte	.LVL114
 3436 02f6 58020000 		.4byte	.LVL115
 3437 02fa 0600     		.2byte	0x6
 3438 02fc 50       		.byte	0x50
 3439 02fd 93       		.byte	0x93
 3440 02fe 04       		.uleb128 0x4
 3441 02ff 51       		.byte	0x51
 3442 0300 93       		.byte	0x93
 3443 0301 04       		.uleb128 0x4
 3444 0302 58020000 		.4byte	.LVL115
 3445 0306 F4020000 		.4byte	.LFE74
 3446 030a 0200     		.2byte	0x2
 3447 030c 91       		.byte	0x91
 3448 030d 48       		.sleb128 -56
 3449 030e 00000000 		.4byte	0
 3450 0312 00000000 		.4byte	0
 3451              	.LLST27:
 3452 0316 72020000 		.4byte	.LVL119
 3453 031a 8A020000 		.4byte	.LVL120
 3454 031e 0600     		.2byte	0x6
 3455 0320 50       		.byte	0x50
 3456 0321 93       		.byte	0x93
 3457 0322 04       		.uleb128 0x4
 3458 0323 51       		.byte	0x51
 3459 0324 93       		.byte	0x93
 3460 0325 04       		.uleb128 0x4
 3461 0326 00000000 		.4byte	0
 3462 032a 00000000 		.4byte	0
 3463              	.LLST28:
 3464 032e 12010000 		.4byte	.LVL73
 3465 0332 14010000 		.4byte	.LVL74
 3466 0336 0200     		.2byte	0x2
 3467 0338 30       		.byte	0x30
 3468 0339 9F       		.byte	0x9f
 3469 033a 14010000 		.4byte	.LVL74
 3470 033e 40010000 		.4byte	.LVL76
 3471 0342 0100     		.2byte	0x1
 3472 0344 53       		.byte	0x53
 3473 0345 42010000 		.4byte	.LVL77
 3474 0349 48010000 		.4byte	.LVL78
 3475 034d 0100     		.2byte	0x1
 3476 034f 53       		.byte	0x53
 3477 0350 00000000 		.4byte	0
 3478 0354 00000000 		.4byte	0
 3479              	.LLST29:
 3480 0358 4C010000 		.4byte	.LVL79
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 72


 3481 035c 5C010000 		.4byte	.LVL82
 3482 0360 0100     		.2byte	0x1
 3483 0362 53       		.byte	0x53
 3484 0363 5E010000 		.4byte	.LVL83
 3485 0367 72010000 		.4byte	.LVL85
 3486 036b 0100     		.2byte	0x1
 3487 036d 53       		.byte	0x53
 3488 036e 00000000 		.4byte	0
 3489 0372 00000000 		.4byte	0
 3490              		.section	.debug_aranges,"",%progbits
 3491 0000 6C000000 		.4byte	0x6c
 3492 0004 0200     		.2byte	0x2
 3493 0006 00000000 		.4byte	.Ldebug_info0
 3494 000a 04       		.byte	0x4
 3495 000b 00       		.byte	0
 3496 000c 0000     		.2byte	0
 3497 000e 0000     		.2byte	0
 3498 0010 00000000 		.4byte	.LFB72
 3499 0014 02000000 		.4byte	.LFE72-.LFB72
 3500 0018 00000000 		.4byte	.LFB66
 3501 001c 28000000 		.4byte	.LFE66-.LFB66
 3502 0020 00000000 		.4byte	.LFB67
 3503 0024 28000000 		.4byte	.LFE67-.LFB67
 3504 0028 00000000 		.4byte	.LFB68
 3505 002c 84000000 		.4byte	.LFE68-.LFB68
 3506 0030 00000000 		.4byte	.LFB69
 3507 0034 84000000 		.4byte	.LFE69-.LFB69
 3508 0038 00000000 		.4byte	.LFB70
 3509 003c 20000000 		.4byte	.LFE70-.LFB70
 3510 0040 00000000 		.4byte	.LFB71
 3511 0044 20000000 		.4byte	.LFE71-.LFB71
 3512 0048 00000000 		.4byte	.LFB64
 3513 004c 28000000 		.4byte	.LFE64-.LFB64
 3514 0050 00000000 		.4byte	.LFB65
 3515 0054 14000000 		.4byte	.LFE65-.LFB65
 3516 0058 00000000 		.4byte	.LFB73
 3517 005c 3C000000 		.4byte	.LFE73-.LFB73
 3518 0060 00000000 		.4byte	.LFB74
 3519 0064 F4020000 		.4byte	.LFE74-.LFB74
 3520 0068 00000000 		.4byte	0
 3521 006c 00000000 		.4byte	0
 3522              		.section	.debug_ranges,"",%progbits
 3523              	.Ldebug_ranges0:
 3524 0000 00000000 		.4byte	.LFB72
 3525 0004 02000000 		.4byte	.LFE72
 3526 0008 00000000 		.4byte	.LFB66
 3527 000c 28000000 		.4byte	.LFE66
 3528 0010 00000000 		.4byte	.LFB67
 3529 0014 28000000 		.4byte	.LFE67
 3530 0018 00000000 		.4byte	.LFB68
 3531 001c 84000000 		.4byte	.LFE68
 3532 0020 00000000 		.4byte	.LFB69
 3533 0024 84000000 		.4byte	.LFE69
 3534 0028 00000000 		.4byte	.LFB70
 3535 002c 20000000 		.4byte	.LFE70
 3536 0030 00000000 		.4byte	.LFB71
 3537 0034 20000000 		.4byte	.LFE71
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 73


 3538 0038 00000000 		.4byte	.LFB64
 3539 003c 28000000 		.4byte	.LFE64
 3540 0040 00000000 		.4byte	.LFB65
 3541 0044 14000000 		.4byte	.LFE65
 3542 0048 00000000 		.4byte	.LFB73
 3543 004c 3C000000 		.4byte	.LFE73
 3544 0050 00000000 		.4byte	.LFB74
 3545 0054 F4020000 		.4byte	.LFE74
 3546 0058 00000000 		.4byte	0
 3547 005c 00000000 		.4byte	0
 3548              		.section	.debug_line,"",%progbits
 3549              	.Ldebug_line0:
 3550 0000 C8040000 		.section	.debug_str,"MS",%progbits,1
 3550      02005903 
 3550      00000201 
 3550      FB0E0D00 
 3550      01010101 
 3551              	.LASF134:
 3552 0000 6D61696E 		.ascii	"main.c\000"
 3552      2E6300
 3553              	.LASF32:
 3554 0007 616E6776 		.ascii	"angv\000"
 3554      00
 3555              	.LASF109:
 3556 000c 636F756E 		.ascii	"count_to_angv\000"
 3556      745F746F 
 3556      5F616E67 
 3556      7600
 3557              	.LASF123:
 3558 001a 5049445F 		.ascii	"PID_initialise\000"
 3558      696E6974 
 3558      69616C69 
 3558      736500
 3559              	.LASF66:
 3560 0029 726F626F 		.ascii	"robot_linv\000"
 3560      745F6C69 
 3560      6E7600
 3561              	.LASF95:
 3562 0034 456E636F 		.ascii	"Encoder_L0_Timer_ReadCapture\000"
 3562      6465725F 
 3562      4C305F54 
 3562      696D6572 
 3562      5F526561 
 3563              	.LASF13:
 3564 0051 756E7369 		.ascii	"unsigned int\000"
 3564      676E6564 
 3564      20696E74 
 3564      00
 3565              	.LASF8:
 3566 005e 5F5F696E 		.ascii	"__int32_t\000"
 3566      7433325F 
 3566      7400
 3567              	.LASF93:
 3568 0068 456E636F 		.ascii	"Encoder_R0_Timer_Start\000"
 3568      6465725F 
 3568      52305F54 
 3568      696D6572 
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 74


 3568      5F537461 
 3569              	.LASF98:
 3570 007f 456E636F 		.ascii	"Encoder_L0_Timer_Start\000"
 3570      6465725F 
 3570      4C305F54 
 3570      696D6572 
 3570      5F537461 
 3571              	.LASF126:
 3572 0096 454E434F 		.ascii	"ENCODER_R0_OVF_ISR_StartEx\000"
 3572      4445525F 
 3572      52305F4F 
 3572      56465F49 
 3572      53525F53 
 3573              	.LASF106:
 3574 00b1 55534255 		.ascii	"USBUART_PutChar\000"
 3574      4152545F 
 3574      50757443 
 3574      68617200 
 3575              	.LASF83:
 3576 00c1 525F6469 		.ascii	"R_direction\000"
 3576      72656374 
 3576      696F6E00 
 3577              	.LASF35:
 3578 00cd 454E434F 		.ascii	"ENCODER_L0_OVF_ISR_vect\000"
 3578      4445525F 
 3578      4C305F4F 
 3578      56465F49 
 3578      53525F76 
 3579              	.LASF69:
 3580 00e5 6E65775F 		.ascii	"new_angv\000"
 3580      616E6776 
 3580      00
 3581              	.LASF65:
 3582 00ee 6C696E76 		.ascii	"linv_Rw\000"
 3582      5F527700 
 3583              	.LASF26:
 3584 00f6 44676169 		.ascii	"Dgain\000"
 3584      6E00
 3585              	.LASF105:
 3586 00fc 55534255 		.ascii	"USBUART_PutData\000"
 3586      4152545F 
 3586      50757444 
 3586      61746100 
 3587              	.LASF74:
 3588 010c 72656365 		.ascii	"receiving_buffer_ptr\000"
 3588      6976696E 
 3588      675F6275 
 3588      66666572 
 3588      5F707472 
 3589              	.LASF118:
 3590 0121 55534255 		.ascii	"USBUART_Start\000"
 3590      4152545F 
 3590      53746172 
 3590      7400
 3591              	.LASF114:
 3592 012f 6D6F7665 		.ascii	"move_robot\000"
 3592      5F726F62 
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 75


 3592      6F7400
 3593              	.LASF99:
 3594 013a 456E636F 		.ascii	"Encoder_R0_Read\000"
 3594      6465725F 
 3594      52305F52 
 3594      65616400 
 3595              	.LASF43:
 3596 014a 75736250 		.ascii	"usbPutString\000"
 3596      75745374 
 3596      72696E67 
 3596      00
 3597              	.LASF84:
 3598 0157 4C5F6469 		.ascii	"L_direction\000"
 3598      72656374 
 3598      696F6E00 
 3599              	.LASF56:
 3600 0163 6C696E76 		.ascii	"linv_LSB\000"
 3600      5F4C5342 
 3600      00
 3601              	.LASF90:
 3602 016c 456E636F 		.ascii	"Encoder_R0_Timer_ReadCapture\000"
 3602      6465725F 
 3602      52305F54 
 3602      696D6572 
 3602      5F526561 
 3603              	.LASF61:
 3604 0189 7363616C 		.ascii	"scaled_argv\000"
 3604      65645F61 
 3604      72677600 
 3605              	.LASF94:
 3606 0195 456E636F 		.ascii	"Encoder_L0_Timer_ReadPeriod\000"
 3606      6465725F 
 3606      4C305F54 
 3606      696D6572 
 3606      5F526561 
 3607              	.LASF20:
 3608 01b1 666C6F61 		.ascii	"float\000"
 3608      7400
 3609              	.LASF119:
 3610 01b7 50574D5F 		.ascii	"PWM_L_Start\000"
 3610      4C5F5374 
 3610      61727400 
 3611              	.LASF110:
 3612 01c3 6D6F746F 		.ascii	"motor_angv_to_wheel_linv\000"
 3612      725F616E 
 3612      67765F74 
 3612      6F5F7768 
 3612      65656C5F 
 3613              	.LASF122:
 3614 01dc 6D616C6C 		.ascii	"malloc\000"
 3614      6F6300
 3615              	.LASF67:
 3616 01e3 726F626F 		.ascii	"robot_angv\000"
 3616      745F616E 
 3616      677600
 3617              	.LASF15:
 3618 01ee 696E7431 		.ascii	"int16_t\000"
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 76


 3618      365F7400 
 3619              	.LASF12:
 3620 01f6 6C6F6E67 		.ascii	"long long unsigned int\000"
 3620      206C6F6E 
 3620      6720756E 
 3620      7369676E 
 3620      65642069 
 3621              	.LASF6:
 3622 020d 5F5F7569 		.ascii	"__uint16_t\000"
 3622      6E743136 
 3622      5F7400
 3623              	.LASF59:
 3624 0218 61726776 		.ascii	"argv_MSB\000"
 3624      5F4D5342 
 3624      00
 3625              	.LASF127:
 3626 0221 454E434F 		.ascii	"ENCODER_L0_OVF_ISR_StartEx\000"
 3626      4445525F 
 3626      4C305F4F 
 3626      56465F49 
 3626      53525F53 
 3627              	.LASF76:
 3628 023c 72785F62 		.ascii	"rx_buffer_size\000"
 3628      75666665 
 3628      725F7369 
 3628      7A6500
 3629              	.LASF133:
 3630 024b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3630      43313120 
 3630      352E342E 
 3630      31203230 
 3630      31363036 
 3631 027e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3631      20726576 
 3631      6973696F 
 3631      6E203233 
 3631      37373135 
 3632 02b1 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3632      66756E63 
 3632      74696F6E 
 3632      2D736563 
 3632      74696F6E 
 3633              	.LASF89:
 3634 02d9 456E636F 		.ascii	"Encoder_R0_Timer_ReadPeriod\000"
 3634      6465725F 
 3634      52305F54 
 3634      696D6572 
 3634      5F526561 
 3635              	.LASF72:
 3636 02f5 62756666 		.ascii	"buffer_1\000"
 3636      65725F31 
 3636      00
 3637              	.LASF73:
 3638 02fe 62756666 		.ascii	"buffer_2\000"
 3638      65725F32 
 3638      00
 3639              	.LASF62:
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 77


 3640 0307 6D6F746F 		.ascii	"motor_angv_R\000"
 3640      725F616E 
 3640      67765F52 
 3640      00
 3641              	.LASF38:
 3642 0314 74696D65 		.ascii	"timer_period\000"
 3642      725F7065 
 3642      72696F64 
 3642      00
 3643              	.LASF125:
 3644 0321 72785F69 		.ascii	"rx_isr_StartEx\000"
 3644      73725F53 
 3644      74617274 
 3644      457800
 3645              	.LASF87:
 3646 0330 456E636F 		.ascii	"Encoder_R0_Timer_Stop\000"
 3646      6465725F 
 3646      52305F54 
 3646      696D6572 
 3646      5F53746F 
 3647              	.LASF33:
 3648 0346 524F424F 		.ascii	"ROBOT_COMMAND\000"
 3648      545F434F 
 3648      4D4D414E 
 3648      4400
 3649              	.LASF124:
 3650 0354 74785F69 		.ascii	"tx_isr_StartEx\000"
 3650      73725F53 
 3650      74617274 
 3650      457800
 3651              	.LASF100:
 3652 0363 456E636F 		.ascii	"Encoder_R1_ClearInterrupt\000"
 3652      6465725F 
 3652      52315F43 
 3652      6C656172 
 3652      496E7465 
 3653              	.LASF42:
 3654 037d 656E636F 		.ascii	"encoder_L0_pin_state\000"
 3654      6465725F 
 3654      4C305F70 
 3654      696E5F73 
 3654      74617465 
 3655              	.LASF88:
 3656 0392 456E636F 		.ascii	"Encoder_L0_Timer_Stop\000"
 3656      6465725F 
 3656      4C305F54 
 3656      696D6572 
 3656      5F53746F 
 3657              	.LASF85:
 3658 03a8 7069645F 		.ascii	"pid_linv\000"
 3658      6C696E76 
 3658      00
 3659              	.LASF54:
 3660 03b1 63686563 		.ascii	"check_sum\000"
 3660      6B5F7375 
 3660      6D00
 3661              	.LASF48:
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 78


 3662 03bb 72656164 		.ascii	"read_buffer_size\000"
 3662      5F627566 
 3662      6665725F 
 3662      73697A65 
 3662      00
 3663              	.LASF130:
 3664 03cc 454E435F 		.ascii	"ENC_R1_ISR_StartEx\000"
 3664      52315F49 
 3664      53525F53 
 3664      74617274 
 3664      457800
 3665              	.LASF27:
 3666 03df 49676169 		.ascii	"Igain\000"
 3666      6E00
 3667              	.LASF21:
 3668 03e5 63686172 		.ascii	"char\000"
 3668      00
 3669              	.LASF77:
 3670 03ea 74696D65 		.ascii	"timerL0_count\000"
 3670      724C305F 
 3670      636F756E 
 3670      7400
 3671              	.LASF45:
 3672 03f8 73747269 		.ascii	"string\000"
 3672      6E6700
 3673              	.LASF111:
 3674 03ff 6765745F 		.ascii	"get_robot_linv\000"
 3674      726F626F 
 3674      745F6C69 
 3674      6E7600
 3675              	.LASF40:
 3676 040e 656E636F 		.ascii	"encoder_R0_pin_state\000"
 3676      6465725F 
 3676      52305F70 
 3676      696E5F73 
 3676      74617465 
 3677              	.LASF60:
 3678 0423 7363616C 		.ascii	"scaled_linv\000"
 3678      65645F6C 
 3678      696E7600 
 3679              	.LASF14:
 3680 042f 75696E74 		.ascii	"uint8_t\000"
 3680      385F7400 
 3681              	.LASF37:
 3682 0437 454E435F 		.ascii	"ENC_L0_ISR_vect\000"
 3682      4C305F49 
 3682      53525F76 
 3682      65637400 
 3683              	.LASF11:
 3684 0447 6C6F6E67 		.ascii	"long long int\000"
 3684      206C6F6E 
 3684      6720696E 
 3684      7400
 3685              	.LASF120:
 3686 0455 50574D5F 		.ascii	"PWM_R_Start\000"
 3686      525F5374 
 3686      61727400 
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 79


 3687              	.LASF107:
 3688 0461 55415254 		.ascii	"UART_ReadRxStatus\000"
 3688      5F526561 
 3688      64527853 
 3688      74617475 
 3688      7300
 3689              	.LASF36:
 3690 0473 454E435F 		.ascii	"ENC_R0_ISR_vect\000"
 3690      52305F49 
 3690      53525F76 
 3690      65637400 
 3691              	.LASF131:
 3692 0483 454E435F 		.ascii	"ENC_L1_ISR_StartEx\000"
 3692      4C315F49 
 3692      53525F53 
 3692      74617274 
 3692      457800
 3693              	.LASF4:
 3694 0496 5F5F696E 		.ascii	"__int16_t\000"
 3694      7431365F 
 3694      7400
 3695              	.LASF136:
 3696 04a0 54585F49 		.ascii	"TX_ISR_vect\000"
 3696      53525F76 
 3696      65637400 
 3697              	.LASF79:
 3698 04ac 74696D65 		.ascii	"timerL0_overflows\000"
 3698      724C305F 
 3698      6F766572 
 3698      666C6F77 
 3698      7300
 3699              	.LASF113:
 3700 04be 5049445F 		.ascii	"PID_update\000"
 3700      75706461 
 3700      746500
 3701              	.LASF86:
 3702 04c9 7069645F 		.ascii	"pid_angv\000"
 3702      616E6776 
 3702      00
 3703              	.LASF19:
 3704 04d2 75696E74 		.ascii	"uint32\000"
 3704      333200
 3705              	.LASF108:
 3706 04d9 55415254 		.ascii	"UART_GetChar\000"
 3706      5F476574 
 3706      43686172 
 3706      00
 3707              	.LASF92:
 3708 04e6 456E636F 		.ascii	"Encoder_R0_Timer_WriteCounter\000"
 3708      6465725F 
 3708      52305F54 
 3708      696D6572 
 3708      5F577269 
 3709              	.LASF78:
 3710 0504 74696D65 		.ascii	"timerR0_count\000"
 3710      7252305F 
 3710      636F756E 
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 80


 3710      7400
 3711              	.LASF82:
 3712 0512 74696D65 		.ascii	"timerR0_index\000"
 3712      7252305F 
 3712      696E6465 
 3712      7800
 3713              	.LASF55:
 3714 0520 726F626F 		.ascii	"robot_data_index\000"
 3714      745F6461 
 3714      74615F69 
 3714      6E646578 
 3714      00
 3715              	.LASF58:
 3716 0531 6C696E76 		.ascii	"linv_MSB\000"
 3716      5F4D5342 
 3716      00
 3717              	.LASF70:
 3718 053a 5F426F6F 		.ascii	"_Bool\000"
 3718      6C00
 3719              	.LASF116:
 3720 0540 454E434F 		.ascii	"ENCODER_TMR_RESET_Write\000"
 3720      4445525F 
 3720      544D525F 
 3720      52455345 
 3720      545F5772 
 3721              	.LASF104:
 3722 0558 7374726C 		.ascii	"strlen\000"
 3722      656E00
 3723              	.LASF112:
 3724 055f 6765745F 		.ascii	"get_robot_angv\000"
 3724      726F626F 
 3724      745F616E 
 3724      677600
 3725              	.LASF80:
 3726 056e 74696D65 		.ascii	"timerR0_overflows\000"
 3726      7252305F 
 3726      6F766572 
 3726      666C6F77 
 3726      7300
 3727              	.LASF23:
 3728 0580 6C6F6E67 		.ascii	"long double\000"
 3728      20646F75 
 3728      626C6500 
 3729              	.LASF132:
 3730 058c 73707269 		.ascii	"sprintf\000"
 3730      6E746600 
 3731              	.LASF16:
 3732 0594 75696E74 		.ascii	"uint16_t\000"
 3732      31365F74 
 3732      00
 3733              	.LASF22:
 3734 059d 72656733 		.ascii	"reg32\000"
 3734      3200
 3735              	.LASF29:
 3736 05a3 6572726F 		.ascii	"error_sum\000"
 3736      725F7375 
 3736      6D00
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 81


 3737              	.LASF51:
 3738 05ad 73746172 		.ascii	"starting_index\000"
 3738      74696E67 
 3738      5F696E64 
 3738      657800
 3739              	.LASF5:
 3740 05bc 73686F72 		.ascii	"short int\000"
 3740      7420696E 
 3740      7400
 3741              	.LASF28:
 3742 05c6 70726576 		.ascii	"previous_error\000"
 3742      696F7573 
 3742      5F657272 
 3742      6F7200
 3743              	.LASF9:
 3744 05d5 6C6F6E67 		.ascii	"long int\000"
 3744      20696E74 
 3744      00
 3745              	.LASF71:
 3746 05de 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3746      52784275 
 3746      66666572 
 3746      00
 3747              	.LASF53:
 3748 05eb 74656D70 		.ascii	"temp\000"
 3748      00
 3749              	.LASF101:
 3750 05f0 456E636F 		.ascii	"Encoder_L0_Read\000"
 3750      6465725F 
 3750      4C305F52 
 3750      65616400 
 3751              	.LASF34:
 3752 0600 454E434F 		.ascii	"ENCODER_R0_OVF_ISR_vect\000"
 3752      4445525F 
 3752      52305F4F 
 3752      56465F49 
 3752      53525F76 
 3753              	.LASF3:
 3754 0618 5F5F7569 		.ascii	"__uint8_t\000"
 3754      6E74385F 
 3754      7400
 3755              	.LASF39:
 3756 0622 454E435F 		.ascii	"ENC_R1_ISR_vect\000"
 3756      52315F49 
 3756      53525F76 
 3756      65637400 
 3757              	.LASF75:
 3758 0632 70726F63 		.ascii	"processing_buffer_ptr\000"
 3758      65737369 
 3758      6E675F62 
 3758      75666665 
 3758      725F7074 
 3759              	.LASF64:
 3760 0648 6C696E76 		.ascii	"linv_Lw\000"
 3760      5F4C7700 
 3761              	.LASF117:
 3762 0650 55415254 		.ascii	"UART_Start\000"
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 82


 3762      5F537461 
 3762      727400
 3763              	.LASF97:
 3764 065b 456E636F 		.ascii	"Encoder_L0_Timer_WriteCounter\000"
 3764      6465725F 
 3764      4C305F54 
 3764      696D6572 
 3764      5F577269 
 3765              	.LASF24:
 3766 0679 73697A65 		.ascii	"sizetype\000"
 3766      74797065 
 3766      00
 3767              	.LASF10:
 3768 0682 6C6F6E67 		.ascii	"long unsigned int\000"
 3768      20756E73 
 3768      69676E65 
 3768      6420696E 
 3768      7400
 3769              	.LASF103:
 3770 0694 55534255 		.ascii	"USBUART_CDCIsReady\000"
 3770      4152545F 
 3770      43444349 
 3770      73526561 
 3770      647900
 3771              	.LASF17:
 3772 06a7 696E7433 		.ascii	"int32_t\000"
 3772      325F7400 
 3773              	.LASF41:
 3774 06af 454E435F 		.ascii	"ENC_L1_ISR_vect\000"
 3774      4C315F49 
 3774      53525F76 
 3774      65637400 
 3775              	.LASF46:
 3776 06bf 52585F49 		.ascii	"RX_ISR_vect\000"
 3776      53525F76 
 3776      65637400 
 3777              	.LASF2:
 3778 06cb 756E7369 		.ascii	"unsigned char\000"
 3778      676E6564 
 3778      20636861 
 3778      7200
 3779              	.LASF91:
 3780 06d9 456E636F 		.ascii	"Encoder_R0_Timer_ClearFIFO\000"
 3780      6465725F 
 3780      52305F54 
 3780      696D6572 
 3780      5F436C65 
 3781              	.LASF50:
 3782 06f4 63757272 		.ascii	"current_command\000"
 3782      656E745F 
 3782      636F6D6D 
 3782      616E6400 
 3783              	.LASF96:
 3784 0704 456E636F 		.ascii	"Encoder_L0_Timer_ClearFIFO\000"
 3784      6465725F 
 3784      4C305F54 
 3784      696D6572 
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 83


 3784      5F436C65 
 3785              	.LASF31:
 3786 071f 6C696E76 		.ascii	"linv\000"
 3786      00
 3787              	.LASF63:
 3788 0724 6D6F746F 		.ascii	"motor_angv_L\000"
 3788      725F616E 
 3788      67765F4C 
 3788      00
 3789              	.LASF135:
 3790 0731 433A5C55 		.ascii	"C:\\Users\\bscj\\Documents\\Curtis\\Robotics Projec"
 3790      73657273 
 3790      5C627363 
 3790      6A5C446F 
 3790      63756D65 
 3791 075f 745C526F 		.ascii	"t\\Robot_PSoC_test.cydsn\\Robot_PSoC_test.cydsn\000"
 3791      626F745F 
 3791      50536F43 
 3791      5F746573 
 3791      742E6379 
 3792              	.LASF30:
 3793 078d 5049445F 		.ascii	"PID_DATA\000"
 3793      44415441 
 3793      00
 3794              	.LASF102:
 3795 0796 456E636F 		.ascii	"Encoder_L1_ClearInterrupt\000"
 3795      6465725F 
 3795      4C315F43 
 3795      6C656172 
 3795      496E7465 
 3796              	.LASF57:
 3797 07b0 61726776 		.ascii	"argv_LSB\000"
 3797      5F4C5342 
 3797      00
 3798              	.LASF44:
 3799 07b9 75736250 		.ascii	"usbPutChar\000"
 3799      75744368 
 3799      617200
 3800              	.LASF1:
 3801 07c4 7369676E 		.ascii	"signed char\000"
 3801      65642063 
 3801      68617200 
 3802              	.LASF7:
 3803 07d0 73686F72 		.ascii	"short unsigned int\000"
 3803      7420756E 
 3803      7369676E 
 3803      65642069 
 3803      6E7400
 3804              	.LASF137:
 3805 07e3 6D61696E 		.ascii	"main\000"
 3805      00
 3806              	.LASF81:
 3807 07e8 74696D65 		.ascii	"timerL0_index\000"
 3807      724C305F 
 3807      696E6465 
 3807      7800
 3808              	.LASF18:
ARM GAS  C:\Users\bscj\AppData\Local\Temp\cceFw1QO.s 			page 84


 3809 07f6 75696E74 		.ascii	"uint8\000"
 3809      3800
 3810              	.LASF0:
 3811 07fc 646F7562 		.ascii	"double\000"
 3811      6C6500
 3812              	.LASF121:
 3813 0803 6765745F 		.ascii	"get_robot_ID\000"
 3813      726F626F 
 3813      745F4944 
 3813      00
 3814              	.LASF49:
 3815 0810 726F626F 		.ascii	"robot_id\000"
 3815      745F6964 
 3815      00
 3816              	.LASF47:
 3817 0819 62797465 		.ascii	"byte_received\000"
 3817      5F726563 
 3817      65697665 
 3817      6400
 3818              	.LASF115:
 3819 0827 50574D5F 		.ascii	"PWM_RESET_Write\000"
 3819      52455345 
 3819      545F5772 
 3819      69746500 
 3820              	.LASF52:
 3821 0837 7472616E 		.ascii	"transmission_corrupted\000"
 3821      736D6973 
 3821      73696F6E 
 3821      5F636F72 
 3821      72757074 
 3822              	.LASF68:
 3823 084e 6E65775F 		.ascii	"new_linv\000"
 3823      6C696E76 
 3823      00
 3824              	.LASF25:
 3825 0857 50676169 		.ascii	"Pgain\000"
 3825      6E00
 3826              	.LASF128:
 3827 085d 454E435F 		.ascii	"ENC_R0_ISR_StartEx\000"
 3827      52305F49 
 3827      53525F53 
 3827      74617274 
 3827      457800
 3828              	.LASF129:
 3829 0870 454E435F 		.ascii	"ENC_L0_ISR_StartEx\000"
 3829      4C305F49 
 3829      53525F53 
 3829      74617274 
 3829      457800
 3830              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
